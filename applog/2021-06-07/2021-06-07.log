2021-06-07 10:24:18 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 6904 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 10:24:18 -The following profiles are active: dev
2021-06-07 10:24:19 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 10:24:19 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c1909a3: startup date [Mon Jun 07 10:24:19 CST 2021]; root of context hierarchy
2021-06-07 10:24:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 10:24:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$51107268] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 10:24:21 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 10:24:21 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 10:24:21 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 10:31:59 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 9340 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 10:31:59 -The following profiles are active: dev
2021-06-07 10:31:59 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 10:31:59 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 10:31:59 CST 2021]; root of context hierarchy
2021-06-07 10:32:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 10:32:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$357f8e49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 10:32:00 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 10:32:00 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 10:32:00 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 10:32:45 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 10076 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 10:32:45 -The following profiles are active: dev
2021-06-07 10:32:45 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 10:32:45 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 10:32:45 CST 2021]; root of context hierarchy
2021-06-07 10:32:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 10:32:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$357f8e49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 10:32:46 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 10:32:46 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 10:32:46 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 10:33:18 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 4104 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 10:33:18 -The following profiles are active: dev
2021-06-07 10:33:18 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 10:33:18 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 10:33:18 CST 2021]; root of context hierarchy
2021-06-07 10:33:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 10:33:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$357f8e49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 10:33:19 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 10:33:19 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 10:33:19 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 10:37:26 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 9268 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 10:37:26 -The following profiles are active: dev
2021-06-07 10:37:26 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 10:37:26 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 10:37:26 CST 2021]; root of context hierarchy
2021-06-07 10:37:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 10:37:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$357f8e49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 10:37:28 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 10:37:28 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 10:37:28 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 10:39:22 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 7796 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 10:39:22 -The following profiles are active: dev
2021-06-07 10:39:22 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 10:39:22 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 10:39:22 CST 2021]; root of context hierarchy
2021-06-07 10:39:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 10:39:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d23a814c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 10:39:23 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 10:39:23 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 10:39:23 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:27)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 10:40:24 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 8876 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 10:40:24 -The following profiles are active: dev
2021-06-07 10:40:24 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 10:40:24 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 10:40:24 CST 2021]; root of context hierarchy
2021-06-07 10:40:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 10:40:25 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$357f8e49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 10:40:25 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 10:40:25 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 10:40:25 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 10:47:10 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 9424 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 10:47:10 -The following profiles are active: dev
2021-06-07 10:47:10 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 10:47:10 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@5ce33a58: startup date [Mon Jun 07 10:47:10 CST 2021]; root of context hierarchy
2021-06-07 10:47:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 10:47:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4a395b9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 10:47:12 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 10:47:12 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 10:47:12 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 10:52:17 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 8440 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 10:52:17 -The following profiles are active: dev
2021-06-07 10:52:17 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 10:52:17 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 10:52:17 CST 2021]; root of context hierarchy
2021-06-07 10:52:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 10:52:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$357f8e49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 10:52:18 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 10:52:18 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 10:52:18 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 11:00:55 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 12592 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 11:00:55 -The following profiles are active: dev
2021-06-07 11:00:55 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 11:00:55 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@428640fa: startup date [Mon Jun 07 11:00:55 CST 2021]; root of context hierarchy
2021-06-07 11:00:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 11:00:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$749ed153] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:00:57 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 11:00:57 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 11:00:57 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 11:12:53 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 13580 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 11:12:53 -The following profiles are active: dev
2021-06-07 11:12:53 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 11:12:53 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@428640fa: startup date [Mon Jun 07 11:12:53 CST 2021]; root of context hierarchy
2021-06-07 11:12:54 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 11:12:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$749ed153] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:12:55 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 11:12:55 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 11:12:55 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 11:15:40 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 13560 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 11:15:40 -The following profiles are active: dev
2021-06-07 11:15:40 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 11:15:40 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 11:15:40 CST 2021]; root of context hierarchy
2021-06-07 11:15:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 11:15:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$44996f59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:15:42 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 11:15:42 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 11:15:42 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 11:23:49 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 11144 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 11:23:49 -The following profiles are active: dev
2021-06-07 11:23:49 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 11:23:49 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 11:23:49 CST 2021]; root of context hierarchy
2021-06-07 11:23:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 11:23:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$44996f59] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:23:51 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 11:23:51 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 11:23:51 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 11:26:07 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 9620 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 11:26:07 -The following profiles are active: dev
2021-06-07 11:26:07 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 11:26:07 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 11:26:07 CST 2021]; root of context hierarchy
2021-06-07 11:26:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 11:26:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4fe74dee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:26:08 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 11:26:08 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 11:26:08 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 11:32:03 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 11916 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 11:32:03 -The following profiles are active: dev
2021-06-07 11:32:03 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 11:32:03 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2d710f1a: startup date [Mon Jun 07 11:32:03 CST 2021]; root of context hierarchy
2021-06-07 11:32:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 11:32:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7bae4815] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:32:04 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
2021-06-07 11:32:04 -

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2021-06-07 11:32:04 -Application startup failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroFilterFactoryBean' defined in class path resource [com/shiguang/system/config/ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:237)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:703)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:528)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.shiguang.BootdoApplication.main(BootdoApplication.java:26)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'shiroConfig' defined in file [F:\sg\shiguang\shiguang-manager\target\classes\com\shiguang\system\config\ShiroConfig.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:479)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 14 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:92)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:102)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:88)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:103)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:248)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1037)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1011)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:473)
	... 35 common frames omitted
Caused by: java.lang.IllegalArgumentException: error Type referred to is not an annotation type: com$shaicha$common$annotation$Log
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:217)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.checkReadyToMatch(AspectJExpressionPointcut.java:190)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:169)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:220)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:279)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:311)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:119)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:89)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:70)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:346)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:298)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1633)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	... 57 common frames omitted
2021-06-07 11:35:57 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 6308 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 11:35:57 -The following profiles are active: dev
2021-06-07 11:35:57 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 11:35:57 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 11:35:57 CST 2021]; root of context hierarchy
2021-06-07 11:35:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 11:35:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6783a92a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:35:58 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$580e742c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:35:58 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:35:59 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:35:59 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 11:35:59 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 11:35:59 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:35:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:35:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:35:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:35:59 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 11:35:59 -Starting service [Tomcat]
2021-06-07 11:35:59 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 11:35:59 -Initializing Spring embedded WebApplicationContext
2021-06-07 11:35:59 -Root WebApplicationContext: initialization completed in 2062 ms
2021-06-07 11:35:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 11:35:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 11:35:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 11:35:59 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 11:35:59 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 11:35:59 -Filter xssFilter was not registered (disabled)
2021-06-07 11:35:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 11:35:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 11:35:59 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 11:35:59 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 11:36:00 -{dataSource-1} inited
2021-06-07 11:36:00 -Using default implementation for ThreadExecutor
2021-06-07 11:36:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 11:36:00 -Quartz Scheduler v.2.2.1 created.
2021-06-07 11:36:00 -RAMJobStore initialized.
2021-06-07 11:36:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 11:36:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 11:36:00 -Quartz scheduler version: 2.2.1
2021-06-07 11:36:00 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@3fb450d7
2021-06-07 11:36:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 11:36:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 11:36:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 11:36:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 11:36:01 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 11:36:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 11:36:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 11:36:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 11:36:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 11:36:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 11:36:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 11:36:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 11:36:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 11:36:01 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 11:36:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 11:36:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 11:36:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 11:36:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 11:36:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 11:36:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 11:36:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 11:36:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 11:36:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 11:36:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 11:36:01 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 11:36:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 11:36:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 11:36:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 11:36:01 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 11:36:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 11:36:01 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 11:36:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 11:36:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 11:36:01 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 11:36:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 11:36:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 11:36:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 11:36:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 11:36:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 11:36:01 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 11:36:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 11:36:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 11:36:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 11:36:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 11:36:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 11:36:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 11:36:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 11:36:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 11:36:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 11:36:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 11:36:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 11:36:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 11:36:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 11:36:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 11:36:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 11:36:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 11:36:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 11:36:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 11:36:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 11:36:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 11:36:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 11:36:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 11:36:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 11:36:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 11:36:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 11:36:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 11:36:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 11:36:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 11:36:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 11:36:01 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 11:36:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 11:36:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 11:36:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 11:36:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 11:36:01 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 11:36:01 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 11:36:01 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 11:36:01 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:36:01 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 11:36:01 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 11:36:01 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 11:36:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 11:36:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 11:36:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 11:36:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 11:36:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 11:36:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 11:36:01 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 11:36:02 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 11:35:57 CST 2021]; root of context hierarchy
2021-06-07 11:36:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 11:36:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 11:36:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 11:36:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 11:36:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 11:36:02 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 11:36:03 -

Using default security password: f0acd4a1-95d3-4fa9-9025-0ab91b0c3c2a

2021-06-07 11:36:03 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 11:36:03 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@27dc81be, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3595086b, org.springframework.security.web.context.SecurityContextPersistenceFilter@6dde1bf5, org.springframework.security.web.header.HeaderWriterFilter@11c999da, org.springframework.security.web.csrf.CsrfFilter@7c0b0bd9, org.springframework.security.web.authentication.logout.LogoutFilter@279e1422, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35841d6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5d7ff311, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@627d35ff, org.springframework.security.web.session.SessionManagementFilter@3c4ad54, org.springframework.security.web.access.ExceptionTranslationFilter@126af200]
2021-06-07 11:36:03 -Registering beans for JMX exposure on startup
2021-06-07 11:36:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 11:36:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 11:36:03 -Starting beans in phase 2147483647
2021-06-07 11:36:03 -Context refreshed
2021-06-07 11:36:03 -Found 1 custom documentation plugin(s)
2021-06-07 11:36:03 -Scanning for api listing references
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_1
2021-06-07 11:36:03 -Generating unique operation named: addUsingGET_1
2021-06-07 11:36:03 -Generating unique operation named: editUsingGET_1
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_1
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_2
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_3
2021-06-07 11:36:03 -Generating unique operation named: saveUsingPOST_1
2021-06-07 11:36:03 -Generating unique operation named: updateUsingGET_1
2021-06-07 11:36:03 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPOST_1
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPUT_1
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 11:36:03 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 11:36:03 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 11:36:03 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 11:36:03 -Generating unique operation named: addUsingGET_2
2021-06-07 11:36:03 -Generating unique operation named: editUsingGET_2
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_2
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_4
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_5
2021-06-07 11:36:03 -Generating unique operation named: saveUsingPOST_2
2021-06-07 11:36:03 -Generating unique operation named: updateUsingGET_2
2021-06-07 11:36:03 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPOST_2
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPUT_2
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 11:36:03 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 11:36:03 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 11:36:03 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 11:36:03 -Generating unique operation named: editUsingGET_3
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_3
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPOST_3
2021-06-07 11:36:03 -Generating unique operation named: addUsingGET_3
2021-06-07 11:36:03 -Generating unique operation named: editUsingGET_4
2021-06-07 11:36:03 -Generating unique operation named: infoUsingGET_1
2021-06-07 11:36:03 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 11:36:03 -Generating unique operation named: infoUsingPOST_1
2021-06-07 11:36:03 -Generating unique operation named: infoUsingPUT_1
2021-06-07 11:36:03 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 11:36:03 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 11:36:03 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 11:36:03 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_4
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_6
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_7
2021-06-07 11:36:03 -Generating unique operation named: saveUsingPOST_3
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPOST_4
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_5
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_8
2021-06-07 11:36:03 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 11:36:03 -Generating unique operation named: addUsingGET_4
2021-06-07 11:36:03 -Generating unique operation named: editUsingGET_5
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_6
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_9
2021-06-07 11:36:03 -Generating unique operation named: saveUsingPOST_4
2021-06-07 11:36:03 -Generating unique operation named: treeUsingGET_1
2021-06-07 11:36:03 -Generating unique operation named: treeUsingGET_2
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPOST_5
2021-06-07 11:36:03 -Generating unique operation named: addUsingGET_5
2021-06-07 11:36:03 -Generating unique operation named: editUsingGET_6
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_7
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_10
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_11
2021-06-07 11:36:03 -Generating unique operation named: saveUsingPOST_5
2021-06-07 11:36:03 -Generating unique operation named: updateUsingGET_3
2021-06-07 11:36:03 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPOST_6
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPUT_3
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 11:36:03 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 11:36:03 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 11:36:03 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 11:36:03 -Generating unique operation named: addUsingGET_6
2021-06-07 11:36:03 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 11:36:03 -Generating unique operation named: editUsingGET_7
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_8
2021-06-07 11:36:03 -Generating unique operation named: saveUsingPOST_6
2021-06-07 11:36:03 -Generating unique operation named: saveUsingPOST_7
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPOST_7
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_9
2021-06-07 11:36:03 -Generating unique operation named: listUsingHEAD_1
2021-06-07 11:36:03 -Generating unique operation named: listUsingPOST_1
2021-06-07 11:36:03 -Generating unique operation named: listUsingPUT_1
2021-06-07 11:36:03 -Generating unique operation named: listUsingPATCH_1
2021-06-07 11:36:03 -Generating unique operation named: listUsingDELETE_1
2021-06-07 11:36:03 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 11:36:03 -Generating unique operation named: listUsingTRACE_1
2021-06-07 11:36:03 -Generating unique operation named: addUsingGET_7
2021-06-07 11:36:03 -Generating unique operation named: editUsingGET_8
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_10
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_12
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_13
2021-06-07 11:36:03 -Generating unique operation named: saveUsingPOST_8
2021-06-07 11:36:03 -Generating unique operation named: updateUsingGET_4
2021-06-07 11:36:03 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPOST_8
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPUT_4
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 11:36:03 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 11:36:03 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 11:36:03 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 11:36:03 -Generating unique operation named: addUsingGET_8
2021-06-07 11:36:03 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 11:36:03 -Generating unique operation named: editUsingGET_9
2021-06-07 11:36:03 -Generating unique operation named: listUsingGET_11
2021-06-07 11:36:03 -Generating unique operation named: removeUsingPOST_14
2021-06-07 11:36:03 -Generating unique operation named: saveUsingPOST_9
2021-06-07 11:36:03 -Generating unique operation named: treeUsingGET_3
2021-06-07 11:36:03 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 11:36:03 -Generating unique operation named: updateUsingPOST_9
2021-06-07 11:36:03 -Starting Quartz Scheduler now
2021-06-07 11:36:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 11:36:03 -Starting...
2021-06-07 11:36:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 11:36:03 -Started.
2021-06-07 11:36:03 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 11:36:04 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 11:36:04 -Using a shared selector for servlet write/read
2021-06-07 11:36:04 -Tomcat started on port(s): 8088 (http)
2021-06-07 11:36:04 -Started BootdoApplication in 7.417 seconds (JVM running for 8.074)
2021-06-07 11:37:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2021-06-07 11:46:24 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 2680 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 11:46:24 -The following profiles are active: dev
2021-06-07 11:46:24 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 11:46:24 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 11:46:24 CST 2021]; root of context hierarchy
2021-06-07 11:46:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 11:46:25 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3d7fd61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:46:26 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c462c863] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:46:26 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:46:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:46:26 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 11:46:26 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 11:46:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:46:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:46:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:46:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 11:46:26 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 11:46:26 -Starting service [Tomcat]
2021-06-07 11:46:26 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 11:46:26 -Initializing Spring embedded WebApplicationContext
2021-06-07 11:46:26 -Root WebApplicationContext: initialization completed in 2037 ms
2021-06-07 11:46:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 11:46:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 11:46:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 11:46:27 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 11:46:27 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 11:46:27 -Filter xssFilter was not registered (disabled)
2021-06-07 11:46:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 11:46:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 11:46:27 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 11:46:27 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 11:46:27 -{dataSource-1} inited
2021-06-07 11:46:27 -Using default implementation for ThreadExecutor
2021-06-07 11:46:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 11:46:27 -Quartz Scheduler v.2.2.1 created.
2021-06-07 11:46:27 -RAMJobStore initialized.
2021-06-07 11:46:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 11:46:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 11:46:27 -Quartz scheduler version: 2.2.1
2021-06-07 11:46:27 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@2fd9fb34
2021-06-07 11:46:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 11:46:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 11:46:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 11:46:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 11:46:28 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 11:46:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 11:46:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 11:46:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 11:46:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 11:46:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 11:46:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 11:46:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 11:46:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 11:46:28 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 11:46:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 11:46:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 11:46:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 11:46:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 11:46:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 11:46:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 11:46:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 11:46:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 11:46:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 11:46:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 11:46:28 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 11:46:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 11:46:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 11:46:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 11:46:28 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 11:46:28 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 11:46:28 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 11:46:28 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 11:46:28 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 11:46:28 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 11:46:28 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 11:46:28 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 11:46:28 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 11:46:28 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 11:46:28 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 11:46:28 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 11:46:28 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 11:46:28 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 11:46:28 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 11:46:28 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 11:46:28 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 11:46:28 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 11:46:28 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 11:46:28 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 11:46:28 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 11:46:28 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 11:46:28 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 11:46:28 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 11:46:28 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 11:46:28 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 11:46:28 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 11:46:28 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 11:46:28 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 11:46:28 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 11:46:28 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 11:46:28 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 11:46:28 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 11:46:28 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 11:46:28 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 11:46:28 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 11:46:28 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 11:46:28 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 11:46:28 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 11:46:28 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 11:46:28 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 11:46:28 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 11:46:28 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 11:46:28 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 11:46:28 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 11:46:28 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 11:46:28 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 11:46:28 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 11:46:28 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 11:46:28 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 11:46:28 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 11:46:28 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 11:46:28 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 11:46:28 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 11:46:28 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 11:46:28 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 11:46:28 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 11:46:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 11:46:28 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 11:46:28 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 11:46:29 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 11:46:24 CST 2021]; root of context hierarchy
2021-06-07 11:46:29 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 11:46:29 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 11:46:29 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 11:46:29 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 11:46:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 11:46:29 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 11:46:30 -

Using default security password: daee4af8-3266-4166-ad9e-88a53865c87d

2021-06-07 11:46:30 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 11:46:30 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@12e3f4ae, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@537451d5, org.springframework.security.web.context.SecurityContextPersistenceFilter@1dc9f5ad, org.springframework.security.web.header.HeaderWriterFilter@6150afc6, org.springframework.security.web.csrf.CsrfFilter@3df3410a, org.springframework.security.web.authentication.logout.LogoutFilter@5e9ea380, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11c999da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b22214d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@785d6a98, org.springframework.security.web.session.SessionManagementFilter@21e702b8, org.springframework.security.web.access.ExceptionTranslationFilter@51df2a41]
2021-06-07 11:46:30 -Registering beans for JMX exposure on startup
2021-06-07 11:46:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 11:46:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 11:46:30 -Starting beans in phase 2147483647
2021-06-07 11:46:30 -Context refreshed
2021-06-07 11:46:30 -Found 1 custom documentation plugin(s)
2021-06-07 11:46:30 -Scanning for api listing references
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_1
2021-06-07 11:46:30 -Generating unique operation named: addUsingGET_1
2021-06-07 11:46:30 -Generating unique operation named: editUsingGET_1
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_1
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_2
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_3
2021-06-07 11:46:30 -Generating unique operation named: saveUsingPOST_1
2021-06-07 11:46:30 -Generating unique operation named: updateUsingGET_1
2021-06-07 11:46:30 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPOST_1
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPUT_1
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 11:46:30 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 11:46:30 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 11:46:30 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 11:46:30 -Generating unique operation named: addUsingGET_2
2021-06-07 11:46:30 -Generating unique operation named: editUsingGET_2
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_2
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_4
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_5
2021-06-07 11:46:30 -Generating unique operation named: saveUsingPOST_2
2021-06-07 11:46:30 -Generating unique operation named: updateUsingGET_2
2021-06-07 11:46:30 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPOST_2
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPUT_2
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 11:46:30 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 11:46:30 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 11:46:30 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 11:46:30 -Generating unique operation named: editUsingGET_3
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_3
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPOST_3
2021-06-07 11:46:30 -Generating unique operation named: addUsingGET_3
2021-06-07 11:46:30 -Generating unique operation named: editUsingGET_4
2021-06-07 11:46:30 -Generating unique operation named: infoUsingGET_1
2021-06-07 11:46:30 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 11:46:30 -Generating unique operation named: infoUsingPOST_1
2021-06-07 11:46:30 -Generating unique operation named: infoUsingPUT_1
2021-06-07 11:46:30 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 11:46:30 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 11:46:30 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 11:46:30 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_4
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_6
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_7
2021-06-07 11:46:30 -Generating unique operation named: saveUsingPOST_3
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPOST_4
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_5
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_8
2021-06-07 11:46:30 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 11:46:30 -Generating unique operation named: addUsingGET_4
2021-06-07 11:46:30 -Generating unique operation named: editUsingGET_5
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_6
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_9
2021-06-07 11:46:30 -Generating unique operation named: saveUsingPOST_4
2021-06-07 11:46:30 -Generating unique operation named: treeUsingGET_1
2021-06-07 11:46:30 -Generating unique operation named: treeUsingGET_2
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPOST_5
2021-06-07 11:46:30 -Generating unique operation named: addUsingGET_5
2021-06-07 11:46:30 -Generating unique operation named: editUsingGET_6
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_7
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_10
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_11
2021-06-07 11:46:30 -Generating unique operation named: saveUsingPOST_5
2021-06-07 11:46:30 -Generating unique operation named: updateUsingGET_3
2021-06-07 11:46:30 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPOST_6
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPUT_3
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 11:46:30 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 11:46:30 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 11:46:30 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 11:46:30 -Generating unique operation named: addUsingGET_6
2021-06-07 11:46:30 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 11:46:30 -Generating unique operation named: editUsingGET_7
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_8
2021-06-07 11:46:30 -Generating unique operation named: saveUsingPOST_6
2021-06-07 11:46:30 -Generating unique operation named: saveUsingPOST_7
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPOST_7
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_9
2021-06-07 11:46:30 -Generating unique operation named: listUsingHEAD_1
2021-06-07 11:46:30 -Generating unique operation named: listUsingPOST_1
2021-06-07 11:46:30 -Generating unique operation named: listUsingPUT_1
2021-06-07 11:46:30 -Generating unique operation named: listUsingPATCH_1
2021-06-07 11:46:30 -Generating unique operation named: listUsingDELETE_1
2021-06-07 11:46:30 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 11:46:30 -Generating unique operation named: listUsingTRACE_1
2021-06-07 11:46:30 -Generating unique operation named: addUsingGET_7
2021-06-07 11:46:30 -Generating unique operation named: editUsingGET_8
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_10
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_12
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_13
2021-06-07 11:46:30 -Generating unique operation named: saveUsingPOST_8
2021-06-07 11:46:30 -Generating unique operation named: updateUsingGET_4
2021-06-07 11:46:30 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPOST_8
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPUT_4
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 11:46:30 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 11:46:30 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 11:46:30 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 11:46:30 -Generating unique operation named: addUsingGET_8
2021-06-07 11:46:30 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 11:46:30 -Generating unique operation named: editUsingGET_9
2021-06-07 11:46:30 -Generating unique operation named: listUsingGET_11
2021-06-07 11:46:30 -Generating unique operation named: removeUsingPOST_14
2021-06-07 11:46:30 -Generating unique operation named: saveUsingPOST_9
2021-06-07 11:46:30 -Generating unique operation named: treeUsingGET_3
2021-06-07 11:46:30 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 11:46:30 -Generating unique operation named: updateUsingPOST_9
2021-06-07 11:46:30 -Starting Quartz Scheduler now
2021-06-07 11:46:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 11:46:30 -Starting...
2021-06-07 11:46:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 11:46:30 -Started.
2021-06-07 11:46:30 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 11:46:30 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 11:46:30 -Using a shared selector for servlet write/read
2021-06-07 11:46:31 -Tomcat started on port(s): 8088 (http)
2021-06-07 11:46:31 -Started BootdoApplication in 6.852 seconds (JVM running for 7.528)
2021-06-07 11:46:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 11:46:37 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 11:46:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2021-06-07 11:46:37 -Enabling session validation scheduler...
2021-06-07 11:46:37 -请求地址 : http://localhost:8088/
2021-06-07 11:46:37 -HTTP METHOD : GET
2021-06-07 11:46:37 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 11:46:37 -参数 : [{}]
2021-06-07 11:46:37 -耗时 : 2
2021-06-07 11:46:37 -请求地址 : http://localhost:8088/login
2021-06-07 11:46:37 -HTTP METHOD : GET
2021-06-07 11:46:37 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 11:46:37 -参数 : []
2021-06-07 11:46:37 -耗时 : 0
2021-06-07 11:46:37 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 11:46:37 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 11:46:37 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 11:46:37 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 11:46:37 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 11:46:37 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 11:46:37 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 11:46:37 -请求地址 : http://localhost:8088/login;JSESSIONID=fb33c7e8-1da8-4d21-8cd8-6f6ad1c83faa
2021-06-07 11:46:37 -HTTP METHOD : GET
2021-06-07 11:46:37 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 11:46:37 -参数 : []
2021-06-07 11:46:37 -耗时 : 1
2021-06-07 11:47:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2021-06-07 11:48:32 -请求地址 : http://localhost:8088/login
2021-06-07 11:48:32 -HTTP METHOD : POST
2021-06-07 11:48:32 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 11:48:32 -参数 : [admin, Dm202007sc]
2021-06-07 11:48:32 -耗时 : 5
2021-06-07 11:48:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 11:48:32 -请求地址 : http://localhost:8088/index
2021-06-07 11:48:32 -HTTP METHOD : GET
2021-06-07 11:48:32 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 11:48:32 -参数 : [{}]
2021-06-07 11:48:32 -耗时 : 21
2021-06-07 11:48:33 -请求地址 : http://localhost:8088/main
2021-06-07 11:48:33 -HTTP METHOD : GET
2021-06-07 11:48:33 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 11:48:33 -参数 : []
2021-06-07 11:48:33 -耗时 : 0
2021-06-07 11:48:33 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 11:48:33 -HTTP METHOD : GET
2021-06-07 11:48:33 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 11:48:33 -参数 : []
2021-06-07 11:48:33 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy113.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy116.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$dc204c04.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 11:48:33 -请求地址 : http://localhost:8088/main
2021-06-07 11:48:33 -HTTP METHOD : GET
2021-06-07 11:48:33 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 11:48:33 -参数 : []
2021-06-07 11:48:33 -耗时 : 1
2021-06-07 11:48:43 -请求地址 : http://localhost:8088/sys/user/sysedit
2021-06-07 11:48:43 -HTTP METHOD : GET
2021-06-07 11:48:43 -CLASS_METHOD : com.shiguang.system.controller.UserController.sysedit
2021-06-07 11:48:43 -参数 : [{}]
2021-06-07 11:48:43 -耗时 : 5
2021-06-07 11:48:45 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 11:48:45 -HTTP METHOD : GET
2021-06-07 11:48:45 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 11:48:45 -参数 : []
2021-06-07 11:48:45 -耗时 : 0
2021-06-07 11:48:45 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 11:48:45 -HTTP METHOD : GET
2021-06-07 11:48:45 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 11:48:45 -参数 : []
2021-06-07 11:48:45 -耗时 : 4
2021-06-07 11:48:46 -请求地址 : http://localhost:8088/sys/user/
2021-06-07 11:48:46 -HTTP METHOD : GET
2021-06-07 11:48:46 -CLASS_METHOD : com.shiguang.system.controller.UserController.user
2021-06-07 11:48:46 -参数 : [{}]
2021-06-07 11:48:46 -耗时 : 1
2021-06-07 11:48:46 -请求地址 : http://localhost:8088/sys/user/list
2021-06-07 11:48:46 -HTTP METHOD : GET
2021-06-07 11:48:46 -CLASS_METHOD : com.shiguang.system.controller.UserController.list
2021-06-07 11:48:46 -参数 : [{limit=10, offset=0, name=, deptId=}]
2021-06-07 11:48:46 -耗时 : 15
2021-06-07 11:48:51 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 11:48:51 -HTTP METHOD : GET
2021-06-07 11:48:51 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 11:48:51 -参数 : [{}]
2021-06-07 11:48:51 -耗时 : 0
2021-06-07 11:48:51 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 11:48:51 -HTTP METHOD : GET
2021-06-07 11:48:51 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 11:48:51 -参数 : [{sort=order_num}]
2021-06-07 11:48:51 -耗时 : 11
2021-06-07 11:49:01 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=0ebe6b45-3e79-4d4a-afa4-3bb0dfafa87b
2021-06-07 11:49:01 -HTTP METHOD : GET
2021-06-07 11:49:01 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 11:49:01 -参数 : []
2021-06-07 11:49:01 -耗时 : 0
2021-06-07 11:49:01 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 11:49:01 -HTTP METHOD : GET
2021-06-07 11:49:01 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 11:49:01 -参数 : []
2021-06-07 11:49:01 -耗时 : 0
2021-06-07 11:49:10 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 11:49:10 -HTTP METHOD : POST
2021-06-07 11:49:10 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 11:49:10 -参数 : [admin, Dm202007sc]
2021-06-07 11:49:10 -耗时 : 3
2021-06-07 11:49:10 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 11:49:10 -HTTP METHOD : GET
2021-06-07 11:49:10 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 11:49:10 -参数 : [{}]
2021-06-07 11:49:10 -耗时 : 6
2021-06-07 11:49:10 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 11:49:10 -HTTP METHOD : GET
2021-06-07 11:49:10 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 11:49:10 -参数 : []
2021-06-07 11:49:10 -耗时 : 1
2021-06-07 11:49:10 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 11:49:10 -HTTP METHOD : GET
2021-06-07 11:49:10 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 11:49:10 -参数 : []
2021-06-07 11:49:10 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy113.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy116.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor116.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$dc204c04.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 11:49:10 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 11:49:10 -HTTP METHOD : GET
2021-06-07 11:49:10 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 11:49:10 -参数 : []
2021-06-07 11:49:10 -耗时 : 0
2021-06-07 11:49:24 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 11:49:24 -HTTP METHOD : GET
2021-06-07 11:49:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 11:49:24 -参数 : [{}]
2021-06-07 11:49:24 -耗时 : 11
2021-06-07 11:49:24 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 11:49:24 -HTTP METHOD : GET
2021-06-07 11:49:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 11:49:24 -参数 : []
2021-06-07 11:49:24 -耗时 : 0
2021-06-07 11:49:24 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 11:49:24 -HTTP METHOD : GET
2021-06-07 11:49:24 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 11:49:24 -参数 : []
2021-06-07 11:49:24 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy113.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy116.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor116.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$dc204c04.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 11:49:24 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 11:49:24 -HTTP METHOD : GET
2021-06-07 11:49:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 11:49:24 -参数 : []
2021-06-07 11:49:24 -耗时 : 0
2021-06-07 11:49:38 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 11:49:38 -HTTP METHOD : GET
2021-06-07 11:49:38 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 11:49:38 -参数 : []
2021-06-07 11:49:38 -耗时 : 1
2021-06-07 11:49:39 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 11:49:39 -HTTP METHOD : GET
2021-06-07 11:49:39 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 11:49:39 -参数 : []
2021-06-07 11:49:39 -耗时 : 11
2021-06-07 12:17:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 1, completed tasks = 356]
2021-06-07 12:46:37 -Validating all active sessions...
2021-06-07 12:46:37 -Finished session validation.  No sessions were stopped.
2021-06-07 12:47:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 1, completed tasks = 717]
2021-06-07 13:17:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 1, completed tasks = 1078]
2021-06-07 13:37:58 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 12324 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 13:37:58 -The following profiles are active: dev
2021-06-07 13:37:58 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 13:37:59 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c1909a3: startup date [Mon Jun 07 13:37:59 CST 2021]; root of context hierarchy
2021-06-07 13:38:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 13:38:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c3ee9186] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 13:38:01 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b4795c88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 13:38:01 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 13:38:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 13:38:01 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 13:38:01 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 13:38:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 13:38:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 13:38:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 13:38:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 13:38:02 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 13:38:02 -Starting service [Tomcat]
2021-06-07 13:38:02 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 13:38:02 -Initializing Spring embedded WebApplicationContext
2021-06-07 13:38:02 -Root WebApplicationContext: initialization completed in 3558 ms
2021-06-07 13:38:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 13:38:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 13:38:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 13:38:02 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 13:38:02 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 13:38:02 -Filter xssFilter was not registered (disabled)
2021-06-07 13:38:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 13:38:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 13:38:02 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 13:38:02 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 13:38:03 -{dataSource-1} inited
2021-06-07 13:38:04 -Using default implementation for ThreadExecutor
2021-06-07 13:38:04 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 13:38:04 -Quartz Scheduler v.2.2.1 created.
2021-06-07 13:38:04 -RAMJobStore initialized.
2021-06-07 13:38:04 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 13:38:04 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 13:38:04 -Quartz scheduler version: 2.2.1
2021-06-07 13:38:04 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@7c453c34
2021-06-07 13:38:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 13:38:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 13:38:05 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 13:38:05 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 13:38:05 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 13:38:05 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 13:38:05 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 13:38:05 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 13:38:05 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 13:38:05 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 13:38:05 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 13:38:05 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 13:38:05 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 13:38:05 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 13:38:05 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 13:38:05 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 13:38:05 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 13:38:05 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 13:38:05 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 13:38:05 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 13:38:05 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 13:38:05 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 13:38:05 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 13:38:05 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 13:38:05 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 13:38:05 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 13:38:05 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 13:38:05 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 13:38:05 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 13:38:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 13:38:05 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 13:38:05 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 13:38:05 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 13:38:05 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 13:38:05 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 13:38:05 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 13:38:05 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 13:38:05 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 13:38:05 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 13:38:05 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 13:38:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 13:38:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 13:38:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 13:38:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 13:38:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 13:38:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 13:38:05 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 13:38:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 13:38:05 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 13:38:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 13:38:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 13:38:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 13:38:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 13:38:05 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 13:38:05 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 13:38:05 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 13:38:05 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 13:38:05 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 13:38:05 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 13:38:05 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 13:38:05 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 13:38:05 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 13:38:05 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 13:38:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 13:38:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 13:38:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 13:38:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 13:38:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 13:38:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 13:38:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 13:38:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 13:38:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 13:38:05 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 13:38:05 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 13:38:05 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 13:38:05 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 13:38:05 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 13:38:05 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 13:38:05 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 13:38:05 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 13:38:05 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 13:38:05 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 13:38:05 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 13:38:05 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 13:38:05 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 13:38:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 13:38:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 13:38:05 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 13:38:06 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c1909a3: startup date [Mon Jun 07 13:37:59 CST 2021]; root of context hierarchy
2021-06-07 13:38:06 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 13:38:06 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 13:38:06 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 13:38:06 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 13:38:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 13:38:06 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 13:38:07 -

Using default security password: 19e1ee82-3a58-4eeb-a009-5153a4fc8267

2021-06-07 13:38:07 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 13:38:07 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3a63d248, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3c4ad54, org.springframework.security.web.context.SecurityContextPersistenceFilter@51df2a41, org.springframework.security.web.header.HeaderWriterFilter@416b681c, org.springframework.security.web.csrf.CsrfFilter@c83ed77, org.springframework.security.web.authentication.logout.LogoutFilter@297c3a43, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@13137835, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7bb25046, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b22214d, org.springframework.security.web.session.SessionManagementFilter@32e65852, org.springframework.security.web.access.ExceptionTranslationFilter@4148ce43]
2021-06-07 13:38:07 -Registering beans for JMX exposure on startup
2021-06-07 13:38:07 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 13:38:07 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 13:38:07 -Starting beans in phase 2147483647
2021-06-07 13:38:07 -Context refreshed
2021-06-07 13:38:07 -Found 1 custom documentation plugin(s)
2021-06-07 13:38:07 -Scanning for api listing references
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_1
2021-06-07 13:38:07 -Generating unique operation named: addUsingGET_1
2021-06-07 13:38:07 -Generating unique operation named: editUsingGET_1
2021-06-07 13:38:07 -Generating unique operation named: listUsingGET_1
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_2
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_3
2021-06-07 13:38:07 -Generating unique operation named: saveUsingPOST_1
2021-06-07 13:38:07 -Generating unique operation named: updateUsingGET_1
2021-06-07 13:38:07 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPOST_1
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPUT_1
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 13:38:07 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 13:38:07 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 13:38:07 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 13:38:07 -Generating unique operation named: addUsingGET_2
2021-06-07 13:38:07 -Generating unique operation named: editUsingGET_2
2021-06-07 13:38:07 -Generating unique operation named: listUsingGET_2
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_4
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_5
2021-06-07 13:38:07 -Generating unique operation named: saveUsingPOST_2
2021-06-07 13:38:07 -Generating unique operation named: updateUsingGET_2
2021-06-07 13:38:07 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPOST_2
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPUT_2
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 13:38:07 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 13:38:07 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 13:38:07 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 13:38:07 -Generating unique operation named: editUsingGET_3
2021-06-07 13:38:07 -Generating unique operation named: listUsingGET_3
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPOST_3
2021-06-07 13:38:07 -Generating unique operation named: addUsingGET_3
2021-06-07 13:38:07 -Generating unique operation named: editUsingGET_4
2021-06-07 13:38:07 -Generating unique operation named: infoUsingGET_1
2021-06-07 13:38:07 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 13:38:07 -Generating unique operation named: infoUsingPOST_1
2021-06-07 13:38:07 -Generating unique operation named: infoUsingPUT_1
2021-06-07 13:38:07 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 13:38:07 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 13:38:07 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 13:38:07 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 13:38:07 -Generating unique operation named: listUsingGET_4
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_6
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_7
2021-06-07 13:38:07 -Generating unique operation named: saveUsingPOST_3
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPOST_4
2021-06-07 13:38:07 -Generating unique operation named: listUsingGET_5
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_8
2021-06-07 13:38:07 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 13:38:07 -Generating unique operation named: addUsingGET_4
2021-06-07 13:38:07 -Generating unique operation named: editUsingGET_5
2021-06-07 13:38:07 -Generating unique operation named: listUsingGET_6
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_9
2021-06-07 13:38:07 -Generating unique operation named: saveUsingPOST_4
2021-06-07 13:38:07 -Generating unique operation named: treeUsingGET_1
2021-06-07 13:38:07 -Generating unique operation named: treeUsingGET_2
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPOST_5
2021-06-07 13:38:07 -Generating unique operation named: addUsingGET_5
2021-06-07 13:38:07 -Generating unique operation named: editUsingGET_6
2021-06-07 13:38:07 -Generating unique operation named: listUsingGET_7
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_10
2021-06-07 13:38:07 -Generating unique operation named: removeUsingPOST_11
2021-06-07 13:38:07 -Generating unique operation named: saveUsingPOST_5
2021-06-07 13:38:07 -Generating unique operation named: updateUsingGET_3
2021-06-07 13:38:07 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPOST_6
2021-06-07 13:38:07 -Generating unique operation named: updateUsingPUT_3
2021-06-07 13:38:08 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 13:38:08 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 13:38:08 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 13:38:08 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 13:38:08 -Generating unique operation named: addUsingGET_6
2021-06-07 13:38:08 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 13:38:08 -Generating unique operation named: editUsingGET_7
2021-06-07 13:38:08 -Generating unique operation named: listUsingGET_8
2021-06-07 13:38:08 -Generating unique operation named: saveUsingPOST_6
2021-06-07 13:38:08 -Generating unique operation named: saveUsingPOST_7
2021-06-07 13:38:08 -Generating unique operation named: updateUsingPOST_7
2021-06-07 13:38:08 -Generating unique operation named: listUsingGET_9
2021-06-07 13:38:08 -Generating unique operation named: listUsingHEAD_1
2021-06-07 13:38:08 -Generating unique operation named: listUsingPOST_1
2021-06-07 13:38:08 -Generating unique operation named: listUsingPUT_1
2021-06-07 13:38:08 -Generating unique operation named: listUsingPATCH_1
2021-06-07 13:38:08 -Generating unique operation named: listUsingDELETE_1
2021-06-07 13:38:08 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 13:38:08 -Generating unique operation named: listUsingTRACE_1
2021-06-07 13:38:08 -Generating unique operation named: addUsingGET_7
2021-06-07 13:38:08 -Generating unique operation named: editUsingGET_8
2021-06-07 13:38:08 -Generating unique operation named: listUsingGET_10
2021-06-07 13:38:08 -Generating unique operation named: removeUsingPOST_12
2021-06-07 13:38:08 -Generating unique operation named: removeUsingPOST_13
2021-06-07 13:38:08 -Generating unique operation named: saveUsingPOST_8
2021-06-07 13:38:08 -Generating unique operation named: updateUsingGET_4
2021-06-07 13:38:08 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 13:38:08 -Generating unique operation named: updateUsingPOST_8
2021-06-07 13:38:08 -Generating unique operation named: updateUsingPUT_4
2021-06-07 13:38:08 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 13:38:08 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 13:38:08 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 13:38:08 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 13:38:08 -Generating unique operation named: addUsingGET_8
2021-06-07 13:38:08 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 13:38:08 -Generating unique operation named: editUsingGET_9
2021-06-07 13:38:08 -Generating unique operation named: listUsingGET_11
2021-06-07 13:38:08 -Generating unique operation named: removeUsingPOST_14
2021-06-07 13:38:08 -Generating unique operation named: saveUsingPOST_9
2021-06-07 13:38:08 -Generating unique operation named: treeUsingGET_3
2021-06-07 13:38:08 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 13:38:08 -Generating unique operation named: updateUsingPOST_9
2021-06-07 13:38:08 -Starting Quartz Scheduler now
2021-06-07 13:38:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 13:38:08 -Starting...
2021-06-07 13:38:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 13:38:08 -Started.
2021-06-07 13:38:08 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 13:38:08 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 13:38:08 -Using a shared selector for servlet write/read
2021-06-07 13:38:08 -Tomcat started on port(s): 8088 (http)
2021-06-07 13:38:08 -Started BootdoApplication in 10.614 seconds (JVM running for 11.833)
2021-06-07 13:38:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 13:38:38 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 13:38:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2021-06-07 13:38:38 -Enabling session validation scheduler...
2021-06-07 13:38:38 -请求地址 : http://localhost:8088/
2021-06-07 13:38:38 -HTTP METHOD : GET
2021-06-07 13:38:38 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 13:38:38 -参数 : [{}]
2021-06-07 13:38:38 -耗时 : 18
2021-06-07 13:38:38 -请求地址 : http://localhost:8088/login
2021-06-07 13:38:38 -HTTP METHOD : GET
2021-06-07 13:38:38 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 13:38:38 -参数 : []
2021-06-07 13:38:38 -耗时 : 1
2021-06-07 13:38:38 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 13:38:38 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 13:38:38 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 13:38:38 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 13:38:38 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 13:38:38 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 13:38:38 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 13:38:50 -请求地址 : http://localhost:8088/login
2021-06-07 13:38:50 -HTTP METHOD : POST
2021-06-07 13:38:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 13:38:50 -参数 : [admin, Dm202007sc]
2021-06-07 13:38:50 -耗时 : 10
2021-06-07 13:38:50 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 13:38:50 -请求地址 : http://localhost:8088/index
2021-06-07 13:38:50 -HTTP METHOD : GET
2021-06-07 13:38:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 13:38:50 -参数 : [{}]
2021-06-07 13:38:50 -耗时 : 34
2021-06-07 13:38:50 -请求地址 : http://localhost:8088/main
2021-06-07 13:38:50 -HTTP METHOD : GET
2021-06-07 13:38:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 13:38:50 -参数 : []
2021-06-07 13:38:50 -耗时 : 0
2021-06-07 13:38:50 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 13:38:50 -HTTP METHOD : GET
2021-06-07 13:38:50 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 13:38:50 -参数 : []
2021-06-07 13:38:50 -请求地址 : http://localhost:8088/main
2021-06-07 13:38:50 -HTTP METHOD : GET
2021-06-07 13:38:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 13:38:50 -参数 : []
2021-06-07 13:38:50 -耗时 : 0
2021-06-07 13:38:50 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy113.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy116.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$95284f.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 13:39:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 3]
2021-06-07 14:09:05 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 1, completed tasks = 388]
2021-06-07 14:09:43 -请求地址 : http://localhost:8088/
2021-06-07 14:09:43 -HTTP METHOD : GET
2021-06-07 14:09:43 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 14:09:43 -参数 : [{}]
2021-06-07 14:09:43 -耗时 : 0
2021-06-07 14:09:43 -请求地址 : http://localhost:8088/login
2021-06-07 14:09:43 -HTTP METHOD : GET
2021-06-07 14:09:43 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:09:43 -参数 : []
2021-06-07 14:09:43 -耗时 : 0
2021-06-07 14:09:54 -请求地址 : http://localhost:8088/login
2021-06-07 14:09:54 -HTTP METHOD : POST
2021-06-07 14:09:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:09:54 -参数 : [admin, Dm202007sc]
2021-06-07 14:09:54 -耗时 : 2
2021-06-07 14:09:54 -请求地址 : http://localhost:8088/index
2021-06-07 14:09:54 -HTTP METHOD : GET
2021-06-07 14:09:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:09:54 -参数 : [{}]
2021-06-07 14:09:54 -耗时 : 13
2021-06-07 14:09:54 -请求地址 : http://localhost:8088/main
2021-06-07 14:09:54 -HTTP METHOD : GET
2021-06-07 14:09:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:09:54 -参数 : []
2021-06-07 14:09:54 -耗时 : 0
2021-06-07 14:09:54 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:09:54 -HTTP METHOD : GET
2021-06-07 14:09:54 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:09:54 -参数 : []
2021-06-07 14:09:54 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy113.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy116.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$95284f.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:09:54 -请求地址 : http://localhost:8088/main
2021-06-07 14:09:54 -HTTP METHOD : GET
2021-06-07 14:09:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:09:54 -参数 : []
2021-06-07 14:09:54 -耗时 : 0
2021-06-07 14:10:03 -请求地址 : http://localhost:8088/index
2021-06-07 14:10:03 -HTTP METHOD : GET
2021-06-07 14:10:03 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:10:03 -参数 : [{}]
2021-06-07 14:10:03 -耗时 : 6
2021-06-07 14:10:03 -请求地址 : http://localhost:8088/main
2021-06-07 14:10:03 -HTTP METHOD : GET
2021-06-07 14:10:03 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:10:03 -参数 : []
2021-06-07 14:10:03 -耗时 : 0
2021-06-07 14:10:03 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:10:03 -HTTP METHOD : GET
2021-06-07 14:10:03 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:10:03 -参数 : []
2021-06-07 14:10:03 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy113.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy116.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$95284f.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:10:03 -请求地址 : http://localhost:8088/main
2021-06-07 14:10:03 -HTTP METHOD : GET
2021-06-07 14:10:03 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:10:03 -参数 : []
2021-06-07 14:10:03 -耗时 : 2
2021-06-07 14:10:13 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=586c77de-cf40-4382-8959-5cb9f8b57807
2021-06-07 14:10:13 -HTTP METHOD : GET
2021-06-07 14:10:13 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:10:13 -参数 : []
2021-06-07 14:10:13 -耗时 : 0
2021-06-07 14:10:23 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:10:23 -HTTP METHOD : POST
2021-06-07 14:10:23 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:10:23 -参数 : [admin, Dm202007sc]
2021-06-07 14:10:23 -耗时 : 3
2021-06-07 14:10:23 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 14:10:23 -HTTP METHOD : GET
2021-06-07 14:10:23 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:10:23 -参数 : [{}]
2021-06-07 14:10:23 -耗时 : 4
2021-06-07 14:10:23 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:10:23 -HTTP METHOD : GET
2021-06-07 14:10:23 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:10:23 -参数 : []
2021-06-07 14:10:23 -耗时 : 0
2021-06-07 14:10:23 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 14:10:23 -HTTP METHOD : GET
2021-06-07 14:10:23 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:10:23 -参数 : []
2021-06-07 14:10:23 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy113.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy116.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$95284f.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:10:23 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:10:23 -HTTP METHOD : GET
2021-06-07 14:10:23 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:10:23 -参数 : []
2021-06-07 14:10:23 -耗时 : 0
2021-06-07 14:10:43 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 14:10:43 -HTTP METHOD : GET
2021-06-07 14:10:43 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 14:10:43 -参数 : []
2021-06-07 14:10:43 -耗时 : 0
2021-06-07 14:10:43 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 14:10:43 -HTTP METHOD : GET
2021-06-07 14:10:43 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 14:10:43 -参数 : []
2021-06-07 14:10:44 -耗时 : 54
2021-06-07 14:14:09 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 14:14:09 -HTTP METHOD : GET
2021-06-07 14:14:09 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 14:14:09 -参数 : []
2021-06-07 14:14:09 -耗时 : 0
2021-06-07 14:14:09 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 14:14:09 -HTTP METHOD : GET
2021-06-07 14:14:09 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 14:14:09 -参数 : []
2021-06-07 14:14:09 -耗时 : 3
2021-06-07 14:14:09 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 14:14:09 -HTTP METHOD : GET
2021-06-07 14:14:09 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 14:14:09 -参数 : []
2021-06-07 14:14:09 -耗时 : 1
2021-06-07 14:14:10 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 14:14:10 -HTTP METHOD : GET
2021-06-07 14:14:10 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 14:14:10 -参数 : []
2021-06-07 14:14:10 -耗时 : 3
2021-06-07 14:16:03 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 14:16:03 -HTTP METHOD : GET
2021-06-07 14:16:03 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 14:16:03 -参数 : []
2021-06-07 14:16:03 -耗时 : 0
2021-06-07 14:16:03 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 14:16:03 -HTTP METHOD : GET
2021-06-07 14:16:03 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 14:16:03 -参数 : []
2021-06-07 14:16:03 -耗时 : 4
2021-06-07 14:16:04 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 14:16:04 -HTTP METHOD : GET
2021-06-07 14:16:04 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 14:16:04 -参数 : []
2021-06-07 14:16:04 -耗时 : 0
2021-06-07 14:16:04 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 14:16:04 -HTTP METHOD : GET
2021-06-07 14:16:04 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 14:16:04 -参数 : []
2021-06-07 14:16:04 -耗时 : 2
2021-06-07 14:16:04 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 14:16:04 -HTTP METHOD : GET
2021-06-07 14:16:04 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 14:16:04 -参数 : []
2021-06-07 14:16:04 -耗时 : 0
2021-06-07 14:16:04 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 14:16:04 -HTTP METHOD : GET
2021-06-07 14:16:04 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 14:16:04 -参数 : []
2021-06-07 14:16:04 -耗时 : 3
2021-06-07 14:16:06 -请求地址 : http://127.0.0.1:8088/common/generator/edit
2021-06-07 14:16:06 -HTTP METHOD : GET
2021-06-07 14:16:06 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.edit
2021-06-07 14:16:06 -参数 : [{}]
2021-06-07 14:16:06 -耗时 : 101
2021-06-07 14:16:24 -请求地址 : http://127.0.0.1:8088/common/generator/update
2021-06-07 14:16:24 -HTTP METHOD : POST
2021-06-07 14:16:24 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.update
2021-06-07 14:16:24 -参数 : [{author=cln, email=bushuo@163.com, package=com.shiguang.information, autoRemovePre=true, tablePrefix=c_}]
2021-06-07 14:16:24 -耗时 : 3
2021-06-07 14:16:56 -请求地址 : http://127.0.0.1:8088/common/generator/batchCode
2021-06-07 14:16:56 -HTTP METHOD : GET
2021-06-07 14:16:56 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.batchCode
2021-06-07 14:16:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@d046dfd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@57d48668, ["c_manufacturer"]]
2021-06-07 14:16:56 -耗时 : 170
2021-06-07 14:17:43 -请求地址 : http://127.0.0.1:8088/common/generator/batchCode
2021-06-07 14:17:43 -HTTP METHOD : GET
2021-06-07 14:17:43 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.batchCode
2021-06-07 14:17:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c9a4af5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@406d8ca8, ["c_manufacturer"]]
2021-06-07 14:17:43 -耗时 : 15
2021-06-07 14:25:11 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 5900 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 14:25:11 -The following profiles are active: dev
2021-06-07 14:25:11 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 14:25:11 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 14:25:11 CST 2021]; root of context hierarchy
2021-06-07 14:25:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 14:25:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d3d7fd61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:25:13 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c462c863] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:25:13 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:25:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:25:13 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 14:25:13 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 14:25:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:25:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:25:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:25:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:25:13 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 14:25:13 -Starting service [Tomcat]
2021-06-07 14:25:13 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 14:25:13 -Initializing Spring embedded WebApplicationContext
2021-06-07 14:25:13 -Root WebApplicationContext: initialization completed in 2134 ms
2021-06-07 14:25:14 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 14:25:14 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 14:25:14 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 14:25:14 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 14:25:14 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 14:25:14 -Filter xssFilter was not registered (disabled)
2021-06-07 14:25:14 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 14:25:14 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 14:25:14 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 14:25:14 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 14:25:14 -{dataSource-1} inited
2021-06-07 14:25:14 -Using default implementation for ThreadExecutor
2021-06-07 14:25:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 14:25:14 -Quartz Scheduler v.2.2.1 created.
2021-06-07 14:25:14 -RAMJobStore initialized.
2021-06-07 14:25:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 14:25:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 14:25:14 -Quartz scheduler version: 2.2.1
2021-06-07 14:25:14 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@2fd9fb34
2021-06-07 14:25:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 14:25:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 14:25:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 14:25:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 14:25:15 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 14:25:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 14:25:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 14:25:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 14:25:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 14:25:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 14:25:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 14:25:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 14:25:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 14:25:15 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 14:25:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 14:25:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 14:25:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 14:25:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 14:25:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 14:25:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 14:25:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 14:25:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 14:25:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 14:25:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 14:25:15 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 14:25:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 14:25:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 14:25:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 14:25:15 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 14:25:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 14:25:15 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 14:25:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 14:25:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 14:25:15 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 14:25:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 14:25:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 14:25:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 14:25:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 14:25:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 14:25:15 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 14:25:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 14:25:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 14:25:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 14:25:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 14:25:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 14:25:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 14:25:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 14:25:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 14:25:15 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 14:25:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 14:25:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 14:25:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 14:25:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 14:25:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 14:25:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 14:25:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 14:25:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 14:25:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 14:25:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 14:25:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 14:25:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 14:25:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 14:25:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 14:25:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 14:25:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 14:25:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 14:25:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 14:25:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 14:25:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 14:25:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 14:25:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 14:25:15 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 14:25:15 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 14:25:15 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 14:25:15 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 14:25:15 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 14:25:15 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 14:25:15 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:25:15 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 14:25:15 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 14:25:15 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 14:25:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 14:25:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 14:25:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 14:25:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 14:25:15 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 14:25:15 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 14:25:16 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 14:25:16 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 14:25:11 CST 2021]; root of context hierarchy
2021-06-07 14:25:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:25:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:25:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:25:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 14:25:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:25:16 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 14:25:17 -

Using default security password: 31902bf4-b2bf-4446-abad-a8a329274379

2021-06-07 14:25:17 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 14:25:17 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@12e3f4ae, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@537451d5, org.springframework.security.web.context.SecurityContextPersistenceFilter@1dc9f5ad, org.springframework.security.web.header.HeaderWriterFilter@6150afc6, org.springframework.security.web.csrf.CsrfFilter@3df3410a, org.springframework.security.web.authentication.logout.LogoutFilter@5e9ea380, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@11c999da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4b22214d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@785d6a98, org.springframework.security.web.session.SessionManagementFilter@21e702b8, org.springframework.security.web.access.ExceptionTranslationFilter@51df2a41]
2021-06-07 14:25:17 -Registering beans for JMX exposure on startup
2021-06-07 14:25:17 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 14:25:17 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 14:25:17 -Starting beans in phase 2147483647
2021-06-07 14:25:17 -Context refreshed
2021-06-07 14:25:17 -Found 1 custom documentation plugin(s)
2021-06-07 14:25:17 -Scanning for api listing references
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_1
2021-06-07 14:25:17 -Generating unique operation named: addUsingGET_1
2021-06-07 14:25:17 -Generating unique operation named: editUsingGET_1
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_1
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_2
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_3
2021-06-07 14:25:17 -Generating unique operation named: saveUsingPOST_1
2021-06-07 14:25:17 -Generating unique operation named: updateUsingGET_1
2021-06-07 14:25:17 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPOST_1
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPUT_1
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 14:25:17 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 14:25:17 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 14:25:17 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 14:25:17 -Generating unique operation named: addUsingGET_2
2021-06-07 14:25:17 -Generating unique operation named: editUsingGET_2
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_2
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_4
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_5
2021-06-07 14:25:17 -Generating unique operation named: saveUsingPOST_2
2021-06-07 14:25:17 -Generating unique operation named: updateUsingGET_2
2021-06-07 14:25:17 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPOST_2
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPUT_2
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 14:25:17 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 14:25:17 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 14:25:17 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 14:25:17 -Generating unique operation named: editUsingGET_3
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_3
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPOST_3
2021-06-07 14:25:17 -Generating unique operation named: addUsingGET_3
2021-06-07 14:25:17 -Generating unique operation named: editUsingGET_4
2021-06-07 14:25:17 -Generating unique operation named: infoUsingGET_1
2021-06-07 14:25:17 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 14:25:17 -Generating unique operation named: infoUsingPOST_1
2021-06-07 14:25:17 -Generating unique operation named: infoUsingPUT_1
2021-06-07 14:25:17 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 14:25:17 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 14:25:17 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 14:25:17 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_4
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_6
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_7
2021-06-07 14:25:17 -Generating unique operation named: saveUsingPOST_3
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPOST_4
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_5
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_8
2021-06-07 14:25:17 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 14:25:17 -Generating unique operation named: addUsingGET_4
2021-06-07 14:25:17 -Generating unique operation named: editUsingGET_5
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_6
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_9
2021-06-07 14:25:17 -Generating unique operation named: saveUsingPOST_4
2021-06-07 14:25:17 -Generating unique operation named: treeUsingGET_1
2021-06-07 14:25:17 -Generating unique operation named: treeUsingGET_2
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPOST_5
2021-06-07 14:25:17 -Generating unique operation named: addUsingGET_5
2021-06-07 14:25:17 -Generating unique operation named: editUsingGET_6
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_7
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_10
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_11
2021-06-07 14:25:17 -Generating unique operation named: saveUsingPOST_5
2021-06-07 14:25:17 -Generating unique operation named: updateUsingGET_3
2021-06-07 14:25:17 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPOST_6
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPUT_3
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 14:25:17 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 14:25:17 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 14:25:17 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 14:25:17 -Generating unique operation named: addUsingGET_6
2021-06-07 14:25:17 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 14:25:17 -Generating unique operation named: editUsingGET_7
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_8
2021-06-07 14:25:17 -Generating unique operation named: saveUsingPOST_6
2021-06-07 14:25:17 -Generating unique operation named: saveUsingPOST_7
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPOST_7
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_9
2021-06-07 14:25:17 -Generating unique operation named: listUsingHEAD_1
2021-06-07 14:25:17 -Generating unique operation named: listUsingPOST_1
2021-06-07 14:25:17 -Generating unique operation named: listUsingPUT_1
2021-06-07 14:25:17 -Generating unique operation named: listUsingPATCH_1
2021-06-07 14:25:17 -Generating unique operation named: listUsingDELETE_1
2021-06-07 14:25:17 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 14:25:17 -Generating unique operation named: listUsingTRACE_1
2021-06-07 14:25:17 -Generating unique operation named: addUsingGET_7
2021-06-07 14:25:17 -Generating unique operation named: editUsingGET_8
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_10
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_12
2021-06-07 14:25:17 -Generating unique operation named: removeUsingPOST_13
2021-06-07 14:25:17 -Generating unique operation named: saveUsingPOST_8
2021-06-07 14:25:17 -Generating unique operation named: updateUsingGET_4
2021-06-07 14:25:17 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPOST_8
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPUT_4
2021-06-07 14:25:17 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 14:25:17 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 14:25:17 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 14:25:17 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 14:25:17 -Generating unique operation named: addUsingGET_8
2021-06-07 14:25:17 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 14:25:17 -Generating unique operation named: editUsingGET_9
2021-06-07 14:25:17 -Generating unique operation named: listUsingGET_11
2021-06-07 14:25:18 -Generating unique operation named: removeUsingPOST_14
2021-06-07 14:25:18 -Generating unique operation named: saveUsingPOST_9
2021-06-07 14:25:18 -Generating unique operation named: treeUsingGET_3
2021-06-07 14:25:18 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 14:25:18 -Generating unique operation named: updateUsingPOST_9
2021-06-07 14:25:18 -Starting Quartz Scheduler now
2021-06-07 14:25:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 14:25:18 -Starting...
2021-06-07 14:25:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 14:25:18 -Started.
2021-06-07 14:25:18 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 14:25:18 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 14:25:18 -Using a shared selector for servlet write/read
2021-06-07 14:25:18 -Tomcat started on port(s): 8088 (http)
2021-06-07 14:25:18 -Started BootdoApplication in 6.887 seconds (JVM running for 7.557)
2021-06-07 14:25:21 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 14:25:21 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 14:25:21 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2021-06-07 14:25:21 -Enabling session validation scheduler...
2021-06-07 14:25:21 -请求地址 : http://localhost:8088/login;JSESSIONID=08b00766-9e54-4037-80db-683a284f3ea7
2021-06-07 14:25:21 -HTTP METHOD : GET
2021-06-07 14:25:21 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:25:21 -参数 : []
2021-06-07 14:25:21 -耗时 : 1
2021-06-07 14:25:21 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 14:25:21 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 14:25:21 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 14:25:21 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 14:25:21 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 14:25:21 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 14:25:21 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 14:25:21 -请求地址 : http://localhost:8088/login
2021-06-07 14:25:21 -HTTP METHOD : GET
2021-06-07 14:25:21 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:25:21 -参数 : []
2021-06-07 14:25:21 -耗时 : 0
2021-06-07 14:25:31 -请求地址 : http://localhost:8088/login
2021-06-07 14:25:31 -HTTP METHOD : POST
2021-06-07 14:25:31 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:25:31 -参数 : [admin, Dm202007sc]
2021-06-07 14:25:31 -耗时 : 6
2021-06-07 14:25:31 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 14:25:31 -请求地址 : http://localhost:8088/index
2021-06-07 14:25:31 -HTTP METHOD : GET
2021-06-07 14:25:31 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:25:31 -参数 : [{}]
2021-06-07 14:25:31 -耗时 : 24
2021-06-07 14:25:31 -请求地址 : http://localhost:8088/main
2021-06-07 14:25:31 -HTTP METHOD : GET
2021-06-07 14:25:31 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:25:31 -参数 : []
2021-06-07 14:25:31 -耗时 : 0
2021-06-07 14:25:31 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:25:31 -HTTP METHOD : GET
2021-06-07 14:25:31 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:25:31 -参数 : []
2021-06-07 14:25:31 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy113.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy116.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$dc204c04.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:25:31 -请求地址 : http://localhost:8088/main
2021-06-07 14:25:31 -HTTP METHOD : GET
2021-06-07 14:25:31 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:25:31 -参数 : []
2021-06-07 14:25:31 -耗时 : 1
2021-06-07 14:25:36 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=b3533859-b830-4b45-9262-87f59d571752
2021-06-07 14:25:36 -HTTP METHOD : GET
2021-06-07 14:25:36 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:25:36 -参数 : []
2021-06-07 14:25:36 -耗时 : 0
2021-06-07 14:25:36 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:25:36 -HTTP METHOD : GET
2021-06-07 14:25:36 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:25:36 -参数 : []
2021-06-07 14:25:36 -耗时 : 1
2021-06-07 14:25:37 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:25:37 -HTTP METHOD : POST
2021-06-07 14:25:37 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:25:37 -参数 : [admin, Dm202007sc]
2021-06-07 14:25:37 -耗时 : 2
2021-06-07 14:25:37 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 14:25:37 -HTTP METHOD : GET
2021-06-07 14:25:37 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:25:37 -参数 : [{}]
2021-06-07 14:25:37 -耗时 : 7
2021-06-07 14:25:37 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:25:37 -HTTP METHOD : GET
2021-06-07 14:25:37 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:25:37 -参数 : []
2021-06-07 14:25:37 -耗时 : 0
2021-06-07 14:25:37 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 14:25:37 -HTTP METHOD : GET
2021-06-07 14:25:37 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:25:37 -参数 : []
2021-06-07 14:25:37 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy113.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy116.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$dc204c04.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:25:37 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:25:37 -HTTP METHOD : GET
2021-06-07 14:25:37 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:25:37 -参数 : []
2021-06-07 14:25:37 -耗时 : 0
2021-06-07 14:25:45 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 14:25:45 -HTTP METHOD : GET
2021-06-07 14:25:45 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 14:25:45 -参数 : []
2021-06-07 14:25:45 -耗时 : 1
2021-06-07 14:25:45 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 14:25:45 -HTTP METHOD : GET
2021-06-07 14:25:45 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 14:25:45 -参数 : []
2021-06-07 14:25:45 -耗时 : 12
2021-06-07 14:25:47 -请求地址 : http://127.0.0.1:8088/common/generator/edit
2021-06-07 14:25:47 -HTTP METHOD : GET
2021-06-07 14:25:47 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.edit
2021-06-07 14:25:47 -参数 : [{}]
2021-06-07 14:25:47 -耗时 : 14
2021-06-07 14:26:13 -请求地址 : http://127.0.0.1:8088/common/generator/edit
2021-06-07 14:26:13 -HTTP METHOD : GET
2021-06-07 14:26:13 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.edit
2021-06-07 14:26:13 -参数 : [{}]
2021-06-07 14:26:13 -耗时 : 2
2021-06-07 14:26:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 10]
2021-06-07 14:26:21 -请求地址 : http://127.0.0.1:8088/common/generator/update
2021-06-07 14:26:21 -HTTP METHOD : POST
2021-06-07 14:26:21 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.update
2021-06-07 14:26:21 -参数 : [{author=cln, email=bushuo@163.com, package=com.shiguang.manufacturer, autoRemovePre=true, tablePrefix=c_}]
2021-06-07 14:26:21 -耗时 : 5
2021-06-07 14:26:23 -请求地址 : http://127.0.0.1:8088/common/generator/batchCode
2021-06-07 14:26:23 -HTTP METHOD : GET
2021-06-07 14:26:23 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.batchCode
2021-06-07 14:26:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7bbcafef, org.apache.shiro.web.servlet.ShiroHttpServletResponse@439b1793, ["c_manufacturer"]]
2021-06-07 14:26:23 -耗时 : 75
2021-06-07 14:29:31 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 6572 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 14:29:31 -The following profiles are active: dev
2021-06-07 14:29:31 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 14:29:31 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 14:29:31 CST 2021]; root of context hierarchy
2021-06-07 14:29:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 14:29:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43105862] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:29:32 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$339b2364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:29:33 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:29:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:29:33 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 14:29:33 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 14:29:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:29:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:29:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:29:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:29:33 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 14:29:33 -Starting service [Tomcat]
2021-06-07 14:29:33 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 14:29:33 -Initializing Spring embedded WebApplicationContext
2021-06-07 14:29:33 -Root WebApplicationContext: initialization completed in 1987 ms
2021-06-07 14:29:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 14:29:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 14:29:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 14:29:33 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 14:29:33 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 14:29:33 -Filter xssFilter was not registered (disabled)
2021-06-07 14:29:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 14:29:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 14:29:33 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 14:29:33 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 14:29:34 -{dataSource-1} inited
2021-06-07 14:29:34 -Using default implementation for ThreadExecutor
2021-06-07 14:29:34 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 14:29:34 -Quartz Scheduler v.2.2.1 created.
2021-06-07 14:29:34 -RAMJobStore initialized.
2021-06-07 14:29:34 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 14:29:34 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 14:29:34 -Quartz scheduler version: 2.2.1
2021-06-07 14:29:34 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@740b9a50
2021-06-07 14:29:34 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 14:29:34 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 14:29:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 14:29:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 14:29:35 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 14:29:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 14:29:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 14:29:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 14:29:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 14:29:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 14:29:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 14:29:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 14:29:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 14:29:35 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 14:29:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 14:29:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 14:29:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 14:29:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 14:29:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 14:29:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 14:29:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 14:29:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 14:29:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 14:29:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 14:29:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 14:29:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 14:29:35 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 14:29:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 14:29:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 14:29:35 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 14:29:35 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 14:29:35 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 14:29:35 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 14:29:35 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 14:29:35 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 14:29:35 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 14:29:35 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 14:29:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 14:29:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 14:29:35 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 14:29:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 14:29:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 14:29:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 14:29:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 14:29:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 14:29:35 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 14:29:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 14:29:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 14:29:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 14:29:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 14:29:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 14:29:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 14:29:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 14:29:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 14:29:35 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 14:29:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 14:29:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 14:29:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 14:29:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 14:29:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 14:29:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 14:29:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 14:29:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 14:29:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 14:29:35 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 14:29:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 14:29:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 14:29:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 14:29:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 14:29:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 14:29:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 14:29:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 14:29:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 14:29:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 14:29:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 14:29:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 14:29:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 14:29:35 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 14:29:35 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 14:29:35 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 14:29:35 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 14:29:35 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 14:29:35 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 14:29:35 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:29:35 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 14:29:35 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 14:29:35 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 14:29:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 14:29:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 14:29:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 14:29:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 14:29:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 14:29:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 14:29:35 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 14:29:36 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 14:29:31 CST 2021]; root of context hierarchy
2021-06-07 14:29:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:29:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:29:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:29:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 14:29:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:29:36 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 14:29:36 -

Using default security password: 421cae66-233b-4c0f-90c2-f0bf153e8bf4

2021-06-07 14:29:36 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 14:29:36 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@fb2c2f3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@148fca83, org.springframework.security.web.context.SecurityContextPersistenceFilter@b8142f4, org.springframework.security.web.header.HeaderWriterFilter@38b54694, org.springframework.security.web.csrf.CsrfFilter@3245efdb, org.springframework.security.web.authentication.logout.LogoutFilter@4e3ee457, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50b38342, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a8b42a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d2a8819, org.springframework.security.web.session.SessionManagementFilter@45539bd8, org.springframework.security.web.access.ExceptionTranslationFilter@77e730bd]
2021-06-07 14:29:37 -Registering beans for JMX exposure on startup
2021-06-07 14:29:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 14:29:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 14:29:37 -Starting beans in phase 2147483647
2021-06-07 14:29:37 -Context refreshed
2021-06-07 14:29:37 -Found 1 custom documentation plugin(s)
2021-06-07 14:29:37 -Scanning for api listing references
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_1
2021-06-07 14:29:37 -Generating unique operation named: addUsingGET_1
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_1
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_1
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_2
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_3
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_1
2021-06-07 14:29:37 -Generating unique operation named: updateUsingGET_1
2021-06-07 14:29:37 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_1
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPUT_1
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 14:29:37 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 14:29:37 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 14:29:37 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 14:29:37 -Generating unique operation named: addUsingGET_2
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_2
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_2
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_4
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_5
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_2
2021-06-07 14:29:37 -Generating unique operation named: updateUsingGET_2
2021-06-07 14:29:37 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_2
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPUT_2
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 14:29:37 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 14:29:37 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 14:29:37 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_3
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_3
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_3
2021-06-07 14:29:37 -Generating unique operation named: addUsingGET_3
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_4
2021-06-07 14:29:37 -Generating unique operation named: infoUsingGET_1
2021-06-07 14:29:37 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 14:29:37 -Generating unique operation named: infoUsingPOST_1
2021-06-07 14:29:37 -Generating unique operation named: infoUsingPUT_1
2021-06-07 14:29:37 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 14:29:37 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 14:29:37 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 14:29:37 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_4
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_6
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_7
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_3
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_4
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_5
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_8
2021-06-07 14:29:37 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 14:29:37 -Generating unique operation named: addUsingGET_4
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_5
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_6
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_9
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_10
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_4
2021-06-07 14:29:37 -Generating unique operation named: updateUsingGET_3
2021-06-07 14:29:37 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_5
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPUT_3
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 14:29:37 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 14:29:37 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 14:29:37 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 14:29:37 -Generating unique operation named: addUsingGET_5
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_6
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_7
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_11
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_5
2021-06-07 14:29:37 -Generating unique operation named: treeUsingGET_1
2021-06-07 14:29:37 -Generating unique operation named: treeUsingGET_2
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_6
2021-06-07 14:29:37 -Generating unique operation named: addUsingGET_6
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_7
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_8
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_12
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_13
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_6
2021-06-07 14:29:37 -Generating unique operation named: updateUsingGET_4
2021-06-07 14:29:37 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_7
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPUT_4
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 14:29:37 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 14:29:37 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 14:29:37 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 14:29:37 -Generating unique operation named: addUsingGET_7
2021-06-07 14:29:37 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_8
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_9
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_7
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_8
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_8
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_10
2021-06-07 14:29:37 -Generating unique operation named: listUsingHEAD_1
2021-06-07 14:29:37 -Generating unique operation named: listUsingPOST_1
2021-06-07 14:29:37 -Generating unique operation named: listUsingPUT_1
2021-06-07 14:29:37 -Generating unique operation named: listUsingPATCH_1
2021-06-07 14:29:37 -Generating unique operation named: listUsingDELETE_1
2021-06-07 14:29:37 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 14:29:37 -Generating unique operation named: listUsingTRACE_1
2021-06-07 14:29:37 -Generating unique operation named: addUsingGET_8
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_9
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_11
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_14
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_15
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_9
2021-06-07 14:29:37 -Generating unique operation named: updateUsingGET_5
2021-06-07 14:29:37 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_9
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPUT_5
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 14:29:37 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 14:29:37 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 14:29:37 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 14:29:37 -Generating unique operation named: addUsingGET_9
2021-06-07 14:29:37 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 14:29:37 -Generating unique operation named: editUsingGET_10
2021-06-07 14:29:37 -Generating unique operation named: listUsingGET_12
2021-06-07 14:29:37 -Generating unique operation named: removeUsingPOST_16
2021-06-07 14:29:37 -Generating unique operation named: saveUsingPOST_10
2021-06-07 14:29:37 -Generating unique operation named: treeUsingGET_3
2021-06-07 14:29:37 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 14:29:37 -Generating unique operation named: updateUsingPOST_10
2021-06-07 14:29:37 -Starting Quartz Scheduler now
2021-06-07 14:29:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 14:29:37 -Starting...
2021-06-07 14:29:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 14:29:37 -Started.
2021-06-07 14:29:37 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 14:29:37 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 14:29:37 -Using a shared selector for servlet write/read
2021-06-07 14:29:37 -Tomcat started on port(s): 8088 (http)
2021-06-07 14:29:38 -Started BootdoApplication in 6.918 seconds (JVM running for 7.575)
2021-06-07 14:29:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 14:29:43 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 14:29:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 14:29:43 -Enabling session validation scheduler...
2021-06-07 14:29:43 -请求地址 : http://localhost:8088/login;JSESSIONID=45989d16-4a8c-4ef1-9598-055abed0ec6f
2021-06-07 14:29:43 -HTTP METHOD : GET
2021-06-07 14:29:43 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:29:43 -参数 : []
2021-06-07 14:29:43 -耗时 : 1
2021-06-07 14:29:43 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 14:29:43 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 14:29:43 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 14:29:43 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 14:29:43 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 14:29:43 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 14:29:43 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 14:29:53 -请求地址 : http://localhost:8088/login
2021-06-07 14:29:53 -HTTP METHOD : POST
2021-06-07 14:29:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:29:53 -参数 : [admin, Dm202007sc]
2021-06-07 14:29:53 -耗时 : 6
2021-06-07 14:29:53 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 14:29:53 -请求地址 : http://localhost:8088/index
2021-06-07 14:29:53 -HTTP METHOD : GET
2021-06-07 14:29:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:29:53 -参数 : [{}]
2021-06-07 14:29:53 -耗时 : 20
2021-06-07 14:29:53 -请求地址 : http://localhost:8088/main
2021-06-07 14:29:53 -HTTP METHOD : GET
2021-06-07 14:29:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:29:53 -参数 : []
2021-06-07 14:29:53 -耗时 : 0
2021-06-07 14:29:53 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:29:53 -HTTP METHOD : GET
2021-06-07 14:29:53 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:29:53 -参数 : []
2021-06-07 14:29:53 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:29:53 -请求地址 : http://localhost:8088/main
2021-06-07 14:29:53 -HTTP METHOD : GET
2021-06-07 14:29:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:29:53 -参数 : []
2021-06-07 14:29:53 -耗时 : 1
2021-06-07 14:30:02 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:30:02 -HTTP METHOD : GET
2021-06-07 14:30:02 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:30:02 -参数 : [{}]
2021-06-07 14:30:02 -耗时 : 0
2021-06-07 14:30:02 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:30:02 -HTTP METHOD : GET
2021-06-07 14:30:02 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:30:02 -参数 : [{sort=order_num}]
2021-06-07 14:30:02 -耗时 : 11
2021-06-07 14:30:04 -请求地址 : http://localhost:8088/sys/menu/add/0
2021-06-07 14:30:04 -HTTP METHOD : GET
2021-06-07 14:30:04 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 14:30:04 -参数 : [{}, 0]
2021-06-07 14:30:04 -耗时 : 0
2021-06-07 14:30:35 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 10]
2021-06-07 14:31:59 -请求地址 : http://localhost:8088/sys/menu/save
2021-06-07 14:31:59 -HTTP METHOD : POST
2021-06-07 14:31:59 -CLASS_METHOD : com.shiguang.system.controller.MenuController.save
2021-06-07 14:31:59 -参数 : [MenuDO{menuId=null, parentId=0, name='基础信息维护', url='', perms='', type=0, icon='fa fa-archive', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 14:31:59 -耗时 : 44
2021-06-07 14:31:59 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:31:59 -HTTP METHOD : GET
2021-06-07 14:31:59 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:31:59 -参数 : [{sort=order_num}]
2021-06-07 14:31:59 -耗时 : 5
2021-06-07 14:32:04 -请求地址 : http://localhost:8088/index
2021-06-07 14:32:04 -HTTP METHOD : GET
2021-06-07 14:32:04 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:32:04 -参数 : [{}]
2021-06-07 14:32:04 -耗时 : 6
2021-06-07 14:32:04 -请求地址 : http://localhost:8088/main
2021-06-07 14:32:04 -HTTP METHOD : GET
2021-06-07 14:32:04 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:32:04 -参数 : []
2021-06-07 14:32:04 -耗时 : 0
2021-06-07 14:32:04 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:32:04 -HTTP METHOD : GET
2021-06-07 14:32:04 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:32:04 -参数 : []
2021-06-07 14:32:04 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:32:04 -请求地址 : http://localhost:8088/main
2021-06-07 14:32:04 -HTTP METHOD : GET
2021-06-07 14:32:04 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:32:04 -参数 : []
2021-06-07 14:32:04 -耗时 : 0
2021-06-07 14:32:07 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 14:32:07 -HTTP METHOD : GET
2021-06-07 14:32:07 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 14:32:07 -参数 : []
2021-06-07 14:32:07 -耗时 : 0
2021-06-07 14:32:07 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 14:32:07 -HTTP METHOD : GET
2021-06-07 14:32:07 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 14:32:07 -参数 : []
2021-06-07 14:32:07 -耗时 : 3
2021-06-07 14:32:08 -请求地址 : http://localhost:8088/sys/user/
2021-06-07 14:32:08 -HTTP METHOD : GET
2021-06-07 14:32:08 -CLASS_METHOD : com.shiguang.system.controller.UserController.user
2021-06-07 14:32:08 -参数 : [{}]
2021-06-07 14:32:08 -耗时 : 1
2021-06-07 14:32:08 -请求地址 : http://localhost:8088/sys/user/list
2021-06-07 14:32:08 -HTTP METHOD : GET
2021-06-07 14:32:08 -CLASS_METHOD : com.shiguang.system.controller.UserController.list
2021-06-07 14:32:08 -参数 : [{limit=10, offset=0, name=, deptId=}]
2021-06-07 14:32:08 -耗时 : 12
2021-06-07 14:32:10 -请求地址 : http://localhost:8088/sys/user/edit/2
2021-06-07 14:32:10 -HTTP METHOD : GET
2021-06-07 14:32:10 -CLASS_METHOD : com.shiguang.system.controller.UserController.edit
2021-06-07 14:32:10 -参数 : [{}, 2]
2021-06-07 14:32:10 -耗时 : 11
2021-06-07 14:32:20 -请求地址 : http://localhost:8088/sys/role/edit/2
2021-06-07 14:32:20 -HTTP METHOD : GET
2021-06-07 14:32:20 -CLASS_METHOD : com.shiguang.system.controller.RoleController.edit
2021-06-07 14:32:20 -参数 : [2, {}]
2021-06-07 14:32:20 -耗时 : 2
2021-06-07 14:32:20 -请求地址 : http://localhost:8088/sys/menu/tree/2
2021-06-07 14:32:20 -HTTP METHOD : GET
2021-06-07 14:32:20 -CLASS_METHOD : com.shiguang.system.controller.MenuController.tree
2021-06-07 14:32:20 -参数 : [2]
2021-06-07 14:32:20 -耗时 : 6
2021-06-07 14:32:24 -请求地址 : http://localhost:8088/sys/role/update
2021-06-07 14:32:24 -HTTP METHOD : POST
2021-06-07 14:32:24 -CLASS_METHOD : com.shiguang.system.controller.RoleController.update
2021-06-07 14:32:24 -参数 : [RoleDO{roleId=2, roleName='admin', roleSign='null', remark='超级管理权限', userIdCreate=null, gmtCreate=2019-03-19 16:28:02.0, gmtModified=null, menuIds=[271, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 61, 22, 21, 20, 270, 113, 105, 104, 2, 3, 279, -1], status=null}]
2021-06-07 14:32:24 -耗时 : 129
2021-06-07 14:32:24 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 14:32:24 -HTTP METHOD : GET
2021-06-07 14:32:24 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 14:32:24 -参数 : []
2021-06-07 14:32:24 -耗时 : 1
2021-06-07 14:32:26 -请求地址 : http://localhost:8088/index
2021-06-07 14:32:26 -HTTP METHOD : GET
2021-06-07 14:32:26 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:32:26 -参数 : [{}]
2021-06-07 14:32:26 -耗时 : 4
2021-06-07 14:32:26 -请求地址 : http://localhost:8088/main
2021-06-07 14:32:26 -HTTP METHOD : GET
2021-06-07 14:32:26 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:32:26 -参数 : []
2021-06-07 14:32:26 -耗时 : 0
2021-06-07 14:32:26 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:32:26 -HTTP METHOD : GET
2021-06-07 14:32:26 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:32:26 -参数 : []
2021-06-07 14:32:26 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:32:26 -请求地址 : http://localhost:8088/main
2021-06-07 14:32:26 -HTTP METHOD : GET
2021-06-07 14:32:26 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:32:26 -参数 : []
2021-06-07 14:32:26 -耗时 : 0
2021-06-07 14:32:32 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:32:32 -HTTP METHOD : GET
2021-06-07 14:32:32 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:32:32 -参数 : [{}]
2021-06-07 14:32:32 -耗时 : 0
2021-06-07 14:32:32 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:32:32 -HTTP METHOD : GET
2021-06-07 14:32:32 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:32:32 -参数 : [{sort=order_num}]
2021-06-07 14:32:32 -耗时 : 3
2021-06-07 14:32:35 -请求地址 : http://localhost:8088/sys/menu/edit/279
2021-06-07 14:32:35 -HTTP METHOD : GET
2021-06-07 14:32:35 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 14:32:35 -参数 : [{}, 279]
2021-06-07 14:32:35 -耗时 : 3
2021-06-07 14:32:42 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 14:32:42 -HTTP METHOD : POST
2021-06-07 14:32:42 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 14:32:42 -参数 : [MenuDO{menuId=279, parentId=0, name='基础信息', url='', perms='', type=0, icon='fa fa-archive', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 14:32:42 -耗时 : 33
2021-06-07 14:32:42 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:32:42 -HTTP METHOD : GET
2021-06-07 14:32:42 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:32:42 -参数 : [{sort=order_num}]
2021-06-07 14:32:42 -耗时 : 3
2021-06-07 14:32:45 -请求地址 : http://localhost:8088/index
2021-06-07 14:32:45 -HTTP METHOD : GET
2021-06-07 14:32:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:32:45 -参数 : [{}]
2021-06-07 14:32:45 -耗时 : 5
2021-06-07 14:32:45 -请求地址 : http://localhost:8088/main
2021-06-07 14:32:45 -HTTP METHOD : GET
2021-06-07 14:32:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:32:45 -参数 : []
2021-06-07 14:32:45 -耗时 : 1
2021-06-07 14:32:45 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:32:45 -HTTP METHOD : GET
2021-06-07 14:32:45 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:32:45 -参数 : []
2021-06-07 14:32:45 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:32:45 -请求地址 : http://localhost:8088/main
2021-06-07 14:32:45 -HTTP METHOD : GET
2021-06-07 14:32:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:32:45 -参数 : []
2021-06-07 14:32:45 -耗时 : 0
2021-06-07 14:32:51 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:32:51 -HTTP METHOD : GET
2021-06-07 14:32:51 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:32:51 -参数 : [{}]
2021-06-07 14:32:51 -耗时 : 1
2021-06-07 14:32:51 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:32:51 -HTTP METHOD : GET
2021-06-07 14:32:51 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:32:51 -参数 : [{sort=order_num}]
2021-06-07 14:32:51 -耗时 : 4
2021-06-07 14:32:53 -请求地址 : http://localhost:8088/sys/menu/add/279
2021-06-07 14:32:53 -HTTP METHOD : GET
2021-06-07 14:32:53 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 14:32:53 -参数 : [{}, 279]
2021-06-07 14:32:53 -耗时 : 4
2021-06-07 14:33:16 -An error occurred in processing while on a non-container thread. The connection will be closed immediately
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:96)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:350)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:318)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.sendHeartbeat(AbstractSockJsSession.java:251)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession$HeartbeatTask.run(AbstractSockJsSession.java:455)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:33:16 -java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 75 common frames omitted
2021-06-07 14:33:16 -Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:33:16 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 59 common frames omitted
2021-06-07 14:33:16 -java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 77 common frames omitted
2021-06-07 14:33:16 -Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:33:16 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 61 common frames omitted
2021-06-07 14:34:26 -请求地址 : http://localhost:8088/sys/menu/save
2021-06-07 14:34:26 -HTTP METHOD : POST
2021-06-07 14:34:26 -CLASS_METHOD : com.shiguang.system.controller.MenuController.save
2021-06-07 14:34:26 -参数 : [MenuDO{menuId=null, parentId=279, name='制造商维护', url='/manufacturer/manufacturer', perms='manufacturer:manufacturer:manufacturer', type=1, icon='fa fa-gears', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 14:34:26 -耗时 : 55
2021-06-07 14:34:26 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:34:26 -HTTP METHOD : GET
2021-06-07 14:34:26 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:34:26 -参数 : [{sort=order_num}]
2021-06-07 14:34:26 -耗时 : 3
2021-06-07 14:34:30 -请求地址 : http://localhost:8088/index
2021-06-07 14:34:30 -HTTP METHOD : GET
2021-06-07 14:34:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:34:30 -参数 : [{}]
2021-06-07 14:34:30 -耗时 : 5
2021-06-07 14:34:30 -请求地址 : http://localhost:8088/main
2021-06-07 14:34:30 -HTTP METHOD : GET
2021-06-07 14:34:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:34:30 -参数 : []
2021-06-07 14:34:30 -耗时 : 0
2021-06-07 14:34:30 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:34:30 -HTTP METHOD : GET
2021-06-07 14:34:30 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:34:30 -参数 : []
2021-06-07 14:34:30 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:34:30 -请求地址 : http://localhost:8088/main
2021-06-07 14:34:30 -HTTP METHOD : GET
2021-06-07 14:34:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:34:30 -参数 : []
2021-06-07 14:34:30 -耗时 : 1
2021-06-07 14:34:35 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:34:35 -HTTP METHOD : GET
2021-06-07 14:34:35 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:34:35 -参数 : [{}]
2021-06-07 14:34:35 -耗时 : 0
2021-06-07 14:34:35 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:34:35 -HTTP METHOD : GET
2021-06-07 14:34:35 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:34:35 -参数 : [{sort=order_num}]
2021-06-07 14:34:35 -耗时 : 1
2021-06-07 14:34:52 -请求地址 : http://localhost:8088/sys/menu/add/280
2021-06-07 14:34:52 -HTTP METHOD : GET
2021-06-07 14:34:52 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 14:34:52 -参数 : [{}, 280]
2021-06-07 14:34:52 -耗时 : 3
2021-06-07 14:35:19 -请求地址 : http://localhost:8088/sys/menu/add/280
2021-06-07 14:35:19 -HTTP METHOD : GET
2021-06-07 14:35:19 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 14:35:19 -参数 : [{}, 280]
2021-06-07 14:35:19 -耗时 : 2
2021-06-07 14:37:50 -请求地址 : http://localhost:8088/login;JSESSIONID=0f507436-5e66-4331-94e3-e388ce2ea412
2021-06-07 14:37:50 -HTTP METHOD : GET
2021-06-07 14:37:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:37:50 -参数 : []
2021-06-07 14:37:50 -耗时 : 0
2021-06-07 14:37:50 -请求地址 : http://localhost:8088/login;JSESSIONID=0f507436-5e66-4331-94e3-e388ce2ea412
2021-06-07 14:37:50 -HTTP METHOD : GET
2021-06-07 14:37:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:37:50 -参数 : []
2021-06-07 14:37:50 -耗时 : 0
2021-06-07 14:37:51 -请求地址 : http://localhost:8088/login
2021-06-07 14:37:51 -HTTP METHOD : GET
2021-06-07 14:37:51 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:37:51 -参数 : []
2021-06-07 14:37:51 -耗时 : 0
2021-06-07 14:37:52 -请求地址 : http://localhost:8088/login
2021-06-07 14:37:52 -HTTP METHOD : POST
2021-06-07 14:37:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:37:52 -参数 : [admin, Dm202007sc]
2021-06-07 14:37:52 -耗时 : 2
2021-06-07 14:37:52 -请求地址 : http://localhost:8088/index
2021-06-07 14:37:52 -HTTP METHOD : GET
2021-06-07 14:37:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:37:52 -参数 : [{}]
2021-06-07 14:37:52 -耗时 : 3
2021-06-07 14:37:52 -请求地址 : http://localhost:8088/main
2021-06-07 14:37:52 -HTTP METHOD : GET
2021-06-07 14:37:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:37:52 -参数 : []
2021-06-07 14:37:52 -耗时 : 0
2021-06-07 14:37:52 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:37:52 -HTTP METHOD : GET
2021-06-07 14:37:52 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:37:52 -参数 : []
2021-06-07 14:37:52 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:37:52 -请求地址 : http://localhost:8088/main
2021-06-07 14:37:52 -HTTP METHOD : GET
2021-06-07 14:37:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:37:52 -参数 : []
2021-06-07 14:37:52 -耗时 : 0
2021-06-07 14:37:56 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:37:56 -HTTP METHOD : GET
2021-06-07 14:37:56 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:37:56 -参数 : [{}]
2021-06-07 14:37:56 -耗时 : 1
2021-06-07 14:37:56 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:37:56 -HTTP METHOD : GET
2021-06-07 14:37:56 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:37:56 -参数 : [{sort=order_num}]
2021-06-07 14:37:56 -耗时 : 3
2021-06-07 14:38:15 -An error occurred in processing while on a non-container thread. The connection will be closed immediately
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:96)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:350)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:318)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.sendHeartbeat(AbstractSockJsSession.java:251)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession$HeartbeatTask.run(AbstractSockJsSession.java:455)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:38:15 -java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 75 common frames omitted
2021-06-07 14:38:15 -Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:38:15 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 59 common frames omitted
2021-06-07 14:38:15 -java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 77 common frames omitted
2021-06-07 14:38:15 -Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:38:15 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 61 common frames omitted
2021-06-07 14:38:17 -请求地址 : http://localhost:8088/sys/user/sysedit
2021-06-07 14:38:17 -HTTP METHOD : GET
2021-06-07 14:38:17 -CLASS_METHOD : com.shiguang.system.controller.UserController.sysedit
2021-06-07 14:38:17 -参数 : [{}]
2021-06-07 14:38:17 -耗时 : 4
2021-06-07 14:38:37 -请求地址 : http://localhost:8088/sys/menu/add/280
2021-06-07 14:38:37 -HTTP METHOD : GET
2021-06-07 14:38:37 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 14:38:37 -参数 : [{}, 280]
2021-06-07 14:38:37 -耗时 : 3
2021-06-07 14:40:05 -请求地址 : http://localhost:8088/index
2021-06-07 14:40:05 -HTTP METHOD : GET
2021-06-07 14:40:05 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:40:05 -参数 : [{}]
2021-06-07 14:40:05 -耗时 : 5
2021-06-07 14:40:05 -请求地址 : http://localhost:8088/main
2021-06-07 14:40:05 -HTTP METHOD : GET
2021-06-07 14:40:05 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:40:05 -参数 : []
2021-06-07 14:40:05 -耗时 : 0
2021-06-07 14:40:05 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:40:05 -HTTP METHOD : GET
2021-06-07 14:40:05 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:40:05 -参数 : []
2021-06-07 14:40:05 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:40:05 -请求地址 : http://localhost:8088/main
2021-06-07 14:40:05 -HTTP METHOD : GET
2021-06-07 14:40:05 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:40:05 -参数 : []
2021-06-07 14:40:05 -耗时 : 0
2021-06-07 14:40:07 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:40:07 -HTTP METHOD : GET
2021-06-07 14:40:07 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:40:07 -参数 : [{}]
2021-06-07 14:40:07 -耗时 : 0
2021-06-07 14:40:07 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:40:07 -HTTP METHOD : GET
2021-06-07 14:40:07 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:40:07 -参数 : [{sort=order_num}]
2021-06-07 14:40:07 -耗时 : 2
2021-06-07 14:40:18 -请求地址 : http://localhost:8088/sys/user/sysedit
2021-06-07 14:40:18 -HTTP METHOD : GET
2021-06-07 14:40:18 -CLASS_METHOD : com.shiguang.system.controller.UserController.sysedit
2021-06-07 14:40:18 -参数 : [{}]
2021-06-07 14:40:18 -耗时 : 2
2021-06-07 14:42:50 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=16df0def-0949-43bc-8fab-486e66b1ea7d
2021-06-07 14:42:50 -HTTP METHOD : GET
2021-06-07 14:42:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:42:50 -参数 : []
2021-06-07 14:42:50 -耗时 : 0
2021-06-07 14:42:51 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:42:51 -HTTP METHOD : POST
2021-06-07 14:42:51 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:42:51 -参数 : [admin, Dm202007sc]
2021-06-07 14:42:51 -耗时 : 2
2021-06-07 14:42:52 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 14:42:52 -HTTP METHOD : GET
2021-06-07 14:42:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:42:52 -参数 : [{}]
2021-06-07 14:42:52 -耗时 : 4
2021-06-07 14:42:52 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:42:52 -HTTP METHOD : GET
2021-06-07 14:42:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:42:52 -参数 : []
2021-06-07 14:42:52 -耗时 : 0
2021-06-07 14:42:52 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 14:42:52 -HTTP METHOD : GET
2021-06-07 14:42:52 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:42:52 -参数 : []
2021-06-07 14:42:52 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:42:52 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:42:52 -HTTP METHOD : GET
2021-06-07 14:42:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:42:52 -参数 : []
2021-06-07 14:42:52 -耗时 : 0
2021-06-07 14:42:58 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=9653935f-fc93-4ab6-809c-d39793c34a6f
2021-06-07 14:42:58 -HTTP METHOD : GET
2021-06-07 14:42:58 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:42:58 -参数 : []
2021-06-07 14:42:58 -耗时 : 0
2021-06-07 14:43:00 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=9653935f-fc93-4ab6-809c-d39793c34a6f
2021-06-07 14:43:00 -HTTP METHOD : GET
2021-06-07 14:43:00 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:43:00 -参数 : []
2021-06-07 14:43:00 -耗时 : 0
2021-06-07 14:43:00 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=e8e6fa69-9748-4c4e-8887-dfd66b3691f2
2021-06-07 14:43:00 -HTTP METHOD : GET
2021-06-07 14:43:00 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:43:00 -参数 : []
2021-06-07 14:43:00 -耗时 : 1
2021-06-07 14:43:02 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:43:02 -HTTP METHOD : POST
2021-06-07 14:43:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:43:02 -参数 : [admin, Dm202007sc]
2021-06-07 14:43:02 -耗时 : 1
2021-06-07 14:43:02 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 14:43:02 -HTTP METHOD : GET
2021-06-07 14:43:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:43:02 -参数 : [{}]
2021-06-07 14:43:02 -耗时 : 4
2021-06-07 14:43:02 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:43:02 -HTTP METHOD : GET
2021-06-07 14:43:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:43:02 -参数 : []
2021-06-07 14:43:02 -耗时 : 0
2021-06-07 14:43:02 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 14:43:02 -HTTP METHOD : GET
2021-06-07 14:43:02 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:43:02 -参数 : []
2021-06-07 14:43:02 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:43:02 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:43:02 -HTTP METHOD : GET
2021-06-07 14:43:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:43:02 -参数 : []
2021-06-07 14:43:02 -耗时 : 1
2021-06-07 14:43:33 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:43:33 -HTTP METHOD : GET
2021-06-07 14:43:33 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:43:33 -参数 : []
2021-06-07 14:43:33 -耗时 : 0
2021-06-07 14:43:34 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:43:34 -HTTP METHOD : POST
2021-06-07 14:43:34 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:43:34 -参数 : [admin, Dm202007sc]
2021-06-07 14:43:34 -耗时 : 1
2021-06-07 14:43:34 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 14:43:34 -HTTP METHOD : GET
2021-06-07 14:43:34 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:43:34 -参数 : [{}]
2021-06-07 14:43:34 -耗时 : 2
2021-06-07 14:43:35 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:43:35 -HTTP METHOD : GET
2021-06-07 14:43:35 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:43:35 -参数 : []
2021-06-07 14:43:35 -耗时 : 1
2021-06-07 14:43:35 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 14:43:35 -HTTP METHOD : GET
2021-06-07 14:43:35 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:43:35 -参数 : []
2021-06-07 14:43:35 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:43:35 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:43:35 -HTTP METHOD : GET
2021-06-07 14:43:35 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:43:35 -参数 : []
2021-06-07 14:43:35 -耗时 : 0
2021-06-07 14:43:43 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=5943a55b-388d-4027-bfb8-aed2aafbf021
2021-06-07 14:43:43 -HTTP METHOD : GET
2021-06-07 14:43:43 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:43:43 -参数 : []
2021-06-07 14:43:43 -耗时 : 1
2021-06-07 14:43:45 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:43:45 -HTTP METHOD : POST
2021-06-07 14:43:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:43:45 -参数 : [admin, Dm202007sc]
2021-06-07 14:43:45 -耗时 : 2
2021-06-07 14:43:45 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 14:43:45 -HTTP METHOD : GET
2021-06-07 14:43:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:43:45 -参数 : [{}]
2021-06-07 14:43:45 -耗时 : 4
2021-06-07 14:43:45 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:43:45 -HTTP METHOD : GET
2021-06-07 14:43:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:43:45 -参数 : []
2021-06-07 14:43:45 -耗时 : 0
2021-06-07 14:43:45 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 14:43:45 -HTTP METHOD : GET
2021-06-07 14:43:45 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:43:45 -参数 : []
2021-06-07 14:43:45 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:43:45 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:43:45 -HTTP METHOD : GET
2021-06-07 14:43:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:43:45 -参数 : []
2021-06-07 14:43:45 -耗时 : 0
2021-06-07 14:43:59 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:43:59 -HTTP METHOD : GET
2021-06-07 14:43:59 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:43:59 -参数 : []
2021-06-07 14:43:59 -耗时 : 0
2021-06-07 14:44:07 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:44:07 -HTTP METHOD : GET
2021-06-07 14:44:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:44:07 -参数 : []
2021-06-07 14:44:07 -耗时 : 0
2021-06-07 14:44:07 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=ce68abc5-e86f-4ae5-9a91-1784fdba0c3f
2021-06-07 14:44:07 -HTTP METHOD : GET
2021-06-07 14:44:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:44:07 -参数 : []
2021-06-07 14:44:07 -耗时 : 1
2021-06-07 14:44:09 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:44:09 -HTTP METHOD : POST
2021-06-07 14:44:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:44:09 -参数 : [admin, Dm202007sc]
2021-06-07 14:44:09 -耗时 : 2
2021-06-07 14:44:09 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 14:44:09 -HTTP METHOD : GET
2021-06-07 14:44:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:44:09 -参数 : [{}]
2021-06-07 14:44:09 -耗时 : 4
2021-06-07 14:44:09 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:44:09 -HTTP METHOD : GET
2021-06-07 14:44:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:44:09 -参数 : []
2021-06-07 14:44:09 -耗时 : 0
2021-06-07 14:44:09 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 14:44:09 -HTTP METHOD : GET
2021-06-07 14:44:09 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:44:09 -参数 : []
2021-06-07 14:44:09 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:44:09 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:44:09 -HTTP METHOD : GET
2021-06-07 14:44:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:44:09 -参数 : []
2021-06-07 14:44:09 -耗时 : 0
2021-06-07 14:44:35 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 14:44:35 -HTTP METHOD : GET
2021-06-07 14:44:35 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 14:44:35 -参数 : []
2021-06-07 14:44:35 -耗时 : 0
2021-06-07 14:44:36 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 14:44:36 -HTTP METHOD : GET
2021-06-07 14:44:36 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 14:44:36 -参数 : []
2021-06-07 14:44:36 -耗时 : 8
2021-06-07 14:44:40 -请求地址 : http://127.0.0.1:8088/common/generator/edit
2021-06-07 14:44:40 -HTTP METHOD : GET
2021-06-07 14:44:40 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.edit
2021-06-07 14:44:40 -参数 : [{}]
2021-06-07 14:44:40 -耗时 : 16
2021-06-07 14:44:45 -请求地址 : http://127.0.0.1:8088/common/generator/update
2021-06-07 14:44:45 -HTTP METHOD : POST
2021-06-07 14:44:45 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.update
2021-06-07 14:44:45 -参数 : [{author=cln, email=bushuo@163.com, package=com.shiguang.a, autoRemovePre=true, tablePrefix=c_}]
2021-06-07 14:44:45 -耗时 : 5
2021-06-07 14:44:47 -请求地址 : http://127.0.0.1:8088/common/generator/batchCode
2021-06-07 14:44:47 -HTTP METHOD : GET
2021-06-07 14:44:47 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.batchCode
2021-06-07 14:44:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@108a67de, org.apache.shiro.web.servlet.ShiroHttpServletResponse@587701c1, ["c_a"]]
2021-06-07 14:44:47 -耗时 : 75
2021-06-07 14:46:40 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 11680 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 14:46:40 -The following profiles are active: dev
2021-06-07 14:46:40 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 14:46:41 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 14:46:41 CST 2021]; root of context hierarchy
2021-06-07 14:46:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 14:46:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4156dad4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:46:42 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$31e1a5d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:46:42 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:46:42 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:46:42 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 14:46:42 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 14:46:42 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:46:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:46:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:46:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:46:42 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 14:46:42 -Starting service [Tomcat]
2021-06-07 14:46:42 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 14:46:43 -Initializing Spring embedded WebApplicationContext
2021-06-07 14:46:43 -Root WebApplicationContext: initialization completed in 2025 ms
2021-06-07 14:46:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 14:46:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 14:46:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 14:46:43 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 14:46:43 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 14:46:43 -Filter xssFilter was not registered (disabled)
2021-06-07 14:46:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 14:46:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 14:46:43 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 14:46:43 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 14:46:43 -{dataSource-1} inited
2021-06-07 14:46:44 -Using default implementation for ThreadExecutor
2021-06-07 14:46:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 14:46:44 -Quartz Scheduler v.2.2.1 created.
2021-06-07 14:46:44 -RAMJobStore initialized.
2021-06-07 14:46:44 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 14:46:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 14:46:44 -Quartz scheduler version: 2.2.1
2021-06-07 14:46:44 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@19662208
2021-06-07 14:46:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 14:46:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 14:46:44 -Mapped "{[/a/a/add],methods=[GET]}" onto java.lang.String com.shiguang.a.controller.AController.add()
2021-06-07 14:46:44 -Mapped "{[/a/a/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.a.controller.AController.remove(java.lang.Integer)
2021-06-07 14:46:44 -Mapped "{[/a/a/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.a.controller.AController.remove(java.lang.Integer[])
2021-06-07 14:46:44 -Mapped "{[/a/a/update]}" onto public com.shiguang.common.utils.R com.shiguang.a.controller.AController.update(com.shiguang.a.domain.ADO)
2021-06-07 14:46:44 -Mapped "{[/a/a/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.a.controller.AController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/a/a/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.a.controller.AController.save(com.shiguang.a.domain.ADO)
2021-06-07 14:46:44 -Mapped "{[/a/a],methods=[GET]}" onto java.lang.String com.shiguang.a.controller.AController.A()
2021-06-07 14:46:44 -Mapped "{[/a/a/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.a.controller.AController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 14:46:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 14:46:44 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 14:46:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 14:46:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 14:46:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 14:46:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 14:46:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 14:46:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 14:46:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 14:46:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 14:46:44 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 14:46:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 14:46:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 14:46:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 14:46:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 14:46:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 14:46:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 14:46:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 14:46:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 14:46:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 14:46:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 14:46:44 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 14:46:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 14:46:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 14:46:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 14:46:44 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 14:46:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 14:46:44 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 14:46:44 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 14:46:44 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 14:46:44 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 14:46:44 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 14:46:44 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 14:46:44 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 14:46:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 14:46:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 14:46:44 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 14:46:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 14:46:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 14:46:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 14:46:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 14:46:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 14:46:44 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 14:46:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 14:46:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 14:46:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 14:46:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 14:46:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 14:46:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 14:46:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 14:46:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 14:46:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 14:46:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 14:46:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 14:46:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 14:46:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 14:46:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 14:46:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 14:46:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 14:46:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 14:46:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 14:46:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 14:46:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 14:46:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 14:46:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 14:46:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 14:46:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 14:46:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 14:46:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 14:46:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 14:46:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:46:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 14:46:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 14:46:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 14:46:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 14:46:44 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 14:46:44 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 14:46:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 14:46:45 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 14:46:45 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 14:46:45 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 14:46:45 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 14:46:45 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:46:45 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 14:46:45 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 14:46:45 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 14:46:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 14:46:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 14:46:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 14:46:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 14:46:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 14:46:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 14:46:45 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 14:46:45 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 14:46:41 CST 2021]; root of context hierarchy
2021-06-07 14:46:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:46:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:46:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:46:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 14:46:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:46:46 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 14:46:46 -

Using default security password: 3c19d8ba-dcbd-467f-81ed-4bb9d17ca39f

2021-06-07 14:46:46 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 14:46:46 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@166ddfb7, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5da3f32a, org.springframework.security.web.context.SecurityContextPersistenceFilter@543ac221, org.springframework.security.web.header.HeaderWriterFilter@a6fc1bc, org.springframework.security.web.csrf.CsrfFilter@4b7e4d14, org.springframework.security.web.authentication.logout.LogoutFilter@4888425d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@cef885d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d525897, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57b3d869, org.springframework.security.web.session.SessionManagementFilter@7831d1aa, org.springframework.security.web.access.ExceptionTranslationFilter@4ebd8d2]
2021-06-07 14:46:46 -Registering beans for JMX exposure on startup
2021-06-07 14:46:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 14:46:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 14:46:46 -Starting beans in phase 2147483647
2021-06-07 14:46:46 -Context refreshed
2021-06-07 14:46:46 -Found 1 custom documentation plugin(s)
2021-06-07 14:46:46 -Scanning for api listing references
2021-06-07 14:46:46 -Generating unique operation named: removeUsingPOST_1
2021-06-07 14:46:46 -Generating unique operation named: addUsingGET_1
2021-06-07 14:46:46 -Generating unique operation named: editUsingGET_1
2021-06-07 14:46:46 -Generating unique operation named: listUsingGET_1
2021-06-07 14:46:46 -Generating unique operation named: removeUsingPOST_2
2021-06-07 14:46:46 -Generating unique operation named: removeUsingPOST_3
2021-06-07 14:46:46 -Generating unique operation named: saveUsingPOST_1
2021-06-07 14:46:46 -Generating unique operation named: updateUsingGET_1
2021-06-07 14:46:46 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 14:46:46 -Generating unique operation named: updateUsingPOST_1
2021-06-07 14:46:46 -Generating unique operation named: updateUsingPUT_1
2021-06-07 14:46:46 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 14:46:46 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 14:46:46 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 14:46:46 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 14:46:46 -Generating unique operation named: addUsingGET_2
2021-06-07 14:46:46 -Generating unique operation named: editUsingGET_2
2021-06-07 14:46:46 -Generating unique operation named: listUsingGET_2
2021-06-07 14:46:46 -Generating unique operation named: removeUsingPOST_4
2021-06-07 14:46:46 -Generating unique operation named: removeUsingPOST_5
2021-06-07 14:46:46 -Generating unique operation named: saveUsingPOST_2
2021-06-07 14:46:46 -Generating unique operation named: updateUsingGET_2
2021-06-07 14:46:46 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 14:46:46 -Generating unique operation named: updateUsingPOST_2
2021-06-07 14:46:46 -Generating unique operation named: updateUsingPUT_2
2021-06-07 14:46:46 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 14:46:46 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 14:46:46 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 14:46:46 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 14:46:46 -Generating unique operation named: addUsingGET_3
2021-06-07 14:46:46 -Generating unique operation named: editUsingGET_3
2021-06-07 14:46:46 -Generating unique operation named: listUsingGET_3
2021-06-07 14:46:46 -Generating unique operation named: removeUsingPOST_6
2021-06-07 14:46:46 -Generating unique operation named: removeUsingPOST_7
2021-06-07 14:46:46 -Generating unique operation named: saveUsingPOST_3
2021-06-07 14:46:46 -Generating unique operation named: updateUsingGET_3
2021-06-07 14:46:46 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 14:46:46 -Generating unique operation named: updateUsingPOST_3
2021-06-07 14:46:46 -Generating unique operation named: updateUsingPUT_3
2021-06-07 14:46:46 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 14:46:46 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 14:46:46 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 14:46:46 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 14:46:47 -Generating unique operation named: editUsingGET_4
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_4
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPOST_4
2021-06-07 14:46:47 -Generating unique operation named: addUsingGET_4
2021-06-07 14:46:47 -Generating unique operation named: editUsingGET_5
2021-06-07 14:46:47 -Generating unique operation named: infoUsingGET_1
2021-06-07 14:46:47 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 14:46:47 -Generating unique operation named: infoUsingPOST_1
2021-06-07 14:46:47 -Generating unique operation named: infoUsingPUT_1
2021-06-07 14:46:47 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 14:46:47 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 14:46:47 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 14:46:47 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_5
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_8
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_9
2021-06-07 14:46:47 -Generating unique operation named: saveUsingPOST_4
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPOST_5
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_6
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_10
2021-06-07 14:46:47 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 14:46:47 -Generating unique operation named: addUsingGET_5
2021-06-07 14:46:47 -Generating unique operation named: editUsingGET_6
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_7
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_11
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_12
2021-06-07 14:46:47 -Generating unique operation named: saveUsingPOST_5
2021-06-07 14:46:47 -Generating unique operation named: updateUsingGET_4
2021-06-07 14:46:47 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPOST_6
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPUT_4
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 14:46:47 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 14:46:47 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 14:46:47 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 14:46:47 -Generating unique operation named: addUsingGET_6
2021-06-07 14:46:47 -Generating unique operation named: editUsingGET_7
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_8
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_13
2021-06-07 14:46:47 -Generating unique operation named: saveUsingPOST_6
2021-06-07 14:46:47 -Generating unique operation named: treeUsingGET_1
2021-06-07 14:46:47 -Generating unique operation named: treeUsingGET_2
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPOST_7
2021-06-07 14:46:47 -Generating unique operation named: addUsingGET_7
2021-06-07 14:46:47 -Generating unique operation named: editUsingGET_8
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_9
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_14
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_15
2021-06-07 14:46:47 -Generating unique operation named: saveUsingPOST_7
2021-06-07 14:46:47 -Generating unique operation named: updateUsingGET_5
2021-06-07 14:46:47 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPOST_8
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPUT_5
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 14:46:47 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 14:46:47 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 14:46:47 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 14:46:47 -Generating unique operation named: addUsingGET_8
2021-06-07 14:46:47 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 14:46:47 -Generating unique operation named: editUsingGET_9
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_10
2021-06-07 14:46:47 -Generating unique operation named: saveUsingPOST_8
2021-06-07 14:46:47 -Generating unique operation named: saveUsingPOST_9
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPOST_9
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_11
2021-06-07 14:46:47 -Generating unique operation named: listUsingHEAD_1
2021-06-07 14:46:47 -Generating unique operation named: listUsingPOST_1
2021-06-07 14:46:47 -Generating unique operation named: listUsingPUT_1
2021-06-07 14:46:47 -Generating unique operation named: listUsingPATCH_1
2021-06-07 14:46:47 -Generating unique operation named: listUsingDELETE_1
2021-06-07 14:46:47 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 14:46:47 -Generating unique operation named: listUsingTRACE_1
2021-06-07 14:46:47 -Generating unique operation named: addUsingGET_9
2021-06-07 14:46:47 -Generating unique operation named: editUsingGET_10
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_12
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_16
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_17
2021-06-07 14:46:47 -Generating unique operation named: saveUsingPOST_10
2021-06-07 14:46:47 -Generating unique operation named: updateUsingGET_6
2021-06-07 14:46:47 -Generating unique operation named: updateUsingHEAD_6
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPOST_10
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPUT_6
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPATCH_6
2021-06-07 14:46:47 -Generating unique operation named: updateUsingDELETE_6
2021-06-07 14:46:47 -Generating unique operation named: updateUsingOPTIONS_6
2021-06-07 14:46:47 -Generating unique operation named: updateUsingTRACE_6
2021-06-07 14:46:47 -Generating unique operation named: addUsingGET_10
2021-06-07 14:46:47 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 14:46:47 -Generating unique operation named: editUsingGET_11
2021-06-07 14:46:47 -Generating unique operation named: listUsingGET_13
2021-06-07 14:46:47 -Generating unique operation named: removeUsingPOST_18
2021-06-07 14:46:47 -Generating unique operation named: saveUsingPOST_11
2021-06-07 14:46:47 -Generating unique operation named: treeUsingGET_3
2021-06-07 14:46:47 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 14:46:47 -Generating unique operation named: updateUsingPOST_11
2021-06-07 14:46:47 -Starting Quartz Scheduler now
2021-06-07 14:46:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 14:46:47 -Starting...
2021-06-07 14:46:47 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 14:46:47 -Started.
2021-06-07 14:46:47 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 14:46:47 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 14:46:47 -Using a shared selector for servlet write/read
2021-06-07 14:46:47 -Tomcat started on port(s): 8088 (http)
2021-06-07 14:46:47 -Started BootdoApplication in 7.036 seconds (JVM running for 7.688)
2021-06-07 14:46:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 14:46:58 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 14:46:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2021-06-07 14:46:58 -Enabling session validation scheduler...
2021-06-07 14:46:58 -请求地址 : http://localhost:8088/
2021-06-07 14:46:58 -HTTP METHOD : GET
2021-06-07 14:46:58 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 14:46:58 -参数 : [{}]
2021-06-07 14:46:58 -耗时 : 1
2021-06-07 14:46:58 -请求地址 : http://localhost:8088/login
2021-06-07 14:46:58 -HTTP METHOD : GET
2021-06-07 14:46:58 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:46:58 -参数 : []
2021-06-07 14:46:58 -耗时 : 1
2021-06-07 14:46:58 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 14:46:58 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 14:46:58 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 14:46:58 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 14:46:58 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 14:46:58 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 14:46:58 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 14:46:59 -请求地址 : http://localhost:8088/login
2021-06-07 14:46:59 -HTTP METHOD : POST
2021-06-07 14:46:59 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:46:59 -参数 : [admin, Dm202007sc]
2021-06-07 14:46:59 -耗时 : 9
2021-06-07 14:46:59 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 14:46:59 -请求地址 : http://localhost:8088/index
2021-06-07 14:46:59 -HTTP METHOD : GET
2021-06-07 14:46:59 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:46:59 -参数 : [{}]
2021-06-07 14:46:59 -耗时 : 20
2021-06-07 14:46:59 -请求地址 : http://localhost:8088/main
2021-06-07 14:46:59 -HTTP METHOD : GET
2021-06-07 14:46:59 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:46:59 -参数 : []
2021-06-07 14:46:59 -耗时 : 0
2021-06-07 14:46:59 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:46:59 -HTTP METHOD : GET
2021-06-07 14:46:59 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:46:59 -参数 : []
2021-06-07 14:46:59 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy115.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy118.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$be324085.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:46:59 -请求地址 : http://localhost:8088/main
2021-06-07 14:46:59 -HTTP METHOD : GET
2021-06-07 14:46:59 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:46:59 -参数 : []
2021-06-07 14:46:59 -耗时 : 0
2021-06-07 14:47:06 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:47:06 -HTTP METHOD : GET
2021-06-07 14:47:06 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:47:06 -参数 : [{}]
2021-06-07 14:47:06 -耗时 : 0
2021-06-07 14:47:07 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:47:07 -HTTP METHOD : GET
2021-06-07 14:47:07 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:47:07 -参数 : [{sort=order_num}]
2021-06-07 14:47:07 -耗时 : 11
2021-06-07 14:47:11 -请求地址 : http://localhost:8088/sys/menu/add/0
2021-06-07 14:47:11 -HTTP METHOD : GET
2021-06-07 14:47:11 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 14:47:11 -参数 : [{}, 0]
2021-06-07 14:47:11 -耗时 : 0
2021-06-07 14:47:44 -请求地址 : http://localhost:8088/sys/menu/save
2021-06-07 14:47:44 -HTTP METHOD : POST
2021-06-07 14:47:44 -CLASS_METHOD : com.shiguang.system.controller.MenuController.save
2021-06-07 14:47:44 -参数 : [MenuDO{menuId=null, parentId=0, name='测试列表', url='/a/a', perms='a:a:a', type=0, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 14:47:44 -耗时 : 44
2021-06-07 14:47:44 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:47:44 -HTTP METHOD : GET
2021-06-07 14:47:44 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:47:44 -参数 : [{sort=order_num}]
2021-06-07 14:47:44 -耗时 : 5
2021-06-07 14:47:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 11]
2021-06-07 14:47:47 -请求地址 : http://localhost:8088/index
2021-06-07 14:47:47 -HTTP METHOD : GET
2021-06-07 14:47:47 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:47:47 -参数 : [{}]
2021-06-07 14:47:47 -耗时 : 6
2021-06-07 14:47:47 -请求地址 : http://localhost:8088/main
2021-06-07 14:47:47 -HTTP METHOD : GET
2021-06-07 14:47:47 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:47:47 -参数 : []
2021-06-07 14:47:47 -耗时 : 1
2021-06-07 14:47:47 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:47:47 -HTTP METHOD : GET
2021-06-07 14:47:47 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:47:47 -参数 : []
2021-06-07 14:47:47 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy115.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy118.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$be324085.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:47:47 -请求地址 : http://localhost:8088/main
2021-06-07 14:47:47 -HTTP METHOD : GET
2021-06-07 14:47:47 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:47:47 -参数 : []
2021-06-07 14:47:47 -耗时 : 0
2021-06-07 14:47:52 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 14:47:52 -HTTP METHOD : GET
2021-06-07 14:47:52 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 14:47:52 -参数 : []
2021-06-07 14:47:52 -耗时 : 0
2021-06-07 14:47:52 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 14:47:52 -HTTP METHOD : GET
2021-06-07 14:47:52 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 14:47:52 -参数 : []
2021-06-07 14:47:52 -耗时 : 3
2021-06-07 14:47:55 -请求地址 : http://localhost:8088/sys/role/edit/2
2021-06-07 14:47:55 -HTTP METHOD : GET
2021-06-07 14:47:55 -CLASS_METHOD : com.shiguang.system.controller.RoleController.edit
2021-06-07 14:47:55 -参数 : [2, {}]
2021-06-07 14:47:55 -耗时 : 1
2021-06-07 14:47:55 -请求地址 : http://localhost:8088/sys/menu/tree/2
2021-06-07 14:47:55 -HTTP METHOD : GET
2021-06-07 14:47:55 -CLASS_METHOD : com.shiguang.system.controller.MenuController.tree
2021-06-07 14:47:55 -参数 : [2]
2021-06-07 14:47:55 -耗时 : 6
2021-06-07 14:48:07 -请求地址 : http://localhost:8088/sys/role/update
2021-06-07 14:48:07 -HTTP METHOD : POST
2021-06-07 14:48:07 -CLASS_METHOD : com.shiguang.system.controller.RoleController.update
2021-06-07 14:48:07 -参数 : [RoleDO{roleId=2, roleName='admin', roleSign='null', remark='超级管理权限', userIdCreate=null, gmtCreate=2019-03-19 16:28:02.0, gmtModified=null, menuIds=[271, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 61, 22, 21, 20, 270, 113, 105, 104, 2, 3, 281, 279, 280, -1], status=null}]
2021-06-07 14:48:08 -耗时 : 104
2021-06-07 14:48:08 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 14:48:08 -HTTP METHOD : GET
2021-06-07 14:48:08 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 14:48:08 -参数 : []
2021-06-07 14:48:08 -耗时 : 1
2021-06-07 14:48:09 -请求地址 : http://localhost:8088/index
2021-06-07 14:48:09 -HTTP METHOD : GET
2021-06-07 14:48:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:48:09 -参数 : [{}]
2021-06-07 14:48:09 -耗时 : 6
2021-06-07 14:48:09 -请求地址 : http://localhost:8088/main
2021-06-07 14:48:09 -HTTP METHOD : GET
2021-06-07 14:48:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:48:09 -参数 : []
2021-06-07 14:48:09 -耗时 : 0
2021-06-07 14:48:09 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:48:09 -HTTP METHOD : GET
2021-06-07 14:48:09 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:48:09 -参数 : []
2021-06-07 14:48:09 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy115.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy118.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor122.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$be324085.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:48:09 -请求地址 : http://localhost:8088/main
2021-06-07 14:48:09 -HTTP METHOD : GET
2021-06-07 14:48:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:48:09 -参数 : []
2021-06-07 14:48:09 -耗时 : 0
2021-06-07 14:48:12 -Subject does not have permission [manufacturer:manufacturer:manufacturer]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [manufacturer:manufacturer:manufacturer]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.manufacturer.controller.ManufacturerController$$EnhancerBySpringCGLIB$$56d49fba.Manufacturer(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2021-06-07 14:48:21 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 14:48:21 -HTTP METHOD : GET
2021-06-07 14:48:21 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 14:48:21 -参数 : []
2021-06-07 14:48:21 -耗时 : 1
2021-06-07 14:48:21 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 14:48:21 -HTTP METHOD : GET
2021-06-07 14:48:21 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 14:48:21 -参数 : []
2021-06-07 14:48:21 -耗时 : 1
2021-06-07 14:48:21 -请求地址 : http://localhost:8088/sys/user/
2021-06-07 14:48:21 -HTTP METHOD : GET
2021-06-07 14:48:21 -CLASS_METHOD : com.shiguang.system.controller.UserController.user
2021-06-07 14:48:21 -参数 : [{}]
2021-06-07 14:48:21 -耗时 : 0
2021-06-07 14:48:21 -请求地址 : http://localhost:8088/sys/user/list
2021-06-07 14:48:21 -HTTP METHOD : GET
2021-06-07 14:48:21 -CLASS_METHOD : com.shiguang.system.controller.UserController.list
2021-06-07 14:48:21 -参数 : [{limit=10, offset=0, name=, deptId=}]
2021-06-07 14:48:22 -耗时 : 12
2021-06-07 14:48:23 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:48:23 -HTTP METHOD : GET
2021-06-07 14:48:23 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:48:23 -参数 : [{}]
2021-06-07 14:48:23 -耗时 : 0
2021-06-07 14:48:23 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:48:23 -HTTP METHOD : GET
2021-06-07 14:48:23 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:48:23 -参数 : [{sort=order_num}]
2021-06-07 14:48:23 -耗时 : 4
2021-06-07 14:48:27 -请求地址 : http://localhost:8088/sys/menu/remove
2021-06-07 14:48:27 -HTTP METHOD : POST
2021-06-07 14:48:27 -CLASS_METHOD : com.shiguang.system.controller.MenuController.remove
2021-06-07 14:48:27 -参数 : [281]
2021-06-07 14:48:27 -耗时 : 54
2021-06-07 14:48:27 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:48:27 -HTTP METHOD : GET
2021-06-07 14:48:27 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:48:27 -参数 : [{sort=order_num}]
2021-06-07 14:48:27 -耗时 : 3
2021-06-07 14:48:30 -请求地址 : http://localhost:8088/index
2021-06-07 14:48:30 -HTTP METHOD : GET
2021-06-07 14:48:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:48:30 -参数 : [{}]
2021-06-07 14:48:30 -耗时 : 4
2021-06-07 14:48:30 -请求地址 : http://localhost:8088/main
2021-06-07 14:48:30 -HTTP METHOD : GET
2021-06-07 14:48:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:48:30 -参数 : []
2021-06-07 14:48:30 -耗时 : 0
2021-06-07 14:48:30 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:48:30 -HTTP METHOD : GET
2021-06-07 14:48:30 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:48:30 -参数 : []
2021-06-07 14:48:30 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy115.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy118.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor122.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$be324085.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:48:30 -请求地址 : http://localhost:8088/main
2021-06-07 14:48:30 -HTTP METHOD : GET
2021-06-07 14:48:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:48:30 -参数 : []
2021-06-07 14:48:30 -耗时 : 0
2021-06-07 14:48:33 -Subject does not have permission [manufacturer:manufacturer:manufacturer]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [manufacturer:manufacturer:manufacturer]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.manufacturer.controller.ManufacturerController$$EnhancerBySpringCGLIB$$56d49fba.Manufacturer(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 85 common frames omitted
2021-06-07 14:48:38 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 14:48:38 -HTTP METHOD : GET
2021-06-07 14:48:38 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 14:48:38 -参数 : []
2021-06-07 14:48:38 -耗时 : 0
2021-06-07 14:48:38 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 14:48:38 -HTTP METHOD : GET
2021-06-07 14:48:38 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 14:48:38 -参数 : []
2021-06-07 14:48:38 -耗时 : 2
2021-06-07 14:48:39 -请求地址 : http://localhost:8088/sys/user/
2021-06-07 14:48:39 -HTTP METHOD : GET
2021-06-07 14:48:39 -CLASS_METHOD : com.shiguang.system.controller.UserController.user
2021-06-07 14:48:39 -参数 : [{}]
2021-06-07 14:48:39 -耗时 : 0
2021-06-07 14:48:39 -请求地址 : http://localhost:8088/sys/user/list
2021-06-07 14:48:39 -HTTP METHOD : GET
2021-06-07 14:48:39 -CLASS_METHOD : com.shiguang.system.controller.UserController.list
2021-06-07 14:48:39 -参数 : [{limit=10, offset=0, name=, deptId=}]
2021-06-07 14:48:39 -耗时 : 8
2021-06-07 14:48:40 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:48:40 -HTTP METHOD : GET
2021-06-07 14:48:40 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:48:40 -参数 : [{}]
2021-06-07 14:48:40 -耗时 : 0
2021-06-07 14:48:40 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:48:40 -HTTP METHOD : GET
2021-06-07 14:48:40 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:48:40 -参数 : [{sort=order_num}]
2021-06-07 14:48:40 -耗时 : 4
2021-06-07 14:48:50 -请求地址 : http://localhost:8088/sys/user/sysedit
2021-06-07 14:48:50 -HTTP METHOD : GET
2021-06-07 14:48:50 -CLASS_METHOD : com.shiguang.system.controller.UserController.sysedit
2021-06-07 14:48:50 -参数 : [{}]
2021-06-07 14:48:50 -耗时 : 3
2021-06-07 14:49:40 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 8328 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 14:49:40 -The following profiles are active: dev
2021-06-07 14:49:40 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 14:49:40 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 14:49:40 CST 2021]; root of context hierarchy
2021-06-07 14:49:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 14:49:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee47edf5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:49:41 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ded2b8f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:49:42 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:49:42 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:49:42 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 14:49:42 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 14:49:42 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:49:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:49:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:49:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 14:49:42 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 14:49:42 -Starting service [Tomcat]
2021-06-07 14:49:42 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 14:49:42 -Initializing Spring embedded WebApplicationContext
2021-06-07 14:49:42 -Root WebApplicationContext: initialization completed in 2062 ms
2021-06-07 14:49:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 14:49:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 14:49:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 14:49:43 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 14:49:43 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 14:49:43 -Filter xssFilter was not registered (disabled)
2021-06-07 14:49:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 14:49:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 14:49:43 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 14:49:43 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 14:49:43 -{dataSource-1} inited
2021-06-07 14:49:43 -Using default implementation for ThreadExecutor
2021-06-07 14:49:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 14:49:43 -Quartz Scheduler v.2.2.1 created.
2021-06-07 14:49:43 -RAMJobStore initialized.
2021-06-07 14:49:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 14:49:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 14:49:43 -Quartz scheduler version: 2.2.1
2021-06-07 14:49:43 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@2c9306d3
2021-06-07 14:49:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 14:49:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 14:49:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 14:49:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 14:49:44 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 14:49:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 14:49:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 14:49:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 14:49:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 14:49:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 14:49:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 14:49:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 14:49:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 14:49:44 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 14:49:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 14:49:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 14:49:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 14:49:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 14:49:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 14:49:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 14:49:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 14:49:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 14:49:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 14:49:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 14:49:44 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 14:49:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 14:49:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 14:49:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 14:49:44 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 14:49:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 14:49:44 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 14:49:44 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 14:49:44 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 14:49:44 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 14:49:44 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 14:49:44 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 14:49:44 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 14:49:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 14:49:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 14:49:44 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 14:49:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 14:49:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 14:49:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 14:49:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 14:49:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 14:49:44 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 14:49:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 14:49:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 14:49:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 14:49:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 14:49:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 14:49:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 14:49:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 14:49:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 14:49:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 14:49:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 14:49:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 14:49:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 14:49:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 14:49:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 14:49:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 14:49:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 14:49:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 14:49:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 14:49:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 14:49:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 14:49:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 14:49:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 14:49:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 14:49:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 14:49:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 14:49:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 14:49:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 14:49:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 14:49:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 14:49:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 14:49:44 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 14:49:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 14:49:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 14:49:44 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 14:49:44 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 14:49:44 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 14:49:44 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 14:49:44 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 14:49:44 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 14:49:44 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 14:49:44 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 14:49:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 14:49:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 14:49:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 14:49:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 14:49:44 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 14:49:44 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 14:49:44 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 14:49:45 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 14:49:40 CST 2021]; root of context hierarchy
2021-06-07 14:49:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:49:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:49:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:49:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 14:49:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 14:49:46 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 14:49:46 -

Using default security password: 41c48cc6-a06c-425b-b384-bea5e3af6ae6

2021-06-07 14:49:46 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 14:49:46 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@148fca83, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d2a8819, org.springframework.security.web.context.SecurityContextPersistenceFilter@146833a2, org.springframework.security.web.header.HeaderWriterFilter@6a0e97fc, org.springframework.security.web.csrf.CsrfFilter@1cab19e2, org.springframework.security.web.authentication.logout.LogoutFilter@41b66d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@424a152f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11582db6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72585e83, org.springframework.security.web.session.SessionManagementFilter@4df13dd0, org.springframework.security.web.access.ExceptionTranslationFilter@c0004b7]
2021-06-07 14:49:46 -Registering beans for JMX exposure on startup
2021-06-07 14:49:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 14:49:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 14:49:46 -Starting beans in phase 2147483647
2021-06-07 14:49:46 -Context refreshed
2021-06-07 14:49:46 -Found 1 custom documentation plugin(s)
2021-06-07 14:49:46 -Scanning for api listing references
2021-06-07 14:49:46 -Generating unique operation named: removeUsingPOST_1
2021-06-07 14:49:46 -Generating unique operation named: addUsingGET_1
2021-06-07 14:49:46 -Generating unique operation named: editUsingGET_1
2021-06-07 14:49:46 -Generating unique operation named: listUsingGET_1
2021-06-07 14:49:46 -Generating unique operation named: removeUsingPOST_2
2021-06-07 14:49:46 -Generating unique operation named: removeUsingPOST_3
2021-06-07 14:49:46 -Generating unique operation named: saveUsingPOST_1
2021-06-07 14:49:46 -Generating unique operation named: updateUsingGET_1
2021-06-07 14:49:46 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 14:49:46 -Generating unique operation named: updateUsingPOST_1
2021-06-07 14:49:46 -Generating unique operation named: updateUsingPUT_1
2021-06-07 14:49:46 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 14:49:46 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 14:49:46 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 14:49:46 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 14:49:46 -Generating unique operation named: addUsingGET_2
2021-06-07 14:49:46 -Generating unique operation named: editUsingGET_2
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_2
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_4
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_5
2021-06-07 14:49:47 -Generating unique operation named: saveUsingPOST_2
2021-06-07 14:49:47 -Generating unique operation named: updateUsingGET_2
2021-06-07 14:49:47 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPOST_2
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPUT_2
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 14:49:47 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 14:49:47 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 14:49:47 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 14:49:47 -Generating unique operation named: editUsingGET_3
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_3
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPOST_3
2021-06-07 14:49:47 -Generating unique operation named: addUsingGET_3
2021-06-07 14:49:47 -Generating unique operation named: editUsingGET_4
2021-06-07 14:49:47 -Generating unique operation named: infoUsingGET_1
2021-06-07 14:49:47 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 14:49:47 -Generating unique operation named: infoUsingPOST_1
2021-06-07 14:49:47 -Generating unique operation named: infoUsingPUT_1
2021-06-07 14:49:47 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 14:49:47 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 14:49:47 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 14:49:47 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_4
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_6
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_7
2021-06-07 14:49:47 -Generating unique operation named: saveUsingPOST_3
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPOST_4
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_5
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_8
2021-06-07 14:49:47 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 14:49:47 -Generating unique operation named: addUsingGET_4
2021-06-07 14:49:47 -Generating unique operation named: editUsingGET_5
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_6
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_9
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_10
2021-06-07 14:49:47 -Generating unique operation named: saveUsingPOST_4
2021-06-07 14:49:47 -Generating unique operation named: updateUsingGET_3
2021-06-07 14:49:47 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPOST_5
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPUT_3
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 14:49:47 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 14:49:47 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 14:49:47 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 14:49:47 -Generating unique operation named: addUsingGET_5
2021-06-07 14:49:47 -Generating unique operation named: editUsingGET_6
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_7
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_11
2021-06-07 14:49:47 -Generating unique operation named: saveUsingPOST_5
2021-06-07 14:49:47 -Generating unique operation named: treeUsingGET_1
2021-06-07 14:49:47 -Generating unique operation named: treeUsingGET_2
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPOST_6
2021-06-07 14:49:47 -Generating unique operation named: addUsingGET_6
2021-06-07 14:49:47 -Generating unique operation named: editUsingGET_7
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_8
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_12
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_13
2021-06-07 14:49:47 -Generating unique operation named: saveUsingPOST_6
2021-06-07 14:49:47 -Generating unique operation named: updateUsingGET_4
2021-06-07 14:49:47 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPOST_7
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPUT_4
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 14:49:47 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 14:49:47 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 14:49:47 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 14:49:47 -Generating unique operation named: addUsingGET_7
2021-06-07 14:49:47 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 14:49:47 -Generating unique operation named: editUsingGET_8
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_9
2021-06-07 14:49:47 -Generating unique operation named: saveUsingPOST_7
2021-06-07 14:49:47 -Generating unique operation named: saveUsingPOST_8
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPOST_8
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_10
2021-06-07 14:49:47 -Generating unique operation named: listUsingHEAD_1
2021-06-07 14:49:47 -Generating unique operation named: listUsingPOST_1
2021-06-07 14:49:47 -Generating unique operation named: listUsingPUT_1
2021-06-07 14:49:47 -Generating unique operation named: listUsingPATCH_1
2021-06-07 14:49:47 -Generating unique operation named: listUsingDELETE_1
2021-06-07 14:49:47 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 14:49:47 -Generating unique operation named: listUsingTRACE_1
2021-06-07 14:49:47 -Generating unique operation named: addUsingGET_8
2021-06-07 14:49:47 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 14:49:47 -Generating unique operation named: editUsingGET_9
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_11
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_14
2021-06-07 14:49:47 -Generating unique operation named: saveUsingPOST_9
2021-06-07 14:49:47 -Generating unique operation named: treeUsingGET_3
2021-06-07 14:49:47 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPOST_9
2021-06-07 14:49:47 -Generating unique operation named: addUsingGET_9
2021-06-07 14:49:47 -Generating unique operation named: editUsingGET_10
2021-06-07 14:49:47 -Generating unique operation named: listUsingGET_12
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_15
2021-06-07 14:49:47 -Generating unique operation named: removeUsingPOST_16
2021-06-07 14:49:47 -Generating unique operation named: saveUsingPOST_10
2021-06-07 14:49:47 -Generating unique operation named: updateUsingGET_5
2021-06-07 14:49:47 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPOST_10
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPUT_5
2021-06-07 14:49:47 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 14:49:47 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 14:49:47 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 14:49:47 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 14:49:47 -Starting Quartz Scheduler now
2021-06-07 14:49:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 14:49:47 -Starting...
2021-06-07 14:49:47 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 14:49:47 -Started.
2021-06-07 14:49:47 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 14:49:47 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 14:49:47 -Using a shared selector for servlet write/read
2021-06-07 14:49:47 -Tomcat started on port(s): 8088 (http)
2021-06-07 14:49:47 -Started BootdoApplication in 7.431 seconds (JVM running for 8.125)
2021-06-07 14:50:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 14:50:01 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 14:50:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 14:50:01 -Enabling session validation scheduler...
2021-06-07 14:50:01 -请求地址 : http://localhost:8088/login;JSESSIONID=66af2b1f-4d70-4c4a-852d-33cb2a179f2b
2021-06-07 14:50:01 -HTTP METHOD : GET
2021-06-07 14:50:01 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:50:01 -参数 : []
2021-06-07 14:50:01 -耗时 : 1
2021-06-07 14:50:01 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 14:50:01 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 14:50:01 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 14:50:01 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 14:50:01 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 14:50:01 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 14:50:01 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 14:50:02 -请求地址 : http://localhost:8088/login
2021-06-07 14:50:02 -HTTP METHOD : POST
2021-06-07 14:50:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:50:02 -参数 : [admin, Dm202007sc]
2021-06-07 14:50:02 -耗时 : 6
2021-06-07 14:50:02 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 14:50:02 -请求地址 : http://localhost:8088/index
2021-06-07 14:50:02 -HTTP METHOD : GET
2021-06-07 14:50:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:50:02 -参数 : [{}]
2021-06-07 14:50:02 -耗时 : 21
2021-06-07 14:50:02 -请求地址 : http://localhost:8088/main
2021-06-07 14:50:02 -HTTP METHOD : GET
2021-06-07 14:50:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:50:02 -参数 : []
2021-06-07 14:50:02 -耗时 : 0
2021-06-07 14:50:02 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:50:02 -HTTP METHOD : GET
2021-06-07 14:50:02 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:50:02 -参数 : []
2021-06-07 14:50:02 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:50:02 -请求地址 : http://localhost:8088/main
2021-06-07 14:50:02 -HTTP METHOD : GET
2021-06-07 14:50:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:50:02 -参数 : []
2021-06-07 14:50:02 -耗时 : 1
2021-06-07 14:50:05 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=306af323-1f35-4ecb-ab27-37ef808a50b8
2021-06-07 14:50:05 -HTTP METHOD : GET
2021-06-07 14:50:05 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 14:50:05 -参数 : []
2021-06-07 14:50:05 -耗时 : 1
2021-06-07 14:50:09 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 14:50:09 -HTTP METHOD : POST
2021-06-07 14:50:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 14:50:09 -参数 : [admin, Dm202007sc]
2021-06-07 14:50:09 -耗时 : 2
2021-06-07 14:50:09 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 14:50:09 -HTTP METHOD : GET
2021-06-07 14:50:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:50:09 -参数 : [{}]
2021-06-07 14:50:09 -耗时 : 6
2021-06-07 14:50:09 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:50:09 -HTTP METHOD : GET
2021-06-07 14:50:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:50:09 -参数 : []
2021-06-07 14:50:09 -耗时 : 1
2021-06-07 14:50:09 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 14:50:09 -HTTP METHOD : GET
2021-06-07 14:50:09 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:50:09 -参数 : []
2021-06-07 14:50:09 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:50:09 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:50:09 -HTTP METHOD : GET
2021-06-07 14:50:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:50:09 -参数 : []
2021-06-07 14:50:09 -耗时 : 0
2021-06-07 14:50:15 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:50:15 -HTTP METHOD : GET
2021-06-07 14:50:15 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:50:15 -参数 : []
2021-06-07 14:50:15 -耗时 : 1
2021-06-07 14:50:24 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 14:50:24 -HTTP METHOD : GET
2021-06-07 14:50:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:50:24 -参数 : []
2021-06-07 14:50:24 -耗时 : 1
2021-06-07 14:50:30 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 14:50:30 -HTTP METHOD : GET
2021-06-07 14:50:30 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 14:50:30 -参数 : []
2021-06-07 14:50:30 -耗时 : 1
2021-06-07 14:50:32 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 14:50:32 -HTTP METHOD : GET
2021-06-07 14:50:32 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 14:50:32 -参数 : []
2021-06-07 14:50:32 -耗时 : 13
2021-06-07 14:50:40 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 14:50:40 -HTTP METHOD : GET
2021-06-07 14:50:40 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 14:50:40 -参数 : []
2021-06-07 14:50:40 -耗时 : 0
2021-06-07 14:50:40 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 14:50:40 -HTTP METHOD : GET
2021-06-07 14:50:40 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 14:50:40 -参数 : [{limit=10, offset=0}]
2021-06-07 14:50:40 -耗时 : 7
2021-06-07 14:50:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 7, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 10]
2021-06-07 14:51:57 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:51:57 -HTTP METHOD : GET
2021-06-07 14:51:57 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:51:57 -参数 : [{}]
2021-06-07 14:51:57 -耗时 : 1
2021-06-07 14:51:57 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:51:57 -HTTP METHOD : GET
2021-06-07 14:51:57 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:51:57 -参数 : [{sort=order_num}]
2021-06-07 14:51:57 -耗时 : 9
2021-06-07 14:52:01 -请求地址 : http://localhost:8088/sys/menu/add/280
2021-06-07 14:52:01 -HTTP METHOD : GET
2021-06-07 14:52:01 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 14:52:01 -参数 : [{}, 280]
2021-06-07 14:52:01 -耗时 : 4
2021-06-07 14:54:06 -请求地址 : http://localhost:8088/sys/menu/save
2021-06-07 14:54:06 -HTTP METHOD : POST
2021-06-07 14:54:06 -CLASS_METHOD : com.shiguang.system.controller.MenuController.save
2021-06-07 14:54:06 -参数 : [MenuDO{menuId=null, parentId=280, name='添加', url='/manufacturer/manufacturer/add', perms='manufacturer:manufacturer:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 14:54:06 -耗时 : 47
2021-06-07 14:54:06 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:54:06 -HTTP METHOD : GET
2021-06-07 14:54:06 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:54:06 -参数 : [{sort=order_num}]
2021-06-07 14:54:06 -耗时 : 5
2021-06-07 14:54:11 -请求地址 : http://localhost:8088/index
2021-06-07 14:54:11 -HTTP METHOD : GET
2021-06-07 14:54:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:54:11 -参数 : [{}]
2021-06-07 14:54:11 -耗时 : 11
2021-06-07 14:54:11 -请求地址 : http://localhost:8088/main
2021-06-07 14:54:11 -HTTP METHOD : GET
2021-06-07 14:54:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:54:11 -参数 : []
2021-06-07 14:54:11 -耗时 : 0
2021-06-07 14:54:11 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:54:11 -HTTP METHOD : GET
2021-06-07 14:54:11 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:54:11 -参数 : []
2021-06-07 14:54:11 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:54:11 -请求地址 : http://localhost:8088/main
2021-06-07 14:54:11 -HTTP METHOD : GET
2021-06-07 14:54:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:54:11 -参数 : []
2021-06-07 14:54:11 -耗时 : 1
2021-06-07 14:54:14 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 14:54:14 -HTTP METHOD : GET
2021-06-07 14:54:14 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 14:54:14 -参数 : []
2021-06-07 14:54:14 -耗时 : 0
2021-06-07 14:54:14 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 14:54:14 -HTTP METHOD : GET
2021-06-07 14:54:14 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 14:54:14 -参数 : [{limit=10, offset=0}]
2021-06-07 14:54:14 -耗时 : 2
2021-06-07 14:54:22 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 14:54:22 -HTTP METHOD : GET
2021-06-07 14:54:22 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 14:54:22 -参数 : []
2021-06-07 14:54:22 -耗时 : 0
2021-06-07 14:54:23 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 14:54:23 -HTTP METHOD : GET
2021-06-07 14:54:23 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 14:54:23 -参数 : []
2021-06-07 14:54:23 -耗时 : 3
2021-06-07 14:54:24 -请求地址 : http://localhost:8088/sys/role/edit/2
2021-06-07 14:54:24 -HTTP METHOD : GET
2021-06-07 14:54:24 -CLASS_METHOD : com.shiguang.system.controller.RoleController.edit
2021-06-07 14:54:24 -参数 : [2, {}]
2021-06-07 14:54:24 -耗时 : 2
2021-06-07 14:54:24 -请求地址 : http://localhost:8088/sys/menu/tree/2
2021-06-07 14:54:24 -HTTP METHOD : GET
2021-06-07 14:54:24 -CLASS_METHOD : com.shiguang.system.controller.MenuController.tree
2021-06-07 14:54:24 -参数 : [2]
2021-06-07 14:54:24 -耗时 : 7
2021-06-07 14:54:31 -请求地址 : http://localhost:8088/sys/role/update
2021-06-07 14:54:31 -HTTP METHOD : POST
2021-06-07 14:54:31 -CLASS_METHOD : com.shiguang.system.controller.RoleController.update
2021-06-07 14:54:31 -参数 : [RoleDO{roleId=2, roleName='admin', roleSign='null', remark='超级管理权限', userIdCreate=null, gmtCreate=2019-03-19 16:28:02.0, gmtModified=null, menuIds=[271, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 61, 22, 21, 20, 270, 113, 105, 104, 2, 3, 279, 282, 280, -1], status=null}]
2021-06-07 14:54:31 -耗时 : 120
2021-06-07 14:54:31 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 14:54:31 -HTTP METHOD : GET
2021-06-07 14:54:31 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 14:54:31 -参数 : []
2021-06-07 14:54:31 -耗时 : 17
2021-06-07 14:54:33 -请求地址 : http://localhost:8088/index
2021-06-07 14:54:33 -HTTP METHOD : GET
2021-06-07 14:54:33 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:54:33 -参数 : [{}]
2021-06-07 14:54:33 -耗时 : 4
2021-06-07 14:54:33 -请求地址 : http://localhost:8088/main
2021-06-07 14:54:33 -HTTP METHOD : GET
2021-06-07 14:54:33 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:54:33 -参数 : []
2021-06-07 14:54:33 -耗时 : 1
2021-06-07 14:54:33 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:54:33 -HTTP METHOD : GET
2021-06-07 14:54:33 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:54:33 -参数 : []
2021-06-07 14:54:33 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:54:33 -请求地址 : http://localhost:8088/main
2021-06-07 14:54:33 -HTTP METHOD : GET
2021-06-07 14:54:33 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:54:33 -参数 : []
2021-06-07 14:54:33 -耗时 : 0
2021-06-07 14:54:35 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 14:54:35 -HTTP METHOD : GET
2021-06-07 14:54:35 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 14:54:35 -参数 : []
2021-06-07 14:54:35 -耗时 : 0
2021-06-07 14:54:35 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 14:54:35 -HTTP METHOD : GET
2021-06-07 14:54:35 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 14:54:35 -参数 : [{limit=10, offset=0}]
2021-06-07 14:54:35 -耗时 : 2
2021-06-07 14:54:42 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 14:54:42 -HTTP METHOD : GET
2021-06-07 14:54:42 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 14:54:42 -参数 : [{limit=10, offset=0}]
2021-06-07 14:54:42 -耗时 : 1
2021-06-07 14:54:55 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 14:54:55 -HTTP METHOD : GET
2021-06-07 14:54:55 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 14:54:55 -参数 : [{}]
2021-06-07 14:54:55 -耗时 : 0
2021-06-07 14:54:55 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:54:55 -HTTP METHOD : GET
2021-06-07 14:54:55 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:54:55 -参数 : [{sort=order_num}]
2021-06-07 14:54:55 -耗时 : 4
2021-06-07 14:55:17 -请求地址 : http://localhost:8088/sys/menu/edit/282
2021-06-07 14:55:17 -HTTP METHOD : GET
2021-06-07 14:55:17 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 14:55:17 -参数 : [{}, 282]
2021-06-07 14:55:17 -耗时 : 5
2021-06-07 14:55:21 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 14:55:21 -HTTP METHOD : POST
2021-06-07 14:55:21 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 14:55:21 -参数 : [MenuDO{menuId=282, parentId=280, name='添加', url='', perms='manufacturer:manufacturer:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 14:55:21 -耗时 : 22
2021-06-07 14:55:21 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 14:55:21 -HTTP METHOD : GET
2021-06-07 14:55:21 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 14:55:21 -参数 : [{sort=order_num}]
2021-06-07 14:55:21 -耗时 : 4
2021-06-07 14:55:24 -请求地址 : http://localhost:8088/index
2021-06-07 14:55:24 -HTTP METHOD : GET
2021-06-07 14:55:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 14:55:24 -参数 : [{}]
2021-06-07 14:55:24 -耗时 : 5
2021-06-07 14:55:24 -请求地址 : http://localhost:8088/main
2021-06-07 14:55:24 -HTTP METHOD : GET
2021-06-07 14:55:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:55:24 -参数 : []
2021-06-07 14:55:24 -耗时 : 1
2021-06-07 14:55:24 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 14:55:24 -HTTP METHOD : GET
2021-06-07 14:55:24 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 14:55:24 -参数 : []
2021-06-07 14:55:24 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 14:55:24 -请求地址 : http://localhost:8088/main
2021-06-07 14:55:24 -HTTP METHOD : GET
2021-06-07 14:55:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 14:55:24 -参数 : []
2021-06-07 14:55:24 -耗时 : 0
2021-06-07 14:55:26 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 14:55:26 -HTTP METHOD : GET
2021-06-07 14:55:26 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 14:55:26 -参数 : []
2021-06-07 14:55:26 -耗时 : 0
2021-06-07 14:55:26 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 14:55:26 -HTTP METHOD : GET
2021-06-07 14:55:26 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 14:55:26 -参数 : [{limit=10, offset=0}]
2021-06-07 14:55:26 -耗时 : 3
2021-06-07 15:13:17 -请求地址 : http://localhost:8088/index
2021-06-07 15:13:17 -HTTP METHOD : GET
2021-06-07 15:13:17 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:13:17 -参数 : [{}]
2021-06-07 15:13:17 -耗时 : 45
2021-06-07 15:13:17 -请求地址 : http://localhost:8088/main
2021-06-07 15:13:17 -HTTP METHOD : GET
2021-06-07 15:13:17 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:13:17 -参数 : []
2021-06-07 15:13:17 -耗时 : 0
2021-06-07 15:13:17 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:13:17 -HTTP METHOD : GET
2021-06-07 15:13:17 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:13:17 -参数 : []
2021-06-07 15:13:17 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:13:17 -请求地址 : http://localhost:8088/main
2021-06-07 15:13:17 -HTTP METHOD : GET
2021-06-07 15:13:17 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:13:17 -参数 : []
2021-06-07 15:13:17 -耗时 : 0
2021-06-07 15:13:19 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:13:19 -HTTP METHOD : GET
2021-06-07 15:13:19 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:13:19 -参数 : []
2021-06-07 15:13:19 -耗时 : 0
2021-06-07 15:13:19 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:13:19 -HTTP METHOD : GET
2021-06-07 15:13:19 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:13:19 -参数 : [{limit=10, offset=0}]
2021-06-07 15:13:19 -耗时 : 3
2021-06-07 15:13:38 -请求地址 : http://localhost:8088/manufacturer/manufacturer/add
2021-06-07 15:13:38 -HTTP METHOD : GET
2021-06-07 15:13:38 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.add
2021-06-07 15:13:38 -参数 : []
2021-06-07 15:13:38 -耗时 : 1
2021-06-07 15:14:35 -请求地址 : http://localhost:8088/manufacturer/manufacturer/add
2021-06-07 15:14:35 -HTTP METHOD : GET
2021-06-07 15:14:35 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.add
2021-06-07 15:14:35 -参数 : []
2021-06-07 15:14:35 -耗时 : 0
2021-06-07 15:16:48 -请求地址 : http://localhost:8088/manufacturer/manufacturer/save
2021-06-07 15:16:48 -HTTP METHOD : POST
2021-06-07 15:16:48 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.save
2021-06-07 15:16:48 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@2145a7af]
2021-06-07 15:16:48 -耗时 : 31
2021-06-07 15:16:48 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:16:48 -HTTP METHOD : GET
2021-06-07 15:16:48 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:16:48 -参数 : [{limit=10, offset=0}]
2021-06-07 15:16:48 -耗时 : 2
2021-06-07 15:17:07 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 15:17:07 -HTTP METHOD : GET
2021-06-07 15:17:07 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 15:17:07 -参数 : [{}]
2021-06-07 15:17:07 -耗时 : 0
2021-06-07 15:17:07 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:17:07 -HTTP METHOD : GET
2021-06-07 15:17:07 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:17:07 -参数 : [{sort=order_num}]
2021-06-07 15:17:07 -耗时 : 4
2021-06-07 15:17:11 -请求地址 : http://localhost:8088/sys/menu/add/280
2021-06-07 15:17:11 -HTTP METHOD : GET
2021-06-07 15:17:11 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 15:17:11 -参数 : [{}, 280]
2021-06-07 15:17:11 -耗时 : 3
2021-06-07 15:17:44 -请求地址 : http://localhost:8088/sys/menu/edit/282
2021-06-07 15:17:44 -HTTP METHOD : GET
2021-06-07 15:17:44 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 15:17:44 -参数 : [{}, 282]
2021-06-07 15:17:44 -耗时 : 6
2021-06-07 15:17:53 -请求地址 : http://localhost:8088/sys/menu/add/282
2021-06-07 15:17:53 -HTTP METHOD : GET
2021-06-07 15:17:53 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 15:17:53 -参数 : [{}, 282]
2021-06-07 15:17:53 -耗时 : 2
2021-06-07 15:17:56 -请求地址 : http://localhost:8088/sys/menu/add/280
2021-06-07 15:17:56 -HTTP METHOD : GET
2021-06-07 15:17:56 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 15:17:56 -参数 : [{}, 280]
2021-06-07 15:17:56 -耗时 : 2
2021-06-07 15:18:11 -请求地址 : http://localhost:8088/sys/menu/save
2021-06-07 15:18:11 -HTTP METHOD : POST
2021-06-07 15:18:11 -CLASS_METHOD : com.shiguang.system.controller.MenuController.save
2021-06-07 15:18:11 -参数 : [MenuDO{menuId=null, parentId=280, name='修改', url='', perms='manufacturer:manufacturer:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 15:18:11 -耗时 : 55
2021-06-07 15:18:11 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:18:11 -HTTP METHOD : GET
2021-06-07 15:18:11 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:18:11 -参数 : [{sort=order_num}]
2021-06-07 15:18:11 -耗时 : 4
2021-06-07 15:18:13 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 15:18:13 -HTTP METHOD : GET
2021-06-07 15:18:13 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 15:18:13 -参数 : []
2021-06-07 15:18:13 -耗时 : 0
2021-06-07 15:18:13 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 15:18:13 -HTTP METHOD : GET
2021-06-07 15:18:13 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 15:18:13 -参数 : []
2021-06-07 15:18:13 -耗时 : 10
2021-06-07 15:18:15 -请求地址 : http://localhost:8088/sys/role/edit/2
2021-06-07 15:18:15 -HTTP METHOD : GET
2021-06-07 15:18:15 -CLASS_METHOD : com.shiguang.system.controller.RoleController.edit
2021-06-07 15:18:15 -参数 : [2, {}]
2021-06-07 15:18:15 -耗时 : 1
2021-06-07 15:18:15 -请求地址 : http://localhost:8088/sys/menu/tree/2
2021-06-07 15:18:15 -HTTP METHOD : GET
2021-06-07 15:18:15 -CLASS_METHOD : com.shiguang.system.controller.MenuController.tree
2021-06-07 15:18:15 -参数 : [2]
2021-06-07 15:18:15 -耗时 : 4
2021-06-07 15:18:18 -请求地址 : http://localhost:8088/sys/role/update
2021-06-07 15:18:18 -HTTP METHOD : POST
2021-06-07 15:18:18 -CLASS_METHOD : com.shiguang.system.controller.RoleController.update
2021-06-07 15:18:18 -参数 : [RoleDO{roleId=2, roleName='admin', roleSign='null', remark='超级管理权限', userIdCreate=null, gmtCreate=2019-03-19 16:28:02.0, gmtModified=null, menuIds=[282, 271, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 61, 22, 21, 20, 270, 113, 105, 104, 2, 3, -1, 283, 280, 279], status=null}]
2021-06-07 15:18:18 -耗时 : 145
2021-06-07 15:18:18 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 15:18:18 -HTTP METHOD : GET
2021-06-07 15:18:18 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 15:18:18 -参数 : []
2021-06-07 15:18:18 -耗时 : 2
2021-06-07 15:18:19 -请求地址 : http://localhost:8088/index
2021-06-07 15:18:19 -HTTP METHOD : GET
2021-06-07 15:18:19 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:18:19 -参数 : [{}]
2021-06-07 15:18:19 -耗时 : 4
2021-06-07 15:18:19 -请求地址 : http://localhost:8088/main
2021-06-07 15:18:19 -HTTP METHOD : GET
2021-06-07 15:18:19 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:18:19 -参数 : []
2021-06-07 15:18:19 -耗时 : 1
2021-06-07 15:18:19 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:18:19 -HTTP METHOD : GET
2021-06-07 15:18:19 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:18:19 -参数 : []
2021-06-07 15:18:19 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:18:19 -请求地址 : http://localhost:8088/main
2021-06-07 15:18:19 -HTTP METHOD : GET
2021-06-07 15:18:19 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:18:19 -参数 : []
2021-06-07 15:18:19 -耗时 : 0
2021-06-07 15:18:21 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:18:21 -HTTP METHOD : GET
2021-06-07 15:18:21 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:18:21 -参数 : []
2021-06-07 15:18:21 -耗时 : 0
2021-06-07 15:18:21 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:18:21 -HTTP METHOD : GET
2021-06-07 15:18:21 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:18:21 -参数 : [{limit=10, offset=0}]
2021-06-07 15:18:21 -耗时 : 2
2021-06-07 15:18:23 -请求地址 : http://localhost:8088/index
2021-06-07 15:18:23 -HTTP METHOD : GET
2021-06-07 15:18:23 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:18:23 -参数 : [{}]
2021-06-07 15:18:23 -耗时 : 5
2021-06-07 15:18:23 -请求地址 : http://localhost:8088/main
2021-06-07 15:18:23 -HTTP METHOD : GET
2021-06-07 15:18:23 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:18:23 -参数 : []
2021-06-07 15:18:23 -耗时 : 1
2021-06-07 15:18:23 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:18:23 -HTTP METHOD : GET
2021-06-07 15:18:23 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:18:23 -参数 : []
2021-06-07 15:18:23 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:18:23 -请求地址 : http://localhost:8088/main
2021-06-07 15:18:23 -HTTP METHOD : GET
2021-06-07 15:18:23 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:18:23 -参数 : []
2021-06-07 15:18:23 -耗时 : 4
2021-06-07 15:18:26 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:18:26 -HTTP METHOD : GET
2021-06-07 15:18:26 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:18:26 -参数 : []
2021-06-07 15:18:26 -耗时 : 0
2021-06-07 15:18:26 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:18:26 -HTTP METHOD : GET
2021-06-07 15:18:26 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:18:26 -参数 : [{limit=10, offset=0}]
2021-06-07 15:18:26 -耗时 : 1
2021-06-07 15:18:44 -请求地址 : http://localhost:8088/
2021-06-07 15:18:44 -HTTP METHOD : GET
2021-06-07 15:18:44 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 15:18:44 -参数 : [{}]
2021-06-07 15:18:44 -耗时 : 1
2021-06-07 15:18:44 -请求地址 : http://localhost:8088/login
2021-06-07 15:18:44 -HTTP METHOD : GET
2021-06-07 15:18:44 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:18:44 -参数 : []
2021-06-07 15:18:44 -耗时 : 0
2021-06-07 15:18:47 -请求地址 : http://localhost:8088/login
2021-06-07 15:18:47 -HTTP METHOD : POST
2021-06-07 15:18:47 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:18:47 -参数 : [admin, Dm202007sc]
2021-06-07 15:18:47 -耗时 : 22
2021-06-07 15:18:47 -请求地址 : http://localhost:8088/index
2021-06-07 15:18:47 -HTTP METHOD : GET
2021-06-07 15:18:47 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:18:47 -参数 : [{}]
2021-06-07 15:18:47 -耗时 : 7
2021-06-07 15:18:47 -请求地址 : http://localhost:8088/main
2021-06-07 15:18:47 -HTTP METHOD : GET
2021-06-07 15:18:47 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:18:47 -参数 : []
2021-06-07 15:18:47 -耗时 : 0
2021-06-07 15:18:47 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:18:47 -HTTP METHOD : GET
2021-06-07 15:18:47 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:18:47 -参数 : []
2021-06-07 15:18:47 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:18:47 -请求地址 : http://localhost:8088/main
2021-06-07 15:18:47 -HTTP METHOD : GET
2021-06-07 15:18:47 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:18:47 -参数 : []
2021-06-07 15:18:47 -耗时 : 37
2021-06-07 15:18:49 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:18:49 -HTTP METHOD : GET
2021-06-07 15:18:49 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:18:49 -参数 : []
2021-06-07 15:18:49 -耗时 : 0
2021-06-07 15:18:49 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:18:49 -HTTP METHOD : GET
2021-06-07 15:18:49 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:18:49 -参数 : [{limit=10, offset=0}]
2021-06-07 15:18:49 -耗时 : 1
2021-06-07 15:18:51 -请求地址 : http://localhost:8088/manufacturer/manufacturer/edit/2
2021-06-07 15:18:51 -HTTP METHOD : GET
2021-06-07 15:18:51 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.edit
2021-06-07 15:18:51 -参数 : [2, {}]
2021-06-07 15:18:51 -耗时 : 1
2021-06-07 15:18:55 -请求地址 : http://localhost:8088/manufacturer/manufacturer/update
2021-06-07 15:18:55 -HTTP METHOD : POST
2021-06-07 15:18:55 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.update
2021-06-07 15:18:55 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@350a27e]
2021-06-07 15:18:55 -耗时 : 36
2021-06-07 15:18:55 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:18:55 -HTTP METHOD : GET
2021-06-07 15:18:55 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:18:55 -参数 : [{limit=10, offset=0}]
2021-06-07 15:18:55 -耗时 : 3
2021-06-07 15:18:57 -请求地址 : http://localhost:8088/manufacturer/manufacturer/edit/2
2021-06-07 15:18:57 -HTTP METHOD : GET
2021-06-07 15:18:57 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.edit
2021-06-07 15:18:57 -参数 : [2, {}]
2021-06-07 15:18:57 -耗时 : 1
2021-06-07 15:19:01 -请求地址 : http://localhost:8088/manufacturer/manufacturer/update
2021-06-07 15:19:01 -HTTP METHOD : POST
2021-06-07 15:19:01 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.update
2021-06-07 15:19:01 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@7df441d3]
2021-06-07 15:19:01 -耗时 : 41
2021-06-07 15:19:01 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:19:01 -HTTP METHOD : GET
2021-06-07 15:19:01 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:19:01 -参数 : [{limit=10, offset=0}]
2021-06-07 15:19:01 -耗时 : 2
2021-06-07 15:19:32 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 15:19:32 -HTTP METHOD : GET
2021-06-07 15:19:32 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 15:19:32 -参数 : [{}]
2021-06-07 15:19:32 -耗时 : 0
2021-06-07 15:19:32 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:19:32 -HTTP METHOD : GET
2021-06-07 15:19:32 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:19:32 -参数 : [{sort=order_num}]
2021-06-07 15:19:32 -耗时 : 3
2021-06-07 15:19:56 -请求地址 : http://localhost:8088/sys/menu/add/280
2021-06-07 15:19:56 -HTTP METHOD : GET
2021-06-07 15:19:56 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 15:19:56 -参数 : [{}, 280]
2021-06-07 15:19:56 -耗时 : 2
2021-06-07 15:20:22 -请求地址 : http://localhost:8088/sys/menu/save
2021-06-07 15:20:22 -HTTP METHOD : POST
2021-06-07 15:20:22 -CLASS_METHOD : com.shiguang.system.controller.MenuController.save
2021-06-07 15:20:22 -参数 : [MenuDO{menuId=null, parentId=280, name='删除', url='', perms='manufacturer:manufacturer:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 15:20:22 -耗时 : 36
2021-06-07 15:20:22 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:20:22 -HTTP METHOD : GET
2021-06-07 15:20:22 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:20:22 -参数 : [{sort=order_num}]
2021-06-07 15:20:22 -耗时 : 5
2021-06-07 15:20:31 -请求地址 : http://localhost:8088/sys/menu/add/280
2021-06-07 15:20:31 -HTTP METHOD : GET
2021-06-07 15:20:31 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 15:20:31 -参数 : [{}, 280]
2021-06-07 15:20:31 -耗时 : 2
2021-06-07 15:20:44 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 439]
2021-06-07 15:20:54 -请求地址 : http://localhost:8088/sys/menu/save
2021-06-07 15:20:54 -HTTP METHOD : POST
2021-06-07 15:20:54 -CLASS_METHOD : com.shiguang.system.controller.MenuController.save
2021-06-07 15:20:54 -参数 : [MenuDO{menuId=null, parentId=280, name='批量删除', url='', perms='manufacturer:manufacturer:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 15:20:54 -耗时 : 59
2021-06-07 15:20:54 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:20:54 -HTTP METHOD : GET
2021-06-07 15:20:54 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:20:54 -参数 : [{sort=order_num}]
2021-06-07 15:20:54 -耗时 : 3
2021-06-07 15:21:02 -请求地址 : http://localhost:8088/sys/menu/edit/280
2021-06-07 15:21:02 -HTTP METHOD : GET
2021-06-07 15:21:02 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 15:21:02 -参数 : [{}, 280]
2021-06-07 15:21:02 -耗时 : 5
2021-06-07 15:21:06 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 15:21:06 -HTTP METHOD : POST
2021-06-07 15:21:06 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 15:21:06 -参数 : [MenuDO{menuId=280, parentId=279, name='制造商维护', url='/manufacturer/manufacturer', perms='manufacturer:manufacturer:manufacturer', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 15:21:06 -耗时 : 36
2021-06-07 15:21:06 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:21:06 -HTTP METHOD : GET
2021-06-07 15:21:06 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:21:06 -参数 : [{sort=order_num}]
2021-06-07 15:21:06 -耗时 : 2
2021-06-07 15:21:20 -请求地址 : http://localhost:8088/sys/menu/edit/270
2021-06-07 15:21:20 -HTTP METHOD : GET
2021-06-07 15:21:20 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 15:21:20 -参数 : [{}, 270]
2021-06-07 15:21:20 -耗时 : 2
2021-06-07 15:21:22 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 15:21:22 -HTTP METHOD : POST
2021-06-07 15:21:22 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 15:21:22 -参数 : [MenuDO{menuId=270, parentId=0, name='账号管理', url='', perms='', type=0, icon='fa fa-address-card-o', orderNum=6, gmtCreate=null, gmtModified=null}]
2021-06-07 15:21:22 -耗时 : 22
2021-06-07 15:21:22 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:21:22 -HTTP METHOD : GET
2021-06-07 15:21:22 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:21:22 -参数 : [{sort=order_num}]
2021-06-07 15:21:22 -耗时 : 3
2021-06-07 15:21:25 -请求地址 : http://localhost:8088/index
2021-06-07 15:21:25 -HTTP METHOD : GET
2021-06-07 15:21:25 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:21:25 -参数 : [{}]
2021-06-07 15:21:25 -耗时 : 4
2021-06-07 15:21:25 -请求地址 : http://localhost:8088/main
2021-06-07 15:21:25 -HTTP METHOD : GET
2021-06-07 15:21:25 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:21:25 -参数 : []
2021-06-07 15:21:25 -耗时 : 1
2021-06-07 15:21:25 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:21:25 -HTTP METHOD : GET
2021-06-07 15:21:25 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:21:25 -参数 : []
2021-06-07 15:21:25 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:21:25 -请求地址 : http://localhost:8088/main
2021-06-07 15:21:25 -HTTP METHOD : GET
2021-06-07 15:21:25 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:21:25 -参数 : []
2021-06-07 15:21:25 -耗时 : 5
2021-06-07 15:21:27 -请求地址 : http://localhost:8088/sys/user/sysedit
2021-06-07 15:21:27 -HTTP METHOD : GET
2021-06-07 15:21:27 -CLASS_METHOD : com.shiguang.system.controller.UserController.sysedit
2021-06-07 15:21:27 -参数 : [{}]
2021-06-07 15:21:27 -耗时 : 4
2021-06-07 15:21:30 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 15:21:30 -HTTP METHOD : GET
2021-06-07 15:21:30 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 15:21:30 -参数 : [{}]
2021-06-07 15:21:30 -耗时 : 0
2021-06-07 15:21:30 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:21:30 -HTTP METHOD : GET
2021-06-07 15:21:30 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:21:30 -参数 : [{sort=order_num}]
2021-06-07 15:21:30 -耗时 : 3
2021-06-07 15:21:33 -请求地址 : http://localhost:8088/sys/menu/edit/270
2021-06-07 15:21:33 -HTTP METHOD : GET
2021-06-07 15:21:33 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 15:21:33 -参数 : [{}, 270]
2021-06-07 15:21:33 -耗时 : 2
2021-06-07 15:21:39 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 15:21:39 -HTTP METHOD : POST
2021-06-07 15:21:39 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 15:21:39 -参数 : [MenuDO{menuId=270, parentId=0, name='账号管理', url='', perms='', type=0, icon='fa fa-address-card', orderNum=6, gmtCreate=null, gmtModified=null}]
2021-06-07 15:21:39 -耗时 : 32
2021-06-07 15:21:39 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:21:39 -HTTP METHOD : GET
2021-06-07 15:21:39 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:21:39 -参数 : [{sort=order_num}]
2021-06-07 15:21:39 -耗时 : 2
2021-06-07 15:21:43 -请求地址 : http://localhost:8088/index
2021-06-07 15:21:43 -HTTP METHOD : GET
2021-06-07 15:21:43 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:21:43 -参数 : [{}]
2021-06-07 15:21:43 -耗时 : 3
2021-06-07 15:21:43 -请求地址 : http://localhost:8088/main
2021-06-07 15:21:43 -HTTP METHOD : GET
2021-06-07 15:21:43 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:21:43 -参数 : []
2021-06-07 15:21:43 -耗时 : 0
2021-06-07 15:21:43 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:21:43 -HTTP METHOD : GET
2021-06-07 15:21:43 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:21:43 -参数 : []
2021-06-07 15:21:43 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:21:43 -请求地址 : http://localhost:8088/main
2021-06-07 15:21:43 -HTTP METHOD : GET
2021-06-07 15:21:43 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:21:43 -参数 : []
2021-06-07 15:21:43 -耗时 : 0
2021-06-07 15:21:47 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 15:21:47 -HTTP METHOD : GET
2021-06-07 15:21:47 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 15:21:47 -参数 : [{}]
2021-06-07 15:21:47 -耗时 : 1
2021-06-07 15:21:47 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:21:47 -HTTP METHOD : GET
2021-06-07 15:21:47 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:21:47 -参数 : [{sort=order_num}]
2021-06-07 15:21:47 -耗时 : 3
2021-06-07 15:21:49 -请求地址 : http://localhost:8088/sys/menu/edit/270
2021-06-07 15:21:49 -HTTP METHOD : GET
2021-06-07 15:21:49 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 15:21:49 -参数 : [{}, 270]
2021-06-07 15:21:49 -耗时 : 2
2021-06-07 15:21:52 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 15:21:52 -HTTP METHOD : POST
2021-06-07 15:21:52 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 15:21:52 -参数 : [MenuDO{menuId=270, parentId=0, name='账号管理', url='', perms='', type=0, icon='fa fa-address-card-o', orderNum=6, gmtCreate=null, gmtModified=null}]
2021-06-07 15:21:52 -耗时 : 33
2021-06-07 15:21:52 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:21:52 -HTTP METHOD : GET
2021-06-07 15:21:52 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:21:52 -参数 : [{sort=order_num}]
2021-06-07 15:21:52 -耗时 : 3
2021-06-07 15:21:54 -请求地址 : http://localhost:8088/index
2021-06-07 15:21:54 -HTTP METHOD : GET
2021-06-07 15:21:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:21:54 -参数 : [{}]
2021-06-07 15:21:54 -耗时 : 4
2021-06-07 15:21:54 -请求地址 : http://localhost:8088/main
2021-06-07 15:21:54 -HTTP METHOD : GET
2021-06-07 15:21:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:21:54 -参数 : []
2021-06-07 15:21:54 -耗时 : 0
2021-06-07 15:21:54 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:21:54 -HTTP METHOD : GET
2021-06-07 15:21:54 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:21:54 -参数 : []
2021-06-07 15:21:54 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:21:54 -请求地址 : http://localhost:8088/main
2021-06-07 15:21:54 -HTTP METHOD : GET
2021-06-07 15:21:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:21:54 -参数 : []
2021-06-07 15:21:54 -耗时 : 0
2021-06-07 15:21:58 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:21:58 -HTTP METHOD : GET
2021-06-07 15:21:58 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:21:58 -参数 : []
2021-06-07 15:21:58 -耗时 : 0
2021-06-07 15:21:58 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:21:58 -HTTP METHOD : GET
2021-06-07 15:21:58 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:21:58 -参数 : [{limit=10, offset=0}]
2021-06-07 15:21:58 -耗时 : 2
2021-06-07 15:22:00 -请求地址 : http://localhost:8088/index
2021-06-07 15:22:00 -HTTP METHOD : GET
2021-06-07 15:22:00 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:22:00 -参数 : [{}]
2021-06-07 15:22:00 -耗时 : 4
2021-06-07 15:22:00 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:00 -HTTP METHOD : GET
2021-06-07 15:22:00 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:00 -参数 : []
2021-06-07 15:22:00 -耗时 : 0
2021-06-07 15:22:00 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:22:00 -HTTP METHOD : GET
2021-06-07 15:22:00 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:22:00 -参数 : []
2021-06-07 15:22:00 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:22:00 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:00 -HTTP METHOD : GET
2021-06-07 15:22:00 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:00 -参数 : []
2021-06-07 15:22:00 -耗时 : 0
2021-06-07 15:22:01 -请求地址 : http://localhost:8088/index
2021-06-07 15:22:01 -HTTP METHOD : GET
2021-06-07 15:22:01 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:22:01 -参数 : [{}]
2021-06-07 15:22:01 -耗时 : 4
2021-06-07 15:22:01 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:01 -HTTP METHOD : GET
2021-06-07 15:22:01 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:01 -参数 : []
2021-06-07 15:22:01 -耗时 : 0
2021-06-07 15:22:01 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:22:01 -HTTP METHOD : GET
2021-06-07 15:22:01 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:22:01 -参数 : []
2021-06-07 15:22:01 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:22:01 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:01 -HTTP METHOD : GET
2021-06-07 15:22:01 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:01 -参数 : []
2021-06-07 15:22:01 -耗时 : 0
2021-06-07 15:22:02 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:22:02 -HTTP METHOD : GET
2021-06-07 15:22:02 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:22:02 -参数 : []
2021-06-07 15:22:02 -耗时 : 0
2021-06-07 15:22:02 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:22:02 -HTTP METHOD : GET
2021-06-07 15:22:02 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:22:02 -参数 : [{limit=10, offset=0}]
2021-06-07 15:22:02 -耗时 : 2
2021-06-07 15:22:13 -请求地址 : http://localhost:8088/
2021-06-07 15:22:13 -HTTP METHOD : GET
2021-06-07 15:22:13 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 15:22:13 -参数 : [{}]
2021-06-07 15:22:13 -耗时 : 0
2021-06-07 15:22:13 -请求地址 : http://localhost:8088/login
2021-06-07 15:22:13 -HTTP METHOD : GET
2021-06-07 15:22:13 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:22:13 -参数 : []
2021-06-07 15:22:13 -耗时 : 0
2021-06-07 15:22:14 -请求地址 : http://localhost:8088/login
2021-06-07 15:22:14 -HTTP METHOD : POST
2021-06-07 15:22:14 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:22:14 -参数 : [admin, Dm202007sc]
2021-06-07 15:22:14 -耗时 : 2
2021-06-07 15:22:14 -请求地址 : http://localhost:8088/index
2021-06-07 15:22:14 -HTTP METHOD : GET
2021-06-07 15:22:14 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:22:14 -参数 : [{}]
2021-06-07 15:22:14 -耗时 : 3
2021-06-07 15:22:14 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:14 -HTTP METHOD : GET
2021-06-07 15:22:14 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:14 -参数 : []
2021-06-07 15:22:14 -耗时 : 0
2021-06-07 15:22:14 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:22:14 -HTTP METHOD : GET
2021-06-07 15:22:14 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:22:14 -参数 : []
2021-06-07 15:22:14 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:22:14 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:14 -HTTP METHOD : GET
2021-06-07 15:22:14 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:14 -参数 : []
2021-06-07 15:22:14 -耗时 : 0
2021-06-07 15:22:16 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:22:16 -HTTP METHOD : GET
2021-06-07 15:22:16 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:22:16 -参数 : []
2021-06-07 15:22:16 -耗时 : 1
2021-06-07 15:22:16 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:22:16 -HTTP METHOD : GET
2021-06-07 15:22:16 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:22:16 -参数 : [{limit=10, offset=0}]
2021-06-07 15:22:16 -耗时 : 2
2021-06-07 15:22:22 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 15:22:22 -HTTP METHOD : GET
2021-06-07 15:22:22 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 15:22:22 -参数 : []
2021-06-07 15:22:22 -耗时 : 0
2021-06-07 15:22:22 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 15:22:22 -HTTP METHOD : GET
2021-06-07 15:22:22 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 15:22:22 -参数 : []
2021-06-07 15:22:22 -耗时 : 1
2021-06-07 15:22:24 -请求地址 : http://localhost:8088/sys/role/edit/2
2021-06-07 15:22:24 -HTTP METHOD : GET
2021-06-07 15:22:24 -CLASS_METHOD : com.shiguang.system.controller.RoleController.edit
2021-06-07 15:22:24 -参数 : [2, {}]
2021-06-07 15:22:24 -耗时 : 1
2021-06-07 15:22:24 -请求地址 : http://localhost:8088/sys/menu/tree/2
2021-06-07 15:22:24 -HTTP METHOD : GET
2021-06-07 15:22:24 -CLASS_METHOD : com.shiguang.system.controller.MenuController.tree
2021-06-07 15:22:24 -参数 : [2]
2021-06-07 15:22:24 -耗时 : 4
2021-06-07 15:22:28 -请求地址 : http://localhost:8088/sys/role/update
2021-06-07 15:22:28 -HTTP METHOD : POST
2021-06-07 15:22:28 -CLASS_METHOD : com.shiguang.system.controller.RoleController.update
2021-06-07 15:22:28 -参数 : [RoleDO{roleId=2, roleName='admin', roleSign='null', remark='超级管理权限', userIdCreate=null, gmtCreate=2019-03-19 16:28:02.0, gmtModified=null, menuIds=[-1, 285, 284, 283, 282, 280, 271, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 113, 105, 61, 22, 21, 20, 2, 279, 270, 104, 3], status=null}]
2021-06-07 15:22:28 -耗时 : 116
2021-06-07 15:22:29 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 15:22:29 -HTTP METHOD : GET
2021-06-07 15:22:29 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 15:22:29 -参数 : []
2021-06-07 15:22:29 -耗时 : 2
2021-06-07 15:22:31 -请求地址 : http://localhost:8088/
2021-06-07 15:22:31 -HTTP METHOD : GET
2021-06-07 15:22:31 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 15:22:31 -参数 : [{}]
2021-06-07 15:22:31 -耗时 : 1
2021-06-07 15:22:31 -请求地址 : http://localhost:8088/login
2021-06-07 15:22:31 -HTTP METHOD : GET
2021-06-07 15:22:31 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:22:31 -参数 : []
2021-06-07 15:22:31 -耗时 : 1
2021-06-07 15:22:32 -请求地址 : http://localhost:8088/login
2021-06-07 15:22:32 -HTTP METHOD : POST
2021-06-07 15:22:32 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:22:32 -参数 : [admin, Dm202007sc]
2021-06-07 15:22:32 -耗时 : 1
2021-06-07 15:22:32 -请求地址 : http://localhost:8088/index
2021-06-07 15:22:32 -HTTP METHOD : GET
2021-06-07 15:22:32 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:22:32 -参数 : [{}]
2021-06-07 15:22:32 -耗时 : 3
2021-06-07 15:22:32 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:32 -HTTP METHOD : GET
2021-06-07 15:22:32 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:32 -参数 : []
2021-06-07 15:22:32 -耗时 : 0
2021-06-07 15:22:32 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:22:32 -HTTP METHOD : GET
2021-06-07 15:22:32 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:22:32 -参数 : []
2021-06-07 15:22:32 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:22:32 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:32 -HTTP METHOD : GET
2021-06-07 15:22:32 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:32 -参数 : []
2021-06-07 15:22:32 -耗时 : 0
2021-06-07 15:22:33 -An error occurred in processing while on a non-container thread. The connection will be closed immediately
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:96)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:350)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:318)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.sendHeartbeat(AbstractSockJsSession.java:251)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession$HeartbeatTask.run(AbstractSockJsSession.java:455)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:22:34 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:22:34 -HTTP METHOD : GET
2021-06-07 15:22:34 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:22:34 -参数 : []
2021-06-07 15:22:34 -耗时 : 0
2021-06-07 15:22:34 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:22:34 -HTTP METHOD : GET
2021-06-07 15:22:34 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:22:34 -参数 : [{limit=10, offset=0}]
2021-06-07 15:22:34 -耗时 : 2
2021-06-07 15:22:56 -请求地址 : http://localhost:8088/index
2021-06-07 15:22:56 -HTTP METHOD : GET
2021-06-07 15:22:56 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:22:56 -参数 : [{}]
2021-06-07 15:22:56 -耗时 : 3
2021-06-07 15:22:56 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:56 -HTTP METHOD : GET
2021-06-07 15:22:56 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:56 -参数 : []
2021-06-07 15:22:56 -耗时 : 0
2021-06-07 15:22:56 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:22:56 -HTTP METHOD : GET
2021-06-07 15:22:56 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:22:56 -参数 : []
2021-06-07 15:22:56 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.GeneratedMethodAccessor183.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.GeneratedMethodAccessor157.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:22:56 -请求地址 : http://localhost:8088/main
2021-06-07 15:22:56 -HTTP METHOD : GET
2021-06-07 15:22:56 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:22:56 -参数 : []
2021-06-07 15:22:56 -耗时 : 0
2021-06-07 15:22:59 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:22:59 -HTTP METHOD : GET
2021-06-07 15:22:59 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:22:59 -参数 : []
2021-06-07 15:22:59 -耗时 : 0
2021-06-07 15:22:59 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:22:59 -HTTP METHOD : GET
2021-06-07 15:22:59 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:22:59 -参数 : [{limit=10, offset=0}]
2021-06-07 15:22:59 -耗时 : 1
2021-06-07 15:23:23 -An error occurred in processing while on a non-container thread. The connection will be closed immediately
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:96)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:350)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:318)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.sendHeartbeat(AbstractSockJsSession.java:251)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession$HeartbeatTask.run(AbstractSockJsSession.java:455)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:23:23 -java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 75 common frames omitted
2021-06-07 15:23:23 -Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:23:23 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:422)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 59 common frames omitted
2021-06-07 15:23:23 -java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:174)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 77 common frames omitted
2021-06-07 15:23:23 -Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:23:23 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:982)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:590)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:524)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:230)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:225)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: getOutputStream() has already been called for this response
	at org.apache.catalina.connector.Response.getWriter(Response.java:625)
	at org.apache.catalina.connector.ResponseFacade.getWriter(ResponseFacade.java:211)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at javax.servlet.ServletResponseWrapper.getWriter(ServletResponseWrapper.java:109)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	... 61 common frames omitted
2021-06-07 15:23:50 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:50 -HTTP METHOD : GET
2021-06-07 15:23:50 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:50 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:50 -耗时 : 2
2021-06-07 15:23:51 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:51 -HTTP METHOD : GET
2021-06-07 15:23:51 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:51 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:51 -耗时 : 1
2021-06-07 15:23:51 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:51 -HTTP METHOD : GET
2021-06-07 15:23:51 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:51 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:51 -耗时 : 1
2021-06-07 15:23:51 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:51 -HTTP METHOD : GET
2021-06-07 15:23:51 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:51 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:51 -耗时 : 1
2021-06-07 15:23:52 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:52 -HTTP METHOD : GET
2021-06-07 15:23:52 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:52 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:52 -耗时 : 2
2021-06-07 15:23:53 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:53 -HTTP METHOD : GET
2021-06-07 15:23:53 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:53 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:53 -耗时 : 2
2021-06-07 15:23:58 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:58 -HTTP METHOD : GET
2021-06-07 15:23:58 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:58 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:58 -耗时 : 1
2021-06-07 15:23:59 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:59 -HTTP METHOD : GET
2021-06-07 15:23:59 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:59 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:59 -耗时 : 2
2021-06-07 15:23:59 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:59 -HTTP METHOD : GET
2021-06-07 15:23:59 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:59 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:59 -耗时 : 2
2021-06-07 15:23:59 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:23:59 -HTTP METHOD : GET
2021-06-07 15:23:59 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:23:59 -参数 : [{limit=10, offset=0}]
2021-06-07 15:23:59 -耗时 : 2
2021-06-07 15:24:00 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:24:00 -HTTP METHOD : GET
2021-06-07 15:24:00 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:24:00 -参数 : [{limit=10, offset=0}]
2021-06-07 15:24:00 -耗时 : 2
2021-06-07 15:24:00 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:24:00 -HTTP METHOD : GET
2021-06-07 15:24:00 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:24:00 -参数 : [{limit=10, offset=0}]
2021-06-07 15:24:00 -耗时 : 1
2021-06-07 15:25:28 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 10728 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 15:25:28 -The following profiles are active: dev
2021-06-07 15:25:28 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 15:25:28 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:25:28 CST 2021]; root of context hierarchy
2021-06-07 15:25:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 15:25:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e681df8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:25:29 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3ef2e8fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:25:29 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:25:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:25:29 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 15:25:29 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 15:25:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:25:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:25:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:25:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:25:30 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 15:25:30 -Starting service [Tomcat]
2021-06-07 15:25:30 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 15:25:30 -Initializing Spring embedded WebApplicationContext
2021-06-07 15:25:30 -Root WebApplicationContext: initialization completed in 1980 ms
2021-06-07 15:25:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 15:25:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 15:25:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 15:25:30 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 15:25:30 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 15:25:30 -Filter xssFilter was not registered (disabled)
2021-06-07 15:25:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 15:25:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 15:25:30 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 15:25:30 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 15:25:30 -{dataSource-1} inited
2021-06-07 15:25:31 -Using default implementation for ThreadExecutor
2021-06-07 15:25:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 15:25:31 -Quartz Scheduler v.2.2.1 created.
2021-06-07 15:25:31 -RAMJobStore initialized.
2021-06-07 15:25:31 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 15:25:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 15:25:31 -Quartz scheduler version: 2.2.1
2021-06-07 15:25:31 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@6314df3c
2021-06-07 15:25:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 15:25:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 15:25:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 15:25:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 15:25:32 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 15:25:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 15:25:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 15:25:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 15:25:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 15:25:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 15:25:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 15:25:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 15:25:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 15:25:32 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 15:25:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 15:25:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 15:25:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 15:25:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:25:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 15:25:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:25:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 15:25:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 15:25:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 15:25:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 15:25:32 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 15:25:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 15:25:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 15:25:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 15:25:32 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:25:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:25:32 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 15:25:32 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 15:25:32 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 15:25:32 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 15:25:32 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:25:32 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:25:32 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 15:25:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 15:25:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 15:25:32 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:25:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:25:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 15:25:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 15:25:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 15:25:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 15:25:32 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 15:25:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 15:25:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 15:25:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 15:25:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 15:25:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 15:25:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 15:25:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 15:25:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 15:25:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 15:25:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 15:25:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 15:25:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 15:25:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 15:25:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 15:25:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 15:25:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 15:25:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 15:25:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 15:25:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 15:25:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 15:25:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 15:25:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 15:25:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 15:25:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 15:25:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 15:25:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 15:25:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 15:25:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:25:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:25:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:25:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 15:25:32 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 15:25:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 15:25:32 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 15:25:32 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 15:25:32 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 15:25:32 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 15:25:32 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:25:32 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 15:25:32 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 15:25:32 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:25:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:25:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 15:25:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 15:25:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 15:25:32 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 15:25:32 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 15:25:32 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 15:25:32 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:25:28 CST 2021]; root of context hierarchy
2021-06-07 15:25:32 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:25:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:25:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:25:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 15:25:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:25:33 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 15:25:33 -

Using default security password: 106e0c0b-53d0-4988-a76a-66b72ddd6143

2021-06-07 15:25:33 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 15:25:33 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3265995e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33f2eb04, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e4b5da1, org.springframework.security.web.header.HeaderWriterFilter@7d5a0b14, org.springframework.security.web.csrf.CsrfFilter@7a274521, org.springframework.security.web.authentication.logout.LogoutFilter@52d59507, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54bc3bcf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39ead1b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4df13dd0, org.springframework.security.web.session.SessionManagementFilter@24d7657b, org.springframework.security.web.access.ExceptionTranslationFilter@19e2db7c]
2021-06-07 15:25:33 -Registering beans for JMX exposure on startup
2021-06-07 15:25:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 15:25:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 15:25:33 -Starting beans in phase 2147483647
2021-06-07 15:25:33 -Context refreshed
2021-06-07 15:25:33 -Found 1 custom documentation plugin(s)
2021-06-07 15:25:33 -Scanning for api listing references
2021-06-07 15:25:33 -Generating unique operation named: removeUsingPOST_1
2021-06-07 15:25:33 -Generating unique operation named: addUsingGET_1
2021-06-07 15:25:33 -Generating unique operation named: editUsingGET_1
2021-06-07 15:25:33 -Generating unique operation named: listUsingGET_1
2021-06-07 15:25:33 -Generating unique operation named: removeUsingPOST_2
2021-06-07 15:25:33 -Generating unique operation named: removeUsingPOST_3
2021-06-07 15:25:33 -Generating unique operation named: saveUsingPOST_1
2021-06-07 15:25:33 -Generating unique operation named: updateUsingGET_1
2021-06-07 15:25:33 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 15:25:33 -Generating unique operation named: updateUsingPOST_1
2021-06-07 15:25:33 -Generating unique operation named: updateUsingPUT_1
2021-06-07 15:25:33 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 15:25:33 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 15:25:33 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 15:25:33 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 15:25:33 -Generating unique operation named: addUsingGET_2
2021-06-07 15:25:33 -Generating unique operation named: editUsingGET_2
2021-06-07 15:25:33 -Generating unique operation named: listUsingGET_2
2021-06-07 15:25:33 -Generating unique operation named: removeUsingPOST_4
2021-06-07 15:25:33 -Generating unique operation named: removeUsingPOST_5
2021-06-07 15:25:33 -Generating unique operation named: saveUsingPOST_2
2021-06-07 15:25:34 -Generating unique operation named: updateUsingGET_2
2021-06-07 15:25:34 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPOST_2
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPUT_2
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 15:25:34 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 15:25:34 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 15:25:34 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 15:25:34 -Generating unique operation named: editUsingGET_3
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_3
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPOST_3
2021-06-07 15:25:34 -Generating unique operation named: addUsingGET_3
2021-06-07 15:25:34 -Generating unique operation named: editUsingGET_4
2021-06-07 15:25:34 -Generating unique operation named: infoUsingGET_1
2021-06-07 15:25:34 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 15:25:34 -Generating unique operation named: infoUsingPOST_1
2021-06-07 15:25:34 -Generating unique operation named: infoUsingPUT_1
2021-06-07 15:25:34 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 15:25:34 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 15:25:34 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 15:25:34 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_4
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_6
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_7
2021-06-07 15:25:34 -Generating unique operation named: saveUsingPOST_3
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPOST_4
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_5
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_8
2021-06-07 15:25:34 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 15:25:34 -Generating unique operation named: addUsingGET_4
2021-06-07 15:25:34 -Generating unique operation named: editUsingGET_5
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_6
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_9
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_10
2021-06-07 15:25:34 -Generating unique operation named: saveUsingPOST_4
2021-06-07 15:25:34 -Generating unique operation named: updateUsingGET_3
2021-06-07 15:25:34 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPOST_5
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPUT_3
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 15:25:34 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 15:25:34 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 15:25:34 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 15:25:34 -Generating unique operation named: addUsingGET_5
2021-06-07 15:25:34 -Generating unique operation named: editUsingGET_6
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_7
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_11
2021-06-07 15:25:34 -Generating unique operation named: saveUsingPOST_5
2021-06-07 15:25:34 -Generating unique operation named: treeUsingGET_1
2021-06-07 15:25:34 -Generating unique operation named: treeUsingGET_2
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPOST_6
2021-06-07 15:25:34 -Generating unique operation named: addUsingGET_6
2021-06-07 15:25:34 -Generating unique operation named: editUsingGET_7
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_8
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_12
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_13
2021-06-07 15:25:34 -Generating unique operation named: saveUsingPOST_6
2021-06-07 15:25:34 -Generating unique operation named: updateUsingGET_4
2021-06-07 15:25:34 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPOST_7
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPUT_4
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 15:25:34 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 15:25:34 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 15:25:34 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 15:25:34 -Generating unique operation named: addUsingGET_7
2021-06-07 15:25:34 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 15:25:34 -Generating unique operation named: editUsingGET_8
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_9
2021-06-07 15:25:34 -Generating unique operation named: saveUsingPOST_7
2021-06-07 15:25:34 -Generating unique operation named: saveUsingPOST_8
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPOST_8
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_10
2021-06-07 15:25:34 -Generating unique operation named: listUsingHEAD_1
2021-06-07 15:25:34 -Generating unique operation named: listUsingPOST_1
2021-06-07 15:25:34 -Generating unique operation named: listUsingPUT_1
2021-06-07 15:25:34 -Generating unique operation named: listUsingPATCH_1
2021-06-07 15:25:34 -Generating unique operation named: listUsingDELETE_1
2021-06-07 15:25:34 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 15:25:34 -Generating unique operation named: listUsingTRACE_1
2021-06-07 15:25:34 -Generating unique operation named: addUsingGET_8
2021-06-07 15:25:34 -Generating unique operation named: editUsingGET_9
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_11
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_14
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_15
2021-06-07 15:25:34 -Generating unique operation named: saveUsingPOST_9
2021-06-07 15:25:34 -Generating unique operation named: updateUsingGET_5
2021-06-07 15:25:34 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPOST_9
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPUT_5
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 15:25:34 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 15:25:34 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 15:25:34 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 15:25:34 -Generating unique operation named: addUsingGET_9
2021-06-07 15:25:34 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 15:25:34 -Generating unique operation named: editUsingGET_10
2021-06-07 15:25:34 -Generating unique operation named: listUsingGET_12
2021-06-07 15:25:34 -Generating unique operation named: removeUsingPOST_16
2021-06-07 15:25:34 -Generating unique operation named: saveUsingPOST_10
2021-06-07 15:25:34 -Generating unique operation named: treeUsingGET_3
2021-06-07 15:25:34 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 15:25:34 -Generating unique operation named: updateUsingPOST_10
2021-06-07 15:25:34 -Starting Quartz Scheduler now
2021-06-07 15:25:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 15:25:34 -Starting...
2021-06-07 15:25:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 15:25:34 -Started.
2021-06-07 15:25:34 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 15:25:34 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 15:25:34 -Using a shared selector for servlet write/read
2021-06-07 15:25:34 -Tomcat started on port(s): 8088 (http)
2021-06-07 15:25:34 -Started BootdoApplication in 6.893 seconds (JVM running for 7.543)
2021-06-07 15:25:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 15:25:39 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 15:25:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 15:25:39 -Enabling session validation scheduler...
2021-06-07 15:25:39 -请求地址 : http://localhost:8088/login;JSESSIONID=2f120fe2-6cb6-486f-ab8c-e3ca3ecc0501
2021-06-07 15:25:39 -HTTP METHOD : GET
2021-06-07 15:25:39 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:25:39 -参数 : []
2021-06-07 15:25:39 -耗时 : 1
2021-06-07 15:25:39 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 15:25:39 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 15:25:39 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 15:25:39 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 15:25:39 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 15:25:39 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 15:25:39 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 15:25:41 -请求地址 : http://localhost:8088/login
2021-06-07 15:25:41 -HTTP METHOD : POST
2021-06-07 15:25:41 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:25:41 -参数 : [admin, Dm202007sc]
2021-06-07 15:25:41 -耗时 : 5
2021-06-07 15:25:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 15:25:41 -请求地址 : http://localhost:8088/index
2021-06-07 15:25:41 -HTTP METHOD : GET
2021-06-07 15:25:41 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:25:41 -参数 : [{}]
2021-06-07 15:25:41 -耗时 : 22
2021-06-07 15:25:41 -请求地址 : http://localhost:8088/main
2021-06-07 15:25:41 -HTTP METHOD : GET
2021-06-07 15:25:41 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:25:41 -参数 : []
2021-06-07 15:25:41 -耗时 : 0
2021-06-07 15:25:41 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:25:41 -HTTP METHOD : GET
2021-06-07 15:25:41 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:25:41 -参数 : []
2021-06-07 15:25:41 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$d9c0101f.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:25:41 -请求地址 : http://localhost:8088/main
2021-06-07 15:25:41 -HTTP METHOD : GET
2021-06-07 15:25:41 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:25:41 -参数 : []
2021-06-07 15:25:41 -耗时 : 2
2021-06-07 15:25:43 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:25:43 -HTTP METHOD : GET
2021-06-07 15:25:43 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:25:43 -参数 : []
2021-06-07 15:25:43 -耗时 : 0
2021-06-07 15:25:43 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:25:43 -HTTP METHOD : GET
2021-06-07 15:25:43 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:25:43 -参数 : [{limit=10, offset=0}]
2021-06-07 15:25:43 -耗时 : 9
2021-06-07 15:26:06 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 13236 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 15:26:06 -The following profiles are active: dev
2021-06-07 15:26:06 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 15:26:06 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:26:06 CST 2021]; root of context hierarchy
2021-06-07 15:26:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 15:26:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43105862] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:26:07 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$339b2364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:26:07 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:26:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:26:07 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 15:26:07 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 15:26:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:26:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:26:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:26:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:26:08 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 15:26:08 -Starting service [Tomcat]
2021-06-07 15:26:08 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 15:26:08 -Initializing Spring embedded WebApplicationContext
2021-06-07 15:26:08 -Root WebApplicationContext: initialization completed in 2013 ms
2021-06-07 15:26:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 15:26:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 15:26:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 15:26:08 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 15:26:08 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 15:26:08 -Filter xssFilter was not registered (disabled)
2021-06-07 15:26:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 15:26:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 15:26:08 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 15:26:08 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 15:26:08 -{dataSource-1} inited
2021-06-07 15:26:09 -Using default implementation for ThreadExecutor
2021-06-07 15:26:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 15:26:09 -Quartz Scheduler v.2.2.1 created.
2021-06-07 15:26:09 -RAMJobStore initialized.
2021-06-07 15:26:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 15:26:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 15:26:09 -Quartz scheduler version: 2.2.1
2021-06-07 15:26:09 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@740b9a50
2021-06-07 15:26:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 15:26:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 15:26:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 15:26:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 15:26:10 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 15:26:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 15:26:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 15:26:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 15:26:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 15:26:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 15:26:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 15:26:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 15:26:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 15:26:10 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 15:26:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 15:26:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 15:26:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 15:26:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:26:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 15:26:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:26:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 15:26:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 15:26:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 15:26:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 15:26:10 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 15:26:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 15:26:10 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 15:26:10 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 15:26:10 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:26:10 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:26:10 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 15:26:10 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 15:26:10 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 15:26:10 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 15:26:10 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:26:10 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:26:10 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 15:26:10 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 15:26:10 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 15:26:10 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:26:10 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:26:10 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 15:26:10 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 15:26:10 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 15:26:10 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 15:26:10 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 15:26:10 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 15:26:10 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 15:26:10 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 15:26:10 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 15:26:10 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 15:26:10 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 15:26:10 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 15:26:10 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 15:26:10 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 15:26:10 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 15:26:10 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 15:26:10 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 15:26:10 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 15:26:10 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 15:26:10 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 15:26:10 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 15:26:10 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 15:26:10 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 15:26:10 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 15:26:10 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 15:26:10 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 15:26:10 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 15:26:10 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 15:26:10 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 15:26:10 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 15:26:10 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 15:26:10 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 15:26:10 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 15:26:10 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:26:10 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:26:10 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:26:10 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 15:26:10 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 15:26:10 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 15:26:10 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 15:26:10 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 15:26:10 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 15:26:10 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:26:10 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 15:26:10 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 15:26:10 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:26:10 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:26:10 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 15:26:10 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 15:26:10 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 15:26:10 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 15:26:10 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 15:26:10 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 15:26:10 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:26:06 CST 2021]; root of context hierarchy
2021-06-07 15:26:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:26:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:26:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:26:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 15:26:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:26:11 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 15:26:11 -

Using default security password: 999c2be8-2f4c-4630-b928-87c887acd35b

2021-06-07 15:26:11 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 15:26:11 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@72585e83, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b64bf61, org.springframework.security.web.context.SecurityContextPersistenceFilter@3265995e, org.springframework.security.web.header.HeaderWriterFilter@27ec74a3, org.springframework.security.web.csrf.CsrfFilter@6f428e6e, org.springframework.security.web.authentication.logout.LogoutFilter@148fca83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15ad5acb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57a5b03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d5bb5c, org.springframework.security.web.session.SessionManagementFilter@b8142f4, org.springframework.security.web.access.ExceptionTranslationFilter@38b54694]
2021-06-07 15:26:11 -Registering beans for JMX exposure on startup
2021-06-07 15:26:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 15:26:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 15:26:11 -Starting beans in phase 2147483647
2021-06-07 15:26:11 -Context refreshed
2021-06-07 15:26:11 -Found 1 custom documentation plugin(s)
2021-06-07 15:26:11 -Scanning for api listing references
2021-06-07 15:26:11 -Generating unique operation named: removeUsingPOST_1
2021-06-07 15:26:11 -Generating unique operation named: addUsingGET_1
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_1
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_1
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_2
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_3
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_1
2021-06-07 15:26:12 -Generating unique operation named: updateUsingGET_1
2021-06-07 15:26:12 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_1
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPUT_1
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 15:26:12 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 15:26:12 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 15:26:12 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 15:26:12 -Generating unique operation named: addUsingGET_2
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_2
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_2
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_4
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_5
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_2
2021-06-07 15:26:12 -Generating unique operation named: updateUsingGET_2
2021-06-07 15:26:12 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_2
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPUT_2
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 15:26:12 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 15:26:12 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 15:26:12 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_3
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_3
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_3
2021-06-07 15:26:12 -Generating unique operation named: addUsingGET_3
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_4
2021-06-07 15:26:12 -Generating unique operation named: infoUsingGET_1
2021-06-07 15:26:12 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 15:26:12 -Generating unique operation named: infoUsingPOST_1
2021-06-07 15:26:12 -Generating unique operation named: infoUsingPUT_1
2021-06-07 15:26:12 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 15:26:12 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 15:26:12 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 15:26:12 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_4
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_6
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_7
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_3
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_4
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_5
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_8
2021-06-07 15:26:12 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 15:26:12 -Generating unique operation named: addUsingGET_4
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_5
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_6
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_9
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_10
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_4
2021-06-07 15:26:12 -Generating unique operation named: updateUsingGET_3
2021-06-07 15:26:12 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_5
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPUT_3
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 15:26:12 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 15:26:12 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 15:26:12 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 15:26:12 -Generating unique operation named: addUsingGET_5
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_6
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_7
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_11
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_5
2021-06-07 15:26:12 -Generating unique operation named: treeUsingGET_1
2021-06-07 15:26:12 -Generating unique operation named: treeUsingGET_2
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_6
2021-06-07 15:26:12 -Generating unique operation named: addUsingGET_6
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_7
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_8
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_12
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_13
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_6
2021-06-07 15:26:12 -Generating unique operation named: updateUsingGET_4
2021-06-07 15:26:12 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_7
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPUT_4
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 15:26:12 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 15:26:12 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 15:26:12 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 15:26:12 -Generating unique operation named: addUsingGET_7
2021-06-07 15:26:12 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_8
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_9
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_7
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_8
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_8
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_10
2021-06-07 15:26:12 -Generating unique operation named: listUsingHEAD_1
2021-06-07 15:26:12 -Generating unique operation named: listUsingPOST_1
2021-06-07 15:26:12 -Generating unique operation named: listUsingPUT_1
2021-06-07 15:26:12 -Generating unique operation named: listUsingPATCH_1
2021-06-07 15:26:12 -Generating unique operation named: listUsingDELETE_1
2021-06-07 15:26:12 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 15:26:12 -Generating unique operation named: listUsingTRACE_1
2021-06-07 15:26:12 -Generating unique operation named: addUsingGET_8
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_9
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_11
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_14
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_15
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_9
2021-06-07 15:26:12 -Generating unique operation named: updateUsingGET_5
2021-06-07 15:26:12 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_9
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPUT_5
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 15:26:12 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 15:26:12 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 15:26:12 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 15:26:12 -Generating unique operation named: addUsingGET_9
2021-06-07 15:26:12 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 15:26:12 -Generating unique operation named: editUsingGET_10
2021-06-07 15:26:12 -Generating unique operation named: listUsingGET_12
2021-06-07 15:26:12 -Generating unique operation named: removeUsingPOST_16
2021-06-07 15:26:12 -Generating unique operation named: saveUsingPOST_10
2021-06-07 15:26:12 -Generating unique operation named: treeUsingGET_3
2021-06-07 15:26:12 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 15:26:12 -Generating unique operation named: updateUsingPOST_10
2021-06-07 15:26:12 -Starting Quartz Scheduler now
2021-06-07 15:26:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 15:26:12 -Starting...
2021-06-07 15:26:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 15:26:12 -Started.
2021-06-07 15:26:12 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 15:26:12 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 15:26:12 -Using a shared selector for servlet write/read
2021-06-07 15:26:12 -Tomcat started on port(s): 8088 (http)
2021-06-07 15:26:12 -Started BootdoApplication in 6.988 seconds (JVM running for 7.639)
2021-06-07 15:26:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 15:26:15 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 15:26:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 15:26:15 -Enabling session validation scheduler...
2021-06-07 15:26:15 -请求地址 : http://localhost:8088/login;JSESSIONID=e4303cdc-5f01-4585-a68f-1eb45ab2f3de
2021-06-07 15:26:15 -HTTP METHOD : GET
2021-06-07 15:26:15 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:26:15 -参数 : []
2021-06-07 15:26:15 -耗时 : 1
2021-06-07 15:26:15 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 15:26:15 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 15:26:15 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 15:26:15 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 15:26:15 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 15:26:15 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 15:26:15 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 15:26:17 -请求地址 : http://localhost:8088/login
2021-06-07 15:26:17 -HTTP METHOD : POST
2021-06-07 15:26:17 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:26:17 -参数 : [admin, Dm202007sc]
2021-06-07 15:26:17 -耗时 : 6
2021-06-07 15:26:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 15:26:17 -请求地址 : http://localhost:8088/index
2021-06-07 15:26:17 -HTTP METHOD : GET
2021-06-07 15:26:17 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:26:17 -参数 : [{}]
2021-06-07 15:26:17 -耗时 : 20
2021-06-07 15:26:17 -请求地址 : http://localhost:8088/main
2021-06-07 15:26:17 -HTTP METHOD : GET
2021-06-07 15:26:17 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:26:17 -参数 : []
2021-06-07 15:26:17 -耗时 : 1
2021-06-07 15:26:17 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:26:17 -HTTP METHOD : GET
2021-06-07 15:26:17 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:26:17 -参数 : []
2021-06-07 15:26:17 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:26:17 -请求地址 : http://localhost:8088/main
2021-06-07 15:26:17 -HTTP METHOD : GET
2021-06-07 15:26:17 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:26:17 -参数 : []
2021-06-07 15:26:17 -耗时 : 0
2021-06-07 15:26:19 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:26:19 -HTTP METHOD : GET
2021-06-07 15:26:19 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:26:19 -参数 : []
2021-06-07 15:26:19 -耗时 : 0
2021-06-07 15:26:19 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:26:19 -HTTP METHOD : GET
2021-06-07 15:26:19 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:26:19 -参数 : [{limit=10, offset=0}]
2021-06-07 15:26:19 -耗时 : 9
2021-06-07 15:27:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 13]
2021-06-07 15:27:37 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 10192 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 15:27:37 -The following profiles are active: dev
2021-06-07 15:27:37 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 15:27:37 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:27:37 CST 2021]; root of context hierarchy
2021-06-07 15:27:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 15:27:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43105862] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:27:39 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$339b2364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:27:39 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:27:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:27:39 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 15:27:39 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 15:27:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:27:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:27:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:27:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:27:39 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 15:27:39 -Starting service [Tomcat]
2021-06-07 15:27:39 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 15:27:39 -Initializing Spring embedded WebApplicationContext
2021-06-07 15:27:39 -Root WebApplicationContext: initialization completed in 1998 ms
2021-06-07 15:27:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 15:27:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 15:27:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 15:27:40 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 15:27:40 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 15:27:40 -Filter xssFilter was not registered (disabled)
2021-06-07 15:27:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 15:27:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 15:27:40 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 15:27:40 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 15:27:40 -{dataSource-1} inited
2021-06-07 15:27:40 -Using default implementation for ThreadExecutor
2021-06-07 15:27:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 15:27:40 -Quartz Scheduler v.2.2.1 created.
2021-06-07 15:27:40 -RAMJobStore initialized.
2021-06-07 15:27:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 15:27:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 15:27:40 -Quartz scheduler version: 2.2.1
2021-06-07 15:27:40 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@740b9a50
2021-06-07 15:27:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 15:27:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 15:27:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 15:27:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 15:27:41 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 15:27:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 15:27:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 15:27:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 15:27:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 15:27:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 15:27:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 15:27:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 15:27:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 15:27:41 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 15:27:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 15:27:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 15:27:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 15:27:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:27:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 15:27:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:27:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 15:27:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 15:27:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 15:27:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 15:27:41 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 15:27:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 15:27:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 15:27:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 15:27:41 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:27:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:27:41 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 15:27:41 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 15:27:41 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 15:27:41 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 15:27:41 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:27:41 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:27:41 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 15:27:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 15:27:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 15:27:41 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:27:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:27:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 15:27:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 15:27:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 15:27:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 15:27:41 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 15:27:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 15:27:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 15:27:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 15:27:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 15:27:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 15:27:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 15:27:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 15:27:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 15:27:41 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 15:27:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 15:27:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 15:27:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 15:27:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 15:27:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 15:27:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 15:27:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 15:27:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 15:27:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 15:27:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 15:27:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 15:27:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 15:27:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 15:27:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 15:27:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 15:27:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 15:27:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 15:27:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 15:27:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 15:27:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:27:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 15:27:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:27:41 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 15:27:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:27:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 15:27:41 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 15:27:41 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 15:27:41 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 15:27:41 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:27:41 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 15:27:41 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 15:27:41 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:27:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:27:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 15:27:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 15:27:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 15:27:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 15:27:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 15:27:42 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 15:27:42 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:27:37 CST 2021]; root of context hierarchy
2021-06-07 15:27:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:27:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:27:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:27:42 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 15:27:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:27:43 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 15:27:43 -

Using default security password: 629c6ef9-f0fd-4509-b312-b0e284367314

2021-06-07 15:27:43 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 15:27:43 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@fb2c2f3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@148fca83, org.springframework.security.web.context.SecurityContextPersistenceFilter@b8142f4, org.springframework.security.web.header.HeaderWriterFilter@38b54694, org.springframework.security.web.csrf.CsrfFilter@3245efdb, org.springframework.security.web.authentication.logout.LogoutFilter@4e3ee457, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50b38342, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a8b42a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d2a8819, org.springframework.security.web.session.SessionManagementFilter@45539bd8, org.springframework.security.web.access.ExceptionTranslationFilter@77e730bd]
2021-06-07 15:27:43 -Registering beans for JMX exposure on startup
2021-06-07 15:27:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 15:27:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 15:27:43 -Starting beans in phase 2147483647
2021-06-07 15:27:43 -Context refreshed
2021-06-07 15:27:43 -Found 1 custom documentation plugin(s)
2021-06-07 15:27:43 -Scanning for api listing references
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_1
2021-06-07 15:27:43 -Generating unique operation named: addUsingGET_1
2021-06-07 15:27:43 -Generating unique operation named: editUsingGET_1
2021-06-07 15:27:43 -Generating unique operation named: listUsingGET_1
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_2
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_3
2021-06-07 15:27:43 -Generating unique operation named: saveUsingPOST_1
2021-06-07 15:27:43 -Generating unique operation named: updateUsingGET_1
2021-06-07 15:27:43 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPOST_1
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPUT_1
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 15:27:43 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 15:27:43 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 15:27:43 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 15:27:43 -Generating unique operation named: addUsingGET_2
2021-06-07 15:27:43 -Generating unique operation named: editUsingGET_2
2021-06-07 15:27:43 -Generating unique operation named: listUsingGET_2
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_4
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_5
2021-06-07 15:27:43 -Generating unique operation named: saveUsingPOST_2
2021-06-07 15:27:43 -Generating unique operation named: updateUsingGET_2
2021-06-07 15:27:43 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPOST_2
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPUT_2
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 15:27:43 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 15:27:43 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 15:27:43 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 15:27:43 -Generating unique operation named: editUsingGET_3
2021-06-07 15:27:43 -Generating unique operation named: listUsingGET_3
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPOST_3
2021-06-07 15:27:43 -Generating unique operation named: addUsingGET_3
2021-06-07 15:27:43 -Generating unique operation named: editUsingGET_4
2021-06-07 15:27:43 -Generating unique operation named: infoUsingGET_1
2021-06-07 15:27:43 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 15:27:43 -Generating unique operation named: infoUsingPOST_1
2021-06-07 15:27:43 -Generating unique operation named: infoUsingPUT_1
2021-06-07 15:27:43 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 15:27:43 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 15:27:43 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 15:27:43 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 15:27:43 -Generating unique operation named: listUsingGET_4
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_6
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_7
2021-06-07 15:27:43 -Generating unique operation named: saveUsingPOST_3
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPOST_4
2021-06-07 15:27:43 -Generating unique operation named: listUsingGET_5
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_8
2021-06-07 15:27:43 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 15:27:43 -Generating unique operation named: addUsingGET_4
2021-06-07 15:27:43 -Generating unique operation named: editUsingGET_5
2021-06-07 15:27:43 -Generating unique operation named: listUsingGET_6
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_9
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_10
2021-06-07 15:27:43 -Generating unique operation named: saveUsingPOST_4
2021-06-07 15:27:43 -Generating unique operation named: updateUsingGET_3
2021-06-07 15:27:43 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPOST_5
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPUT_3
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 15:27:43 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 15:27:43 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 15:27:43 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 15:27:43 -Generating unique operation named: addUsingGET_5
2021-06-07 15:27:43 -Generating unique operation named: editUsingGET_6
2021-06-07 15:27:43 -Generating unique operation named: listUsingGET_7
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_11
2021-06-07 15:27:43 -Generating unique operation named: saveUsingPOST_5
2021-06-07 15:27:43 -Generating unique operation named: treeUsingGET_1
2021-06-07 15:27:43 -Generating unique operation named: treeUsingGET_2
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPOST_6
2021-06-07 15:27:43 -Generating unique operation named: addUsingGET_6
2021-06-07 15:27:43 -Generating unique operation named: editUsingGET_7
2021-06-07 15:27:43 -Generating unique operation named: listUsingGET_8
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_12
2021-06-07 15:27:43 -Generating unique operation named: removeUsingPOST_13
2021-06-07 15:27:43 -Generating unique operation named: saveUsingPOST_6
2021-06-07 15:27:43 -Generating unique operation named: updateUsingGET_4
2021-06-07 15:27:43 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPOST_7
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPUT_4
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 15:27:43 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 15:27:43 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 15:27:43 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 15:27:43 -Generating unique operation named: addUsingGET_7
2021-06-07 15:27:43 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 15:27:43 -Generating unique operation named: editUsingGET_8
2021-06-07 15:27:43 -Generating unique operation named: listUsingGET_9
2021-06-07 15:27:43 -Generating unique operation named: saveUsingPOST_7
2021-06-07 15:27:43 -Generating unique operation named: saveUsingPOST_8
2021-06-07 15:27:43 -Generating unique operation named: updateUsingPOST_8
2021-06-07 15:27:44 -Generating unique operation named: listUsingGET_10
2021-06-07 15:27:44 -Generating unique operation named: listUsingHEAD_1
2021-06-07 15:27:44 -Generating unique operation named: listUsingPOST_1
2021-06-07 15:27:44 -Generating unique operation named: listUsingPUT_1
2021-06-07 15:27:44 -Generating unique operation named: listUsingPATCH_1
2021-06-07 15:27:44 -Generating unique operation named: listUsingDELETE_1
2021-06-07 15:27:44 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 15:27:44 -Generating unique operation named: listUsingTRACE_1
2021-06-07 15:27:44 -Generating unique operation named: addUsingGET_8
2021-06-07 15:27:44 -Generating unique operation named: editUsingGET_9
2021-06-07 15:27:44 -Generating unique operation named: listUsingGET_11
2021-06-07 15:27:44 -Generating unique operation named: removeUsingPOST_14
2021-06-07 15:27:44 -Generating unique operation named: removeUsingPOST_15
2021-06-07 15:27:44 -Generating unique operation named: saveUsingPOST_9
2021-06-07 15:27:44 -Generating unique operation named: updateUsingGET_5
2021-06-07 15:27:44 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 15:27:44 -Generating unique operation named: updateUsingPOST_9
2021-06-07 15:27:44 -Generating unique operation named: updateUsingPUT_5
2021-06-07 15:27:44 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 15:27:44 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 15:27:44 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 15:27:44 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 15:27:44 -Generating unique operation named: addUsingGET_9
2021-06-07 15:27:44 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 15:27:44 -Generating unique operation named: editUsingGET_10
2021-06-07 15:27:44 -Generating unique operation named: listUsingGET_12
2021-06-07 15:27:44 -Generating unique operation named: removeUsingPOST_16
2021-06-07 15:27:44 -Generating unique operation named: saveUsingPOST_10
2021-06-07 15:27:44 -Generating unique operation named: treeUsingGET_3
2021-06-07 15:27:44 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 15:27:44 -Generating unique operation named: updateUsingPOST_10
2021-06-07 15:27:44 -Starting Quartz Scheduler now
2021-06-07 15:27:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 15:27:44 -Starting...
2021-06-07 15:27:44 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 15:27:44 -Started.
2021-06-07 15:27:44 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 15:27:44 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 15:27:44 -Using a shared selector for servlet write/read
2021-06-07 15:27:44 -Tomcat started on port(s): 8088 (http)
2021-06-07 15:27:44 -Started BootdoApplication in 6.891 seconds (JVM running for 7.552)
2021-06-07 15:27:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 15:27:47 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 15:27:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2021-06-07 15:27:47 -Enabling session validation scheduler...
2021-06-07 15:27:47 -请求地址 : http://localhost:8088/login;JSESSIONID=416fcd5c-0c9b-4805-8cd5-463143ea31a4
2021-06-07 15:27:47 -HTTP METHOD : GET
2021-06-07 15:27:47 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:27:47 -参数 : []
2021-06-07 15:27:47 -耗时 : 1
2021-06-07 15:27:47 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 15:27:48 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 15:27:48 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 15:27:48 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 15:27:48 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 15:27:48 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 15:27:48 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 15:27:49 -请求地址 : http://localhost:8088/login
2021-06-07 15:27:49 -HTTP METHOD : POST
2021-06-07 15:27:49 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:27:49 -参数 : [admin, Dm202007sc]
2021-06-07 15:27:49 -耗时 : 6
2021-06-07 15:27:49 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 15:27:49 -请求地址 : http://localhost:8088/index
2021-06-07 15:27:49 -HTTP METHOD : GET
2021-06-07 15:27:49 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:27:49 -参数 : [{}]
2021-06-07 15:27:49 -耗时 : 20
2021-06-07 15:27:49 -请求地址 : http://localhost:8088/main
2021-06-07 15:27:49 -HTTP METHOD : GET
2021-06-07 15:27:49 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:27:49 -参数 : []
2021-06-07 15:27:49 -耗时 : 1
2021-06-07 15:27:49 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:27:49 -HTTP METHOD : GET
2021-06-07 15:27:49 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:27:49 -参数 : []
2021-06-07 15:27:49 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:27:49 -请求地址 : http://localhost:8088/main
2021-06-07 15:27:49 -HTTP METHOD : GET
2021-06-07 15:27:49 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:27:49 -参数 : []
2021-06-07 15:27:49 -耗时 : 0
2021-06-07 15:27:51 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:27:51 -HTTP METHOD : GET
2021-06-07 15:27:51 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:27:51 -参数 : []
2021-06-07 15:27:51 -耗时 : 1
2021-06-07 15:27:51 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:27:51 -HTTP METHOD : GET
2021-06-07 15:27:51 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:27:51 -参数 : [{limit=10, offset=0}]
2021-06-07 15:27:51 -耗时 : 10
2021-06-07 15:27:55 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:27:55 -HTTP METHOD : GET
2021-06-07 15:27:55 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:27:55 -参数 : [{limit=10, offset=0}]
2021-06-07 15:27:55 -耗时 : 2
2021-06-07 15:28:36 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 2836 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 15:28:36 -The following profiles are active: dev
2021-06-07 15:28:36 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 15:28:36 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:28:36 CST 2021]; root of context hierarchy
2021-06-07 15:28:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 15:28:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee47edf5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:37 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ded2b8f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:37 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:37 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:37 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 15:28:37 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 15:28:37 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:39 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 1820 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 15:28:39 -The following profiles are active: dev
2021-06-07 15:28:39 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 15:28:39 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:28:39 CST 2021]; root of context hierarchy
2021-06-07 15:28:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 15:28:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e77e0b7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:40 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d808d681] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:41 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:41 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 15:28:41 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 15:28:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:28:41 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 15:28:41 -Starting service [Tomcat]
2021-06-07 15:28:41 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 15:28:41 -Initializing Spring embedded WebApplicationContext
2021-06-07 15:28:41 -Root WebApplicationContext: initialization completed in 2007 ms
2021-06-07 15:28:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 15:28:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 15:28:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 15:28:41 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 15:28:41 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 15:28:41 -Filter xssFilter was not registered (disabled)
2021-06-07 15:28:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 15:28:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 15:28:41 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 15:28:41 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 15:28:42 -{dataSource-1} inited
2021-06-07 15:28:42 -Using default implementation for ThreadExecutor
2021-06-07 15:28:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 15:28:42 -Quartz Scheduler v.2.2.1 created.
2021-06-07 15:28:42 -RAMJobStore initialized.
2021-06-07 15:28:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 15:28:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 15:28:42 -Quartz scheduler version: 2.2.1
2021-06-07 15:28:42 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@6459f4ea
2021-06-07 15:28:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 15:28:42 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 15:28:43 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 15:28:43 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 15:28:43 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 15:28:43 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 15:28:43 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 15:28:43 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 15:28:43 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 15:28:43 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 15:28:43 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 15:28:43 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 15:28:43 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 15:28:43 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 15:28:43 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 15:28:43 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 15:28:43 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 15:28:43 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:28:43 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 15:28:43 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:28:43 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 15:28:43 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 15:28:43 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 15:28:43 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 15:28:43 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 15:28:43 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 15:28:43 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 15:28:43 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 15:28:43 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:28:43 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:28:43 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 15:28:43 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 15:28:43 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 15:28:43 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 15:28:43 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:28:43 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:28:43 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 15:28:43 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 15:28:43 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 15:28:43 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:28:43 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:28:43 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 15:28:43 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 15:28:43 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 15:28:43 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 15:28:43 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 15:28:43 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 15:28:43 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 15:28:43 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 15:28:43 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 15:28:43 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 15:28:43 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 15:28:43 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 15:28:43 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 15:28:43 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 15:28:43 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 15:28:43 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 15:28:43 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 15:28:43 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 15:28:43 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 15:28:43 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 15:28:43 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 15:28:43 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 15:28:43 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 15:28:43 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 15:28:43 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 15:28:43 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 15:28:43 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 15:28:43 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 15:28:43 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 15:28:43 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 15:28:43 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 15:28:43 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 15:28:43 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 15:28:43 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:28:43 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:28:43 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:28:43 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 15:28:43 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 15:28:43 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 15:28:43 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 15:28:43 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 15:28:43 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 15:28:43 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:28:43 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 15:28:43 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 15:28:43 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:28:43 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:28:43 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 15:28:43 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 15:28:43 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 15:28:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 15:28:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 15:28:43 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 15:28:44 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:28:39 CST 2021]; root of context hierarchy
2021-06-07 15:28:44 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:28:44 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:28:44 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:28:44 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 15:28:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:28:44 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 15:28:44 -

Using default security password: 31b0c0f7-2e26-48f1-a3cf-b53c5a457ebf

2021-06-07 15:28:44 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 15:28:44 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@41b66d1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fb2c2f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@55e5415d, org.springframework.security.web.header.HeaderWriterFilter@7b8cb283, org.springframework.security.web.csrf.CsrfFilter@7157413e, org.springframework.security.web.authentication.logout.LogoutFilter@401b67a9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@146833a2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@351e86b2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@148fca83, org.springframework.security.web.session.SessionManagementFilter@662713b6, org.springframework.security.web.access.ExceptionTranslationFilter@6eb5b9e7]
2021-06-07 15:28:45 -Registering beans for JMX exposure on startup
2021-06-07 15:28:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 15:28:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 15:28:45 -Starting beans in phase 2147483647
2021-06-07 15:28:45 -Context refreshed
2021-06-07 15:28:45 -Found 1 custom documentation plugin(s)
2021-06-07 15:28:45 -Scanning for api listing references
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_1
2021-06-07 15:28:45 -Generating unique operation named: addUsingGET_1
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_1
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_1
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_2
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_3
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_1
2021-06-07 15:28:45 -Generating unique operation named: updateUsingGET_1
2021-06-07 15:28:45 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_1
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPUT_1
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 15:28:45 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 15:28:45 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 15:28:45 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 15:28:45 -Generating unique operation named: addUsingGET_2
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_2
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_2
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_4
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_5
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_2
2021-06-07 15:28:45 -Generating unique operation named: updateUsingGET_2
2021-06-07 15:28:45 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_2
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPUT_2
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 15:28:45 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 15:28:45 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 15:28:45 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_3
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_3
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_3
2021-06-07 15:28:45 -Generating unique operation named: addUsingGET_3
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_4
2021-06-07 15:28:45 -Generating unique operation named: infoUsingGET_1
2021-06-07 15:28:45 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 15:28:45 -Generating unique operation named: infoUsingPOST_1
2021-06-07 15:28:45 -Generating unique operation named: infoUsingPUT_1
2021-06-07 15:28:45 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 15:28:45 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 15:28:45 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 15:28:45 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_4
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_6
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_7
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_3
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_4
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_5
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_8
2021-06-07 15:28:45 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 15:28:45 -Generating unique operation named: addUsingGET_4
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_5
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_6
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_9
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_10
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_4
2021-06-07 15:28:45 -Generating unique operation named: updateUsingGET_3
2021-06-07 15:28:45 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_5
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPUT_3
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 15:28:45 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 15:28:45 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 15:28:45 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 15:28:45 -Generating unique operation named: addUsingGET_5
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_6
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_7
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_11
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_5
2021-06-07 15:28:45 -Generating unique operation named: treeUsingGET_1
2021-06-07 15:28:45 -Generating unique operation named: treeUsingGET_2
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_6
2021-06-07 15:28:45 -Generating unique operation named: addUsingGET_6
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_7
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_8
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_12
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_13
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_6
2021-06-07 15:28:45 -Generating unique operation named: updateUsingGET_4
2021-06-07 15:28:45 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_7
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPUT_4
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 15:28:45 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 15:28:45 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 15:28:45 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 15:28:45 -Generating unique operation named: addUsingGET_7
2021-06-07 15:28:45 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_8
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_9
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_7
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_8
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_8
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_10
2021-06-07 15:28:45 -Generating unique operation named: listUsingHEAD_1
2021-06-07 15:28:45 -Generating unique operation named: listUsingPOST_1
2021-06-07 15:28:45 -Generating unique operation named: listUsingPUT_1
2021-06-07 15:28:45 -Generating unique operation named: listUsingPATCH_1
2021-06-07 15:28:45 -Generating unique operation named: listUsingDELETE_1
2021-06-07 15:28:45 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 15:28:45 -Generating unique operation named: listUsingTRACE_1
2021-06-07 15:28:45 -Generating unique operation named: addUsingGET_8
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_9
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_11
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_14
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_15
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_9
2021-06-07 15:28:45 -Generating unique operation named: updateUsingGET_5
2021-06-07 15:28:45 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_9
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPUT_5
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 15:28:45 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 15:28:45 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 15:28:45 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 15:28:45 -Generating unique operation named: addUsingGET_9
2021-06-07 15:28:45 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 15:28:45 -Generating unique operation named: editUsingGET_10
2021-06-07 15:28:45 -Generating unique operation named: listUsingGET_12
2021-06-07 15:28:45 -Generating unique operation named: removeUsingPOST_16
2021-06-07 15:28:45 -Generating unique operation named: saveUsingPOST_10
2021-06-07 15:28:45 -Generating unique operation named: treeUsingGET_3
2021-06-07 15:28:45 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 15:28:45 -Generating unique operation named: updateUsingPOST_10
2021-06-07 15:28:45 -Starting Quartz Scheduler now
2021-06-07 15:28:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 15:28:45 -Starting...
2021-06-07 15:28:45 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 15:28:45 -Started.
2021-06-07 15:28:45 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 15:28:45 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 15:28:45 -Using a shared selector for servlet write/read
2021-06-07 15:28:45 -Tomcat started on port(s): 8088 (http)
2021-06-07 15:28:46 -Started BootdoApplication in 6.907 seconds (JVM running for 7.578)
2021-06-07 15:28:48 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 15:28:48 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 15:28:48 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 15:28:48 -Enabling session validation scheduler...
2021-06-07 15:28:48 -请求地址 : http://localhost:8088/login;JSESSIONID=82e627b9-9102-49ca-ad1a-79a48f09ee25
2021-06-07 15:28:48 -HTTP METHOD : GET
2021-06-07 15:28:48 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:28:48 -参数 : []
2021-06-07 15:28:48 -耗时 : 1
2021-06-07 15:28:48 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 15:28:48 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 15:28:48 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 15:28:48 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 15:28:48 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 15:28:48 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 15:28:48 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 15:28:50 -请求地址 : http://localhost:8088/login
2021-06-07 15:28:50 -HTTP METHOD : POST
2021-06-07 15:28:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:28:50 -参数 : [admin, Dm202007sc]
2021-06-07 15:28:50 -耗时 : 6
2021-06-07 15:28:50 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 15:28:50 -请求地址 : http://localhost:8088/index
2021-06-07 15:28:50 -HTTP METHOD : GET
2021-06-07 15:28:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:28:50 -参数 : [{}]
2021-06-07 15:28:50 -耗时 : 21
2021-06-07 15:28:50 -请求地址 : http://localhost:8088/main
2021-06-07 15:28:50 -HTTP METHOD : GET
2021-06-07 15:28:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:28:50 -参数 : []
2021-06-07 15:28:50 -耗时 : 0
2021-06-07 15:28:50 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:28:50 -HTTP METHOD : GET
2021-06-07 15:28:50 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:28:50 -参数 : []
2021-06-07 15:28:50 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$93170b92.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:28:50 -请求地址 : http://localhost:8088/main
2021-06-07 15:28:50 -HTTP METHOD : GET
2021-06-07 15:28:50 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:28:50 -参数 : []
2021-06-07 15:28:50 -耗时 : 0
2021-06-07 15:28:52 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:28:52 -HTTP METHOD : GET
2021-06-07 15:28:52 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:28:52 -参数 : []
2021-06-07 15:28:52 -耗时 : 0
2021-06-07 15:28:52 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:28:52 -HTTP METHOD : GET
2021-06-07 15:28:52 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:28:52 -参数 : [{limit=10, offset=0}]
2021-06-07 15:28:52 -耗时 : 9
2021-06-07 15:29:19 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 4776 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 15:29:19 -The following profiles are active: dev
2021-06-07 15:29:20 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 15:29:20 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:29:20 CST 2021]; root of context hierarchy
2021-06-07 15:29:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 15:29:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e681df8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:21 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3ef2e8fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:21 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:21 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:21 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 15:29:21 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 15:29:21 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:21 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:21 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:22 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 15:29:22 -Starting service [Tomcat]
2021-06-07 15:29:22 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 15:29:22 -Initializing Spring embedded WebApplicationContext
2021-06-07 15:29:22 -Root WebApplicationContext: initialization completed in 1989 ms
2021-06-07 15:29:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 15:29:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 15:29:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 15:29:22 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 15:29:22 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 15:29:22 -Filter xssFilter was not registered (disabled)
2021-06-07 15:29:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 15:29:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 15:29:22 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 15:29:22 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 15:29:22 -{dataSource-1} inited
2021-06-07 15:29:23 -Using default implementation for ThreadExecutor
2021-06-07 15:29:23 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 15:29:23 -Quartz Scheduler v.2.2.1 created.
2021-06-07 15:29:23 -RAMJobStore initialized.
2021-06-07 15:29:23 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 15:29:23 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 15:29:23 -Quartz scheduler version: 2.2.1
2021-06-07 15:29:23 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@6314df3c
2021-06-07 15:29:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 15:29:23 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 15:29:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 15:29:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 15:29:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 15:29:23 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 15:29:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 15:29:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 15:29:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 15:29:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 15:29:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 15:29:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 15:29:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 15:29:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 15:29:23 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 15:29:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 15:29:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 15:29:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 15:29:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 15:29:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:29:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 15:29:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:29:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 15:29:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 15:29:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 15:29:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 15:29:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 15:29:23 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 15:29:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 15:29:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 15:29:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 15:29:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 15:29:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 15:29:23 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:29:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:29:23 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 15:29:23 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 15:29:23 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 15:29:23 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 15:29:23 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:29:23 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:23 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:29:23 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 15:29:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 15:29:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 15:29:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 15:29:23 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:29:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:29:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 15:29:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 15:29:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 15:29:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 15:29:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 15:29:23 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 15:29:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 15:29:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 15:29:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 15:29:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 15:29:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 15:29:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 15:29:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 15:29:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 15:29:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 15:29:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 15:29:24 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 15:29:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:29:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 15:29:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 15:29:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 15:29:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 15:29:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 15:29:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:29:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 15:29:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 15:29:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 15:29:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 15:29:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 15:29:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 15:29:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 15:29:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 15:29:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:24 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 15:29:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 15:29:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 15:29:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 15:29:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 15:29:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 15:29:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 15:29:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 15:29:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 15:29:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 15:29:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 15:29:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 15:29:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:29:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 15:29:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:29:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:29:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:29:24 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 15:29:24 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 15:29:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 15:29:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 15:29:24 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 15:29:24 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 15:29:24 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 15:29:24 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 15:29:24 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:24 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 15:29:24 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 15:29:24 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:29:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:29:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 15:29:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 15:29:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 15:29:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 15:29:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 15:29:24 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 15:29:24 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:29:20 CST 2021]; root of context hierarchy
2021-06-07 15:29:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:29:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:29:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:29:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 15:29:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:29:25 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 15:29:25 -

Using default security password: ba8238b7-1649-4d3d-b521-8a5b54c60fe8

2021-06-07 15:29:25 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 15:29:25 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3265995e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33f2eb04, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e4b5da1, org.springframework.security.web.header.HeaderWriterFilter@7d5a0b14, org.springframework.security.web.csrf.CsrfFilter@7a274521, org.springframework.security.web.authentication.logout.LogoutFilter@52d59507, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54bc3bcf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39ead1b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4df13dd0, org.springframework.security.web.session.SessionManagementFilter@24d7657b, org.springframework.security.web.access.ExceptionTranslationFilter@19e2db7c]
2021-06-07 15:29:25 -Registering beans for JMX exposure on startup
2021-06-07 15:29:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 15:29:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 15:29:25 -Starting beans in phase 2147483647
2021-06-07 15:29:25 -Context refreshed
2021-06-07 15:29:25 -Found 1 custom documentation plugin(s)
2021-06-07 15:29:25 -Scanning for api listing references
2021-06-07 15:29:25 -Generating unique operation named: removeUsingPOST_1
2021-06-07 15:29:25 -Generating unique operation named: addUsingGET_1
2021-06-07 15:29:25 -Generating unique operation named: editUsingGET_1
2021-06-07 15:29:25 -Generating unique operation named: listUsingGET_1
2021-06-07 15:29:25 -Generating unique operation named: removeUsingPOST_2
2021-06-07 15:29:25 -Generating unique operation named: removeUsingPOST_3
2021-06-07 15:29:25 -Generating unique operation named: saveUsingPOST_1
2021-06-07 15:29:25 -Generating unique operation named: updateUsingGET_1
2021-06-07 15:29:25 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 15:29:25 -Generating unique operation named: updateUsingPOST_1
2021-06-07 15:29:25 -Generating unique operation named: updateUsingPUT_1
2021-06-07 15:29:25 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 15:29:25 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 15:29:25 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 15:29:25 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 15:29:25 -Generating unique operation named: addUsingGET_2
2021-06-07 15:29:25 -Generating unique operation named: editUsingGET_2
2021-06-07 15:29:25 -Generating unique operation named: listUsingGET_2
2021-06-07 15:29:25 -Generating unique operation named: removeUsingPOST_4
2021-06-07 15:29:25 -Generating unique operation named: removeUsingPOST_5
2021-06-07 15:29:25 -Generating unique operation named: saveUsingPOST_2
2021-06-07 15:29:25 -Generating unique operation named: updateUsingGET_2
2021-06-07 15:29:25 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 15:29:25 -Generating unique operation named: updateUsingPOST_2
2021-06-07 15:29:25 -Generating unique operation named: updateUsingPUT_2
2021-06-07 15:29:25 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 15:29:25 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 15:29:25 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 15:29:25 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 15:29:26 -Generating unique operation named: editUsingGET_3
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_3
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPOST_3
2021-06-07 15:29:26 -Generating unique operation named: addUsingGET_3
2021-06-07 15:29:26 -Generating unique operation named: editUsingGET_4
2021-06-07 15:29:26 -Generating unique operation named: infoUsingGET_1
2021-06-07 15:29:26 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 15:29:26 -Generating unique operation named: infoUsingPOST_1
2021-06-07 15:29:26 -Generating unique operation named: infoUsingPUT_1
2021-06-07 15:29:26 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 15:29:26 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 15:29:26 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 15:29:26 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_4
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_6
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_7
2021-06-07 15:29:26 -Generating unique operation named: saveUsingPOST_3
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPOST_4
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_5
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_8
2021-06-07 15:29:26 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 15:29:26 -Generating unique operation named: addUsingGET_4
2021-06-07 15:29:26 -Generating unique operation named: editUsingGET_5
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_6
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_9
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_10
2021-06-07 15:29:26 -Generating unique operation named: saveUsingPOST_4
2021-06-07 15:29:26 -Generating unique operation named: updateUsingGET_3
2021-06-07 15:29:26 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPOST_5
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPUT_3
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 15:29:26 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 15:29:26 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 15:29:26 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 15:29:26 -Generating unique operation named: addUsingGET_5
2021-06-07 15:29:26 -Generating unique operation named: editUsingGET_6
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_7
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_11
2021-06-07 15:29:26 -Generating unique operation named: saveUsingPOST_5
2021-06-07 15:29:26 -Generating unique operation named: treeUsingGET_1
2021-06-07 15:29:26 -Generating unique operation named: treeUsingGET_2
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPOST_6
2021-06-07 15:29:26 -Generating unique operation named: addUsingGET_6
2021-06-07 15:29:26 -Generating unique operation named: editUsingGET_7
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_8
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_12
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_13
2021-06-07 15:29:26 -Generating unique operation named: saveUsingPOST_6
2021-06-07 15:29:26 -Generating unique operation named: updateUsingGET_4
2021-06-07 15:29:26 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPOST_7
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPUT_4
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 15:29:26 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 15:29:26 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 15:29:26 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 15:29:26 -Generating unique operation named: addUsingGET_7
2021-06-07 15:29:26 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 15:29:26 -Generating unique operation named: editUsingGET_8
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_9
2021-06-07 15:29:26 -Generating unique operation named: saveUsingPOST_7
2021-06-07 15:29:26 -Generating unique operation named: saveUsingPOST_8
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPOST_8
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_10
2021-06-07 15:29:26 -Generating unique operation named: listUsingHEAD_1
2021-06-07 15:29:26 -Generating unique operation named: listUsingPOST_1
2021-06-07 15:29:26 -Generating unique operation named: listUsingPUT_1
2021-06-07 15:29:26 -Generating unique operation named: listUsingPATCH_1
2021-06-07 15:29:26 -Generating unique operation named: listUsingDELETE_1
2021-06-07 15:29:26 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 15:29:26 -Generating unique operation named: listUsingTRACE_1
2021-06-07 15:29:26 -Generating unique operation named: addUsingGET_8
2021-06-07 15:29:26 -Generating unique operation named: editUsingGET_9
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_11
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_14
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_15
2021-06-07 15:29:26 -Generating unique operation named: saveUsingPOST_9
2021-06-07 15:29:26 -Generating unique operation named: updateUsingGET_5
2021-06-07 15:29:26 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPOST_9
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPUT_5
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 15:29:26 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 15:29:26 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 15:29:26 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 15:29:26 -Generating unique operation named: addUsingGET_9
2021-06-07 15:29:26 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 15:29:26 -Generating unique operation named: editUsingGET_10
2021-06-07 15:29:26 -Generating unique operation named: listUsingGET_12
2021-06-07 15:29:26 -Generating unique operation named: removeUsingPOST_16
2021-06-07 15:29:26 -Generating unique operation named: saveUsingPOST_10
2021-06-07 15:29:26 -Generating unique operation named: treeUsingGET_3
2021-06-07 15:29:26 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 15:29:26 -Generating unique operation named: updateUsingPOST_10
2021-06-07 15:29:26 -Starting Quartz Scheduler now
2021-06-07 15:29:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 15:29:26 -Starting...
2021-06-07 15:29:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 15:29:26 -Started.
2021-06-07 15:29:26 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 15:29:26 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 15:29:26 -Using a shared selector for servlet write/read
2021-06-07 15:29:26 -Tomcat started on port(s): 8088 (http)
2021-06-07 15:29:26 -Started BootdoApplication in 6.94 seconds (JVM running for 7.587)
2021-06-07 15:29:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 15:29:29 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 15:29:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 15:29:29 -Enabling session validation scheduler...
2021-06-07 15:29:29 -请求地址 : http://localhost:8088/login;JSESSIONID=61d7295a-214c-4b85-bfdf-e2627ebae296
2021-06-07 15:29:29 -HTTP METHOD : GET
2021-06-07 15:29:29 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:29:29 -参数 : []
2021-06-07 15:29:29 -耗时 : 1
2021-06-07 15:29:29 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 15:29:29 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 15:29:29 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 15:29:29 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 15:29:29 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 15:29:29 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 15:29:29 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 15:29:30 -请求地址 : http://localhost:8088/login
2021-06-07 15:29:30 -HTTP METHOD : POST
2021-06-07 15:29:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:29:30 -参数 : [admin, Dm202007sc]
2021-06-07 15:29:30 -耗时 : 6
2021-06-07 15:29:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 15:29:30 -请求地址 : http://localhost:8088/index
2021-06-07 15:29:30 -HTTP METHOD : GET
2021-06-07 15:29:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:29:30 -参数 : [{}]
2021-06-07 15:29:30 -耗时 : 21
2021-06-07 15:29:30 -请求地址 : http://localhost:8088/main
2021-06-07 15:29:30 -HTTP METHOD : GET
2021-06-07 15:29:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:29:30 -参数 : []
2021-06-07 15:29:30 -耗时 : 0
2021-06-07 15:29:30 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:29:30 -HTTP METHOD : GET
2021-06-07 15:29:30 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:29:30 -参数 : []
2021-06-07 15:29:30 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$d9c0101f.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:29:30 -请求地址 : http://localhost:8088/main
2021-06-07 15:29:30 -HTTP METHOD : GET
2021-06-07 15:29:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:29:30 -参数 : []
2021-06-07 15:29:30 -耗时 : 1
2021-06-07 15:29:32 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:29:32 -HTTP METHOD : GET
2021-06-07 15:29:32 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:29:32 -参数 : []
2021-06-07 15:29:32 -耗时 : 0
2021-06-07 15:29:32 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:29:32 -HTTP METHOD : GET
2021-06-07 15:29:32 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:29:32 -参数 : [{limit=10, offset=0}]
2021-06-07 15:29:32 -耗时 : 10
2021-06-07 15:29:46 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 11948 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 15:29:46 -The following profiles are active: dev
2021-06-07 15:29:46 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 15:29:46 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:29:46 CST 2021]; root of context hierarchy
2021-06-07 15:29:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 15:29:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43105862] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:47 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$339b2364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:48 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:48 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:48 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 15:29:48 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 15:29:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:29:48 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 15:29:48 -Starting service [Tomcat]
2021-06-07 15:29:48 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 15:29:48 -Initializing Spring embedded WebApplicationContext
2021-06-07 15:29:48 -Root WebApplicationContext: initialization completed in 1954 ms
2021-06-07 15:29:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 15:29:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 15:29:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 15:29:48 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 15:29:48 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 15:29:48 -Filter xssFilter was not registered (disabled)
2021-06-07 15:29:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 15:29:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 15:29:48 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 15:29:48 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 15:29:49 -{dataSource-1} inited
2021-06-07 15:29:49 -Using default implementation for ThreadExecutor
2021-06-07 15:29:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 15:29:49 -Quartz Scheduler v.2.2.1 created.
2021-06-07 15:29:49 -RAMJobStore initialized.
2021-06-07 15:29:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 15:29:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 15:29:49 -Quartz scheduler version: 2.2.1
2021-06-07 15:29:49 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@740b9a50
2021-06-07 15:29:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 15:29:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 15:29:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 15:29:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 15:29:50 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 15:29:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 15:29:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 15:29:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 15:29:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 15:29:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 15:29:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 15:29:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 15:29:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 15:29:50 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 15:29:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 15:29:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 15:29:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 15:29:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:29:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 15:29:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:29:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 15:29:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 15:29:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 15:29:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 15:29:50 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 15:29:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 15:29:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 15:29:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 15:29:50 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:29:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:29:50 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 15:29:50 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 15:29:50 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 15:29:50 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 15:29:50 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:29:50 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:29:50 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 15:29:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 15:29:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 15:29:50 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:29:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:29:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 15:29:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 15:29:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 15:29:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 15:29:50 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 15:29:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 15:29:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 15:29:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 15:29:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 15:29:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 15:29:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 15:29:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 15:29:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 15:29:50 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 15:29:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 15:29:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 15:29:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 15:29:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 15:29:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 15:29:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 15:29:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 15:29:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 15:29:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 15:29:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 15:29:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 15:29:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 15:29:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 15:29:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 15:29:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 15:29:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 15:29:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 15:29:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 15:29:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 15:29:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:29:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:29:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:29:50 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 15:29:50 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 15:29:50 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 15:29:50 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 15:29:50 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 15:29:50 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 15:29:50 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:29:50 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 15:29:50 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 15:29:50 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:29:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:29:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 15:29:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 15:29:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 15:29:50 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 15:29:50 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 15:29:50 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 15:29:51 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 15:29:46 CST 2021]; root of context hierarchy
2021-06-07 15:29:51 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:29:51 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:29:51 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:29:51 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 15:29:51 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:29:51 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 15:29:51 -

Using default security password: 563499ef-5a4b-4163-8fe2-f4f2185c3a6d

2021-06-07 15:29:51 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 15:29:51 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@72585e83, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b64bf61, org.springframework.security.web.context.SecurityContextPersistenceFilter@3265995e, org.springframework.security.web.header.HeaderWriterFilter@27ec74a3, org.springframework.security.web.csrf.CsrfFilter@6f428e6e, org.springframework.security.web.authentication.logout.LogoutFilter@148fca83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15ad5acb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57a5b03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d5bb5c, org.springframework.security.web.session.SessionManagementFilter@b8142f4, org.springframework.security.web.access.ExceptionTranslationFilter@38b54694]
2021-06-07 15:29:52 -Registering beans for JMX exposure on startup
2021-06-07 15:29:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 15:29:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 15:29:52 -Starting beans in phase 2147483647
2021-06-07 15:29:52 -Context refreshed
2021-06-07 15:29:52 -Found 1 custom documentation plugin(s)
2021-06-07 15:29:52 -Scanning for api listing references
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_1
2021-06-07 15:29:52 -Generating unique operation named: addUsingGET_1
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_1
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_1
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_2
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_3
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_1
2021-06-07 15:29:52 -Generating unique operation named: updateUsingGET_1
2021-06-07 15:29:52 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_1
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPUT_1
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 15:29:52 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 15:29:52 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 15:29:52 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 15:29:52 -Generating unique operation named: addUsingGET_2
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_2
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_2
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_4
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_5
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_2
2021-06-07 15:29:52 -Generating unique operation named: updateUsingGET_2
2021-06-07 15:29:52 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_2
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPUT_2
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 15:29:52 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 15:29:52 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 15:29:52 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_3
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_3
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_3
2021-06-07 15:29:52 -Generating unique operation named: addUsingGET_3
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_4
2021-06-07 15:29:52 -Generating unique operation named: infoUsingGET_1
2021-06-07 15:29:52 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 15:29:52 -Generating unique operation named: infoUsingPOST_1
2021-06-07 15:29:52 -Generating unique operation named: infoUsingPUT_1
2021-06-07 15:29:52 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 15:29:52 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 15:29:52 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 15:29:52 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_4
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_6
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_7
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_3
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_4
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_5
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_8
2021-06-07 15:29:52 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 15:29:52 -Generating unique operation named: addUsingGET_4
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_5
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_6
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_9
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_10
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_4
2021-06-07 15:29:52 -Generating unique operation named: updateUsingGET_3
2021-06-07 15:29:52 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_5
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPUT_3
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 15:29:52 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 15:29:52 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 15:29:52 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 15:29:52 -Generating unique operation named: addUsingGET_5
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_6
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_7
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_11
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_5
2021-06-07 15:29:52 -Generating unique operation named: treeUsingGET_1
2021-06-07 15:29:52 -Generating unique operation named: treeUsingGET_2
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_6
2021-06-07 15:29:52 -Generating unique operation named: addUsingGET_6
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_7
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_8
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_12
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_13
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_6
2021-06-07 15:29:52 -Generating unique operation named: updateUsingGET_4
2021-06-07 15:29:52 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_7
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPUT_4
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 15:29:52 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 15:29:52 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 15:29:52 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 15:29:52 -Generating unique operation named: addUsingGET_7
2021-06-07 15:29:52 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_8
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_9
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_7
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_8
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_8
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_10
2021-06-07 15:29:52 -Generating unique operation named: listUsingHEAD_1
2021-06-07 15:29:52 -Generating unique operation named: listUsingPOST_1
2021-06-07 15:29:52 -Generating unique operation named: listUsingPUT_1
2021-06-07 15:29:52 -Generating unique operation named: listUsingPATCH_1
2021-06-07 15:29:52 -Generating unique operation named: listUsingDELETE_1
2021-06-07 15:29:52 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 15:29:52 -Generating unique operation named: listUsingTRACE_1
2021-06-07 15:29:52 -Generating unique operation named: addUsingGET_8
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_9
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_11
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_14
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_15
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_9
2021-06-07 15:29:52 -Generating unique operation named: updateUsingGET_5
2021-06-07 15:29:52 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_9
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPUT_5
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 15:29:52 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 15:29:52 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 15:29:52 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 15:29:52 -Generating unique operation named: addUsingGET_9
2021-06-07 15:29:52 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 15:29:52 -Generating unique operation named: editUsingGET_10
2021-06-07 15:29:52 -Generating unique operation named: listUsingGET_12
2021-06-07 15:29:52 -Generating unique operation named: removeUsingPOST_16
2021-06-07 15:29:52 -Generating unique operation named: saveUsingPOST_10
2021-06-07 15:29:52 -Generating unique operation named: treeUsingGET_3
2021-06-07 15:29:52 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 15:29:52 -Generating unique operation named: updateUsingPOST_10
2021-06-07 15:29:52 -Starting Quartz Scheduler now
2021-06-07 15:29:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 15:29:52 -Starting...
2021-06-07 15:29:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 15:29:52 -Started.
2021-06-07 15:29:52 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 15:29:52 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 15:29:52 -Using a shared selector for servlet write/read
2021-06-07 15:29:52 -Tomcat started on port(s): 8088 (http)
2021-06-07 15:29:53 -Started BootdoApplication in 6.773 seconds (JVM running for 7.428)
2021-06-07 15:29:55 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 15:29:55 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 15:29:55 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2021-06-07 15:29:55 -Enabling session validation scheduler...
2021-06-07 15:29:55 -请求地址 : http://localhost:8088/login;JSESSIONID=f097853c-0608-4a7b-acf5-7dbad5e87ef3
2021-06-07 15:29:55 -HTTP METHOD : GET
2021-06-07 15:29:55 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:29:55 -参数 : []
2021-06-07 15:29:55 -耗时 : 1
2021-06-07 15:29:56 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 15:29:56 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 15:29:56 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 15:29:56 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 15:29:56 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 15:29:56 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 15:29:56 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 15:29:57 -请求地址 : http://localhost:8088/login
2021-06-07 15:29:57 -HTTP METHOD : POST
2021-06-07 15:29:57 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:29:57 -参数 : [admin, Dm202007sc]
2021-06-07 15:29:57 -耗时 : 6
2021-06-07 15:29:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 15:29:57 -请求地址 : http://localhost:8088/index
2021-06-07 15:29:57 -HTTP METHOD : GET
2021-06-07 15:29:57 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:29:57 -参数 : [{}]
2021-06-07 15:29:57 -耗时 : 19
2021-06-07 15:29:57 -请求地址 : http://localhost:8088/main
2021-06-07 15:29:57 -HTTP METHOD : GET
2021-06-07 15:29:57 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:29:57 -参数 : []
2021-06-07 15:29:57 -耗时 : 0
2021-06-07 15:29:57 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:29:57 -HTTP METHOD : GET
2021-06-07 15:29:57 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:29:57 -参数 : []
2021-06-07 15:29:57 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:29:57 -请求地址 : http://localhost:8088/main
2021-06-07 15:29:57 -HTTP METHOD : GET
2021-06-07 15:29:57 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:29:57 -参数 : []
2021-06-07 15:29:57 -耗时 : 5
2021-06-07 15:29:59 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:29:59 -HTTP METHOD : GET
2021-06-07 15:29:59 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:29:59 -参数 : []
2021-06-07 15:29:59 -耗时 : 1
2021-06-07 15:29:59 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:29:59 -HTTP METHOD : GET
2021-06-07 15:29:59 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:29:59 -参数 : [{limit=10, offset=0}]
2021-06-07 15:29:59 -耗时 : 10
2021-06-07 15:30:21 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:30:21 -HTTP METHOD : GET
2021-06-07 15:30:21 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:30:21 -参数 : [{limit=10, offset=0}]
2021-06-07 15:30:21 -耗时 : 2
2021-06-07 15:30:50 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 13]
2021-06-07 15:31:11 -请求地址 : http://localhost:8088/sys/user/
2021-06-07 15:31:11 -HTTP METHOD : GET
2021-06-07 15:31:11 -CLASS_METHOD : com.shiguang.system.controller.UserController.user
2021-06-07 15:31:11 -参数 : [{}]
2021-06-07 15:31:11 -耗时 : 0
2021-06-07 15:31:11 -请求地址 : http://localhost:8088/sys/user/list
2021-06-07 15:31:11 -HTTP METHOD : GET
2021-06-07 15:31:11 -CLASS_METHOD : com.shiguang.system.controller.UserController.list
2021-06-07 15:31:11 -参数 : [{limit=10, offset=0, name=, deptId=}]
2021-06-07 15:31:11 -耗时 : 16
2021-06-07 15:31:13 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 15:31:13 -HTTP METHOD : GET
2021-06-07 15:31:13 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 15:31:13 -参数 : [{}]
2021-06-07 15:31:13 -耗时 : 0
2021-06-07 15:31:14 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 15:31:14 -HTTP METHOD : GET
2021-06-07 15:31:14 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 15:31:14 -参数 : [{sort=order_num}]
2021-06-07 15:31:14 -耗时 : 12
2021-06-07 15:31:21 -请求地址 : http://localhost:8088/sys/menu/add/279
2021-06-07 15:31:21 -HTTP METHOD : GET
2021-06-07 15:31:21 -CLASS_METHOD : com.shiguang.system.controller.MenuController.add
2021-06-07 15:31:21 -参数 : [{}, 279]
2021-06-07 15:31:21 -耗时 : 4
2021-06-07 15:32:25 -请求地址 : http://localhost:8088/main
2021-06-07 15:32:25 -HTTP METHOD : GET
2021-06-07 15:32:25 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:32:25 -参数 : []
2021-06-07 15:32:25 -耗时 : 0
2021-06-07 15:32:25 -请求地址 : http://localhost:8088/main
2021-06-07 15:32:25 -HTTP METHOD : GET
2021-06-07 15:32:25 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:32:25 -参数 : []
2021-06-07 15:32:25 -耗时 : 0
2021-06-07 15:33:11 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:33:11 -HTTP METHOD : GET
2021-06-07 15:33:11 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:33:11 -参数 : []
2021-06-07 15:33:11 -耗时 : 0
2021-06-07 15:33:11 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:33:11 -HTTP METHOD : GET
2021-06-07 15:33:11 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:33:11 -参数 : [{limit=10, offset=0}]
2021-06-07 15:33:11 -耗时 : 2
2021-06-07 15:46:45 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=e26c9400-34ef-445a-95dc-9d4c5ff11df1
2021-06-07 15:46:45 -HTTP METHOD : GET
2021-06-07 15:46:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:46:45 -参数 : []
2021-06-07 15:46:45 -耗时 : 0
2021-06-07 15:46:45 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 15:46:45 -HTTP METHOD : GET
2021-06-07 15:46:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:46:45 -参数 : []
2021-06-07 15:46:45 -耗时 : 1
2021-06-07 15:46:45 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=e26c9400-34ef-445a-95dc-9d4c5ff11df1
2021-06-07 15:46:45 -HTTP METHOD : GET
2021-06-07 15:46:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:46:45 -参数 : []
2021-06-07 15:46:45 -耗时 : 0
2021-06-07 15:46:46 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 15:46:46 -HTTP METHOD : GET
2021-06-07 15:46:46 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:46:46 -参数 : []
2021-06-07 15:46:46 -耗时 : 0
2021-06-07 15:46:51 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 15:46:51 -HTTP METHOD : GET
2021-06-07 15:46:51 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:46:51 -参数 : []
2021-06-07 15:46:51 -耗时 : 0
2021-06-07 15:46:52 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 15:46:52 -HTTP METHOD : GET
2021-06-07 15:46:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:46:52 -参数 : []
2021-06-07 15:46:52 -耗时 : 0
2021-06-07 15:46:53 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 15:46:53 -HTTP METHOD : POST
2021-06-07 15:46:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:46:53 -参数 : [admin, Dm202007sc]
2021-06-07 15:46:53 -耗时 : 2
2021-06-07 15:46:53 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 15:46:53 -HTTP METHOD : GET
2021-06-07 15:46:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:46:53 -参数 : [{}]
2021-06-07 15:46:53 -耗时 : 6
2021-06-07 15:46:53 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 15:46:53 -HTTP METHOD : GET
2021-06-07 15:46:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:46:53 -参数 : []
2021-06-07 15:46:53 -耗时 : 0
2021-06-07 15:46:54 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 15:46:54 -HTTP METHOD : GET
2021-06-07 15:46:54 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:46:54 -参数 : []
2021-06-07 15:46:54 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor119.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:46:54 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 15:46:54 -HTTP METHOD : GET
2021-06-07 15:46:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:46:54 -参数 : []
2021-06-07 15:46:54 -耗时 : 0
2021-06-07 15:47:00 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 15:47:00 -HTTP METHOD : GET
2021-06-07 15:47:00 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 15:47:00 -参数 : []
2021-06-07 15:47:00 -耗时 : 0
2021-06-07 15:47:00 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 15:47:00 -HTTP METHOD : GET
2021-06-07 15:47:00 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 15:47:00 -参数 : []
2021-06-07 15:47:00 -耗时 : 6
2021-06-07 15:47:03 -请求地址 : http://127.0.0.1:8088/common/generator/edit
2021-06-07 15:47:03 -HTTP METHOD : GET
2021-06-07 15:47:03 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.edit
2021-06-07 15:47:03 -参数 : [{}]
2021-06-07 15:47:03 -耗时 : 15
2021-06-07 15:47:11 -请求地址 : http://127.0.0.1:8088/common/generator/update
2021-06-07 15:47:11 -HTTP METHOD : POST
2021-06-07 15:47:11 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.update
2021-06-07 15:47:11 -参数 : [{author=cln, email=bushuo@163.com, package=com.shiguang.manufacturer, autoRemovePre=true, tablePrefix=c_}]
2021-06-07 15:47:11 -耗时 : 6
2021-06-07 15:47:13 -请求地址 : http://127.0.0.1:8088/common/generator/batchCode
2021-06-07 15:47:13 -HTTP METHOD : GET
2021-06-07 15:47:13 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.batchCode
2021-06-07 15:47:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2db08aa6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@232f475b, ["c_manufacturer"]]
2021-06-07 15:47:14 -耗时 : 77
2021-06-07 15:50:04 -请求地址 : http://localhost:8088/index
2021-06-07 15:50:04 -HTTP METHOD : GET
2021-06-07 15:50:04 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:50:04 -参数 : [{}]
2021-06-07 15:50:04 -耗时 : 4
2021-06-07 15:50:04 -请求地址 : http://localhost:8088/main
2021-06-07 15:50:04 -HTTP METHOD : GET
2021-06-07 15:50:04 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:50:04 -参数 : []
2021-06-07 15:50:04 -耗时 : 0
2021-06-07 15:50:04 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:50:04 -HTTP METHOD : GET
2021-06-07 15:50:04 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:50:04 -参数 : []
2021-06-07 15:50:04 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor119.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:50:04 -请求地址 : http://localhost:8088/main
2021-06-07 15:50:04 -HTTP METHOD : GET
2021-06-07 15:50:04 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:50:04 -参数 : []
2021-06-07 15:50:04 -耗时 : 0
2021-06-07 15:50:07 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:50:07 -HTTP METHOD : GET
2021-06-07 15:50:07 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:50:07 -参数 : []
2021-06-07 15:50:07 -耗时 : 0
2021-06-07 15:50:07 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:50:07 -HTTP METHOD : GET
2021-06-07 15:50:07 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:50:07 -参数 : [{limit=10, offset=0}]
2021-06-07 15:50:07 -耗时 : 3
2021-06-07 15:55:12 -请求地址 : http://localhost:8088/
2021-06-07 15:55:12 -HTTP METHOD : GET
2021-06-07 15:55:12 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 15:55:12 -参数 : [{}]
2021-06-07 15:55:12 -耗时 : 0
2021-06-07 15:55:12 -请求地址 : http://localhost:8088/login
2021-06-07 15:55:12 -HTTP METHOD : GET
2021-06-07 15:55:12 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:55:12 -参数 : []
2021-06-07 15:55:12 -耗时 : 1
2021-06-07 15:55:14 -请求地址 : http://localhost:8088/login
2021-06-07 15:55:14 -HTTP METHOD : POST
2021-06-07 15:55:14 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:55:14 -参数 : [admin, Dm202007sc]
2021-06-07 15:55:14 -耗时 : 3
2021-06-07 15:55:14 -请求地址 : http://localhost:8088/index
2021-06-07 15:55:14 -HTTP METHOD : GET
2021-06-07 15:55:14 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:55:14 -参数 : [{}]
2021-06-07 15:55:14 -耗时 : 5
2021-06-07 15:55:14 -请求地址 : http://localhost:8088/main
2021-06-07 15:55:14 -HTTP METHOD : GET
2021-06-07 15:55:14 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:55:14 -参数 : []
2021-06-07 15:55:14 -耗时 : 0
2021-06-07 15:55:14 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:55:14 -HTTP METHOD : GET
2021-06-07 15:55:14 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:55:14 -参数 : []
2021-06-07 15:55:14 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor119.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:55:14 -请求地址 : http://localhost:8088/main
2021-06-07 15:55:14 -HTTP METHOD : GET
2021-06-07 15:55:14 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:55:14 -参数 : []
2021-06-07 15:55:14 -耗时 : 1
2021-06-07 15:55:20 -请求地址 : http://localhost:8088/
2021-06-07 15:55:20 -HTTP METHOD : GET
2021-06-07 15:55:20 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 15:55:20 -参数 : [{}]
2021-06-07 15:55:20 -耗时 : 0
2021-06-07 15:55:20 -请求地址 : http://localhost:8088/login
2021-06-07 15:55:20 -HTTP METHOD : GET
2021-06-07 15:55:20 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:55:20 -参数 : []
2021-06-07 15:55:20 -耗时 : 0
2021-06-07 15:55:28 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 15:55:28 -HTTP METHOD : GET
2021-06-07 15:55:28 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 15:55:28 -参数 : []
2021-06-07 15:55:28 -耗时 : 0
2021-06-07 15:55:29 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 15:55:29 -HTTP METHOD : GET
2021-06-07 15:55:29 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 15:55:29 -参数 : []
2021-06-07 15:55:29 -耗时 : 7
2021-06-07 15:57:49 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:57:49 -HTTP METHOD : GET
2021-06-07 15:57:49 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:57:49 -参数 : []
2021-06-07 15:57:49 -耗时 : 0
2021-06-07 15:57:49 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:57:49 -HTTP METHOD : GET
2021-06-07 15:57:49 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:57:49 -参数 : [{limit=10, offset=0}]
2021-06-07 15:57:49 -耗时 : 3
2021-06-07 15:57:53 -请求地址 : http://localhost:8088/index
2021-06-07 15:57:53 -HTTP METHOD : GET
2021-06-07 15:57:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:57:53 -参数 : [{}]
2021-06-07 15:57:53 -耗时 : 4
2021-06-07 15:57:53 -请求地址 : http://localhost:8088/main
2021-06-07 15:57:53 -HTTP METHOD : GET
2021-06-07 15:57:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:57:53 -参数 : []
2021-06-07 15:57:53 -耗时 : 0
2021-06-07 15:57:53 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:57:53 -HTTP METHOD : GET
2021-06-07 15:57:53 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:57:53 -参数 : []
2021-06-07 15:57:53 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor119.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:57:53 -请求地址 : http://localhost:8088/main
2021-06-07 15:57:53 -HTTP METHOD : GET
2021-06-07 15:57:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:57:53 -参数 : []
2021-06-07 15:57:53 -耗时 : 2
2021-06-07 15:57:55 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:57:55 -HTTP METHOD : GET
2021-06-07 15:57:55 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:57:55 -参数 : []
2021-06-07 15:57:55 -耗时 : 1
2021-06-07 15:57:55 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:57:55 -HTTP METHOD : GET
2021-06-07 15:57:55 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:57:55 -参数 : [{limit=10, offset=0}]
2021-06-07 15:57:55 -耗时 : 3
2021-06-07 15:59:27 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 11236 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 15:59:27 -The following profiles are active: dev
2021-06-07 15:59:27 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 15:59:27 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c1909a3: startup date [Mon Jun 07 15:59:27 CST 2021]; root of context hierarchy
2021-06-07 15:59:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 15:59:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$113d9b9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:59:28 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1c866a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:59:28 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:59:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:59:28 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 15:59:28 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 15:59:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:59:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:59:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:59:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 15:59:29 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 15:59:29 -Starting service [Tomcat]
2021-06-07 15:59:29 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 15:59:29 -Initializing Spring embedded WebApplicationContext
2021-06-07 15:59:29 -Root WebApplicationContext: initialization completed in 2005 ms
2021-06-07 15:59:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 15:59:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 15:59:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 15:59:29 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 15:59:29 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 15:59:29 -Filter xssFilter was not registered (disabled)
2021-06-07 15:59:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 15:59:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 15:59:29 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 15:59:29 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 15:59:29 -{dataSource-1} inited
2021-06-07 15:59:30 -Using default implementation for ThreadExecutor
2021-06-07 15:59:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 15:59:30 -Quartz Scheduler v.2.2.1 created.
2021-06-07 15:59:30 -RAMJobStore initialized.
2021-06-07 15:59:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 15:59:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 15:59:30 -Quartz scheduler version: 2.2.1
2021-06-07 15:59:30 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@2dd178f3
2021-06-07 15:59:30 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 15:59:30 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 15:59:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 15:59:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 15:59:31 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 15:59:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 15:59:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 15:59:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 15:59:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 15:59:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 15:59:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 15:59:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 15:59:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 15:59:31 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 15:59:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 15:59:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 15:59:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 15:59:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:59:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 15:59:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 15:59:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 15:59:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 15:59:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 15:59:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 15:59:31 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 15:59:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 15:59:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 15:59:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 15:59:31 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:59:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 15:59:31 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 15:59:31 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 15:59:31 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 15:59:31 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 15:59:31 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:59:31 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 15:59:31 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 15:59:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 15:59:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 15:59:31 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:59:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 15:59:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 15:59:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 15:59:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 15:59:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 15:59:31 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 15:59:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 15:59:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 15:59:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 15:59:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 15:59:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 15:59:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 15:59:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 15:59:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 15:59:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 15:59:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 15:59:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 15:59:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 15:59:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 15:59:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 15:59:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 15:59:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 15:59:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 15:59:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 15:59:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 15:59:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 15:59:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 15:59:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 15:59:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 15:59:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 15:59:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 15:59:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 15:59:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 15:59:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 15:59:31 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 15:59:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:59:31 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 15:59:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 15:59:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:59:31 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 15:59:31 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 15:59:31 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 15:59:31 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 15:59:31 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 15:59:31 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 15:59:31 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 15:59:31 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 15:59:31 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 15:59:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 15:59:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 15:59:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 15:59:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 15:59:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 15:59:31 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 15:59:31 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@4c1909a3: startup date [Mon Jun 07 15:59:27 CST 2021]; root of context hierarchy
2021-06-07 15:59:31 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:59:31 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:59:31 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:59:31 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 15:59:31 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 15:59:32 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 15:59:32 -

Using default security password: 364d2ae6-3796-4d4e-bde1-e0eba8855ad8

2021-06-07 15:59:32 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 15:59:32 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@55e5415d, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b8142f4, org.springframework.security.web.context.SecurityContextPersistenceFilter@2f0e7fa8, org.springframework.security.web.header.HeaderWriterFilter@924f3f1, org.springframework.security.web.csrf.CsrfFilter@335cdd2, org.springframework.security.web.authentication.logout.LogoutFilter@45539bd8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@196d684b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d3c501b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@52d59507, org.springframework.security.web.session.SessionManagementFilter@627d35ff, org.springframework.security.web.access.ExceptionTranslationFilter@762cdf46]
2021-06-07 15:59:32 -Registering beans for JMX exposure on startup
2021-06-07 15:59:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 15:59:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 15:59:32 -Starting beans in phase 2147483647
2021-06-07 15:59:32 -Context refreshed
2021-06-07 15:59:32 -Found 1 custom documentation plugin(s)
2021-06-07 15:59:32 -Scanning for api listing references
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_1
2021-06-07 15:59:33 -Generating unique operation named: addUsingGET_1
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_1
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_1
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_2
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_3
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_1
2021-06-07 15:59:33 -Generating unique operation named: updateUsingGET_1
2021-06-07 15:59:33 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_1
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPUT_1
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 15:59:33 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 15:59:33 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 15:59:33 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 15:59:33 -Generating unique operation named: addUsingGET_2
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_2
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_2
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_4
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_5
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_2
2021-06-07 15:59:33 -Generating unique operation named: updateUsingGET_2
2021-06-07 15:59:33 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_2
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPUT_2
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 15:59:33 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 15:59:33 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 15:59:33 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_3
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_3
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_3
2021-06-07 15:59:33 -Generating unique operation named: addUsingGET_3
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_4
2021-06-07 15:59:33 -Generating unique operation named: infoUsingGET_1
2021-06-07 15:59:33 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 15:59:33 -Generating unique operation named: infoUsingPOST_1
2021-06-07 15:59:33 -Generating unique operation named: infoUsingPUT_1
2021-06-07 15:59:33 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 15:59:33 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 15:59:33 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 15:59:33 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_4
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_6
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_7
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_3
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_4
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_5
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_8
2021-06-07 15:59:33 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 15:59:33 -Generating unique operation named: addUsingGET_4
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_5
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_6
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_9
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_10
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_4
2021-06-07 15:59:33 -Generating unique operation named: updateUsingGET_3
2021-06-07 15:59:33 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_5
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPUT_3
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 15:59:33 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 15:59:33 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 15:59:33 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 15:59:33 -Generating unique operation named: addUsingGET_5
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_6
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_7
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_11
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_5
2021-06-07 15:59:33 -Generating unique operation named: treeUsingGET_1
2021-06-07 15:59:33 -Generating unique operation named: treeUsingGET_2
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_6
2021-06-07 15:59:33 -Generating unique operation named: addUsingGET_6
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_7
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_8
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_12
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_13
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_6
2021-06-07 15:59:33 -Generating unique operation named: updateUsingGET_4
2021-06-07 15:59:33 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_7
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPUT_4
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 15:59:33 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 15:59:33 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 15:59:33 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 15:59:33 -Generating unique operation named: addUsingGET_7
2021-06-07 15:59:33 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_8
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_9
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_7
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_8
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_8
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_10
2021-06-07 15:59:33 -Generating unique operation named: listUsingHEAD_1
2021-06-07 15:59:33 -Generating unique operation named: listUsingPOST_1
2021-06-07 15:59:33 -Generating unique operation named: listUsingPUT_1
2021-06-07 15:59:33 -Generating unique operation named: listUsingPATCH_1
2021-06-07 15:59:33 -Generating unique operation named: listUsingDELETE_1
2021-06-07 15:59:33 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 15:59:33 -Generating unique operation named: listUsingTRACE_1
2021-06-07 15:59:33 -Generating unique operation named: addUsingGET_8
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_9
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_11
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_14
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_15
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_9
2021-06-07 15:59:33 -Generating unique operation named: updateUsingGET_5
2021-06-07 15:59:33 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_9
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPUT_5
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 15:59:33 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 15:59:33 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 15:59:33 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 15:59:33 -Generating unique operation named: addUsingGET_9
2021-06-07 15:59:33 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 15:59:33 -Generating unique operation named: editUsingGET_10
2021-06-07 15:59:33 -Generating unique operation named: listUsingGET_12
2021-06-07 15:59:33 -Generating unique operation named: removeUsingPOST_16
2021-06-07 15:59:33 -Generating unique operation named: saveUsingPOST_10
2021-06-07 15:59:33 -Generating unique operation named: treeUsingGET_3
2021-06-07 15:59:33 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 15:59:33 -Generating unique operation named: updateUsingPOST_10
2021-06-07 15:59:33 -Starting Quartz Scheduler now
2021-06-07 15:59:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 15:59:33 -Starting...
2021-06-07 15:59:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 15:59:33 -Started.
2021-06-07 15:59:33 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 15:59:33 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 15:59:33 -Using a shared selector for servlet write/read
2021-06-07 15:59:33 -Tomcat started on port(s): 8088 (http)
2021-06-07 15:59:33 -Started BootdoApplication in 6.89 seconds (JVM running for 7.563)
2021-06-07 15:59:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 15:59:38 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 15:59:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2021-06-07 15:59:38 -Enabling session validation scheduler...
2021-06-07 15:59:38 -请求地址 : http://localhost:8088/login;JSESSIONID=20ad222b-7d76-4389-8067-ff990fd32d25
2021-06-07 15:59:38 -HTTP METHOD : GET
2021-06-07 15:59:38 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 15:59:38 -参数 : []
2021-06-07 15:59:38 -耗时 : 1
2021-06-07 15:59:38 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 15:59:38 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 15:59:38 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 15:59:38 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 15:59:38 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 15:59:38 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 15:59:38 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 15:59:40 -请求地址 : http://localhost:8088/login
2021-06-07 15:59:40 -HTTP METHOD : POST
2021-06-07 15:59:40 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 15:59:40 -参数 : [admin, Dm202007sc]
2021-06-07 15:59:40 -耗时 : 5
2021-06-07 15:59:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 15:59:40 -请求地址 : http://localhost:8088/index
2021-06-07 15:59:40 -HTTP METHOD : GET
2021-06-07 15:59:40 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 15:59:40 -参数 : [{}]
2021-06-07 15:59:40 -耗时 : 21
2021-06-07 15:59:40 -请求地址 : http://localhost:8088/main
2021-06-07 15:59:40 -HTTP METHOD : GET
2021-06-07 15:59:40 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:59:40 -参数 : []
2021-06-07 15:59:40 -耗时 : 0
2021-06-07 15:59:40 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 15:59:40 -HTTP METHOD : GET
2021-06-07 15:59:40 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 15:59:40 -参数 : []
2021-06-07 15:59:40 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$c9714ec7.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 15:59:40 -请求地址 : http://localhost:8088/main
2021-06-07 15:59:40 -HTTP METHOD : GET
2021-06-07 15:59:40 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 15:59:40 -参数 : []
2021-06-07 15:59:40 -耗时 : 0
2021-06-07 15:59:42 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 15:59:42 -HTTP METHOD : GET
2021-06-07 15:59:42 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 15:59:42 -参数 : []
2021-06-07 15:59:42 -耗时 : 0
2021-06-07 15:59:42 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 15:59:42 -HTTP METHOD : GET
2021-06-07 15:59:42 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 15:59:42 -参数 : [{limit=10, offset=0}]
2021-06-07 15:59:42 -耗时 : 8
2021-06-07 15:59:57 -请求地址 : http://localhost:8088/manufacturer/manufacturer/add
2021-06-07 15:59:57 -HTTP METHOD : GET
2021-06-07 15:59:57 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.add
2021-06-07 15:59:57 -参数 : []
2021-06-07 15:59:57 -耗时 : 0
2021-06-07 16:00:04 -请求地址 : http://localhost:8088/manufacturer/manufacturer/save
2021-06-07 16:00:04 -HTTP METHOD : POST
2021-06-07 16:00:04 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.save
2021-06-07 16:00:04 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@773ad105]
2021-06-07 16:00:04 -耗时 : 23
2021-06-07 16:00:04 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:00:04 -HTTP METHOD : GET
2021-06-07 16:00:04 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:00:04 -参数 : [{limit=10, offset=0}]
2021-06-07 16:00:04 -耗时 : 3
2021-06-07 16:00:10 -请求地址 : http://localhost:8088/manufacturer/manufacturer/remove
2021-06-07 16:00:10 -HTTP METHOD : POST
2021-06-07 16:00:10 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.remove
2021-06-07 16:00:10 -参数 : [3]
2021-06-07 16:00:10 -耗时 : 36
2021-06-07 16:00:10 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:00:10 -HTTP METHOD : GET
2021-06-07 16:00:10 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:00:10 -参数 : [{limit=10, offset=0}]
2021-06-07 16:00:10 -耗时 : 2
2021-06-07 16:00:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 13]
2021-06-07 16:01:29 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 7124 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 16:01:29 -The following profiles are active: dev
2021-06-07 16:01:29 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 16:01:29 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 16:01:29 CST 2021]; root of context hierarchy
2021-06-07 16:01:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 16:01:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43105862] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:01:30 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$339b2364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:01:31 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:01:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:01:31 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 16:01:31 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 16:01:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:01:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:01:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:01:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:01:31 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 16:01:31 -Starting service [Tomcat]
2021-06-07 16:01:31 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 16:01:31 -Initializing Spring embedded WebApplicationContext
2021-06-07 16:01:31 -Root WebApplicationContext: initialization completed in 1990 ms
2021-06-07 16:01:31 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 16:01:31 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 16:01:31 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 16:01:31 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 16:01:31 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 16:01:31 -Filter xssFilter was not registered (disabled)
2021-06-07 16:01:31 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 16:01:31 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 16:01:31 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 16:01:31 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 16:01:32 -{dataSource-1} inited
2021-06-07 16:01:32 -Using default implementation for ThreadExecutor
2021-06-07 16:01:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 16:01:32 -Quartz Scheduler v.2.2.1 created.
2021-06-07 16:01:32 -RAMJobStore initialized.
2021-06-07 16:01:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 16:01:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 16:01:32 -Quartz scheduler version: 2.2.1
2021-06-07 16:01:32 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@740b9a50
2021-06-07 16:01:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 16:01:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 16:01:33 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 16:01:33 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 16:01:33 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 16:01:33 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 16:01:33 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 16:01:33 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 16:01:33 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 16:01:33 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 16:01:33 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 16:01:33 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 16:01:33 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 16:01:33 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 16:01:33 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 16:01:33 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 16:01:33 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 16:01:33 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 16:01:33 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 16:01:33 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 16:01:33 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 16:01:33 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 16:01:33 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 16:01:33 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 16:01:33 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 16:01:33 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 16:01:33 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 16:01:33 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 16:01:33 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 16:01:33 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 16:01:33 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 16:01:33 -Mapped "{[/manufacturer/manufacturer/add],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.add()
2021-06-07 16:01:33 -Mapped "{[/manufacturer/manufacturer/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer)
2021-06-07 16:01:33 -Mapped "{[/manufacturer/manufacturer/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.remove(java.lang.Integer[])
2021-06-07 16:01:33 -Mapped "{[/manufacturer/manufacturer/update]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.update(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 16:01:33 -Mapped "{[/manufacturer/manufacturer/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.manufacturer.controller.ManufacturerController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/manufacturer/manufacturer/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.manufacturer.controller.ManufacturerController.save(com.shiguang.manufacturer.domain.ManufacturerDO)
2021-06-07 16:01:33 -Mapped "{[/manufacturer/manufacturer/edit/{manufacturerid}],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/manufacturer/manufacturer],methods=[GET]}" onto java.lang.String com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer()
2021-06-07 16:01:33 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 16:01:33 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 16:01:33 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 16:01:33 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 16:01:33 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 16:01:33 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 16:01:33 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 16:01:33 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 16:01:33 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 16:01:33 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 16:01:33 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 16:01:33 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 16:01:33 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 16:01:33 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 16:01:33 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 16:01:33 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 16:01:33 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 16:01:33 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 16:01:33 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 16:01:33 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 16:01:33 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 16:01:33 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 16:01:33 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 16:01:33 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 16:01:33 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 16:01:33 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 16:01:33 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 16:01:33 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 16:01:33 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 16:01:33 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 16:01:33 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 16:01:33 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 16:01:33 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 16:01:33 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 16:01:33 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 16:01:33 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 16:01:33 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 16:01:33 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 16:01:33 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 16:01:33 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 16:01:33 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 16:01:33 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 16:01:33 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 16:01:33 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 16:01:33 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 16:01:33 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 16:01:33 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:01:33 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 16:01:33 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 16:01:33 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 16:01:33 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 16:01:33 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 16:01:33 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 16:01:33 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 16:01:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 16:01:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 16:01:33 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 16:01:34 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 16:01:29 CST 2021]; root of context hierarchy
2021-06-07 16:01:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 16:01:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 16:01:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 16:01:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 16:01:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 16:01:34 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 16:01:35 -

Using default security password: 92c14962-f423-410d-a2da-3f08ee88fd01

2021-06-07 16:01:35 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 16:01:35 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@fb2c2f3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@148fca83, org.springframework.security.web.context.SecurityContextPersistenceFilter@b8142f4, org.springframework.security.web.header.HeaderWriterFilter@38b54694, org.springframework.security.web.csrf.CsrfFilter@3245efdb, org.springframework.security.web.authentication.logout.LogoutFilter@4e3ee457, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50b38342, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a8b42a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d2a8819, org.springframework.security.web.session.SessionManagementFilter@45539bd8, org.springframework.security.web.access.ExceptionTranslationFilter@77e730bd]
2021-06-07 16:01:35 -Registering beans for JMX exposure on startup
2021-06-07 16:01:35 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 16:01:35 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 16:01:35 -Starting beans in phase 2147483647
2021-06-07 16:01:35 -Context refreshed
2021-06-07 16:01:35 -Found 1 custom documentation plugin(s)
2021-06-07 16:01:35 -Scanning for api listing references
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_1
2021-06-07 16:01:35 -Generating unique operation named: addUsingGET_1
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_1
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_1
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_2
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_3
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_1
2021-06-07 16:01:35 -Generating unique operation named: updateUsingGET_1
2021-06-07 16:01:35 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_1
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPUT_1
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 16:01:35 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 16:01:35 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 16:01:35 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 16:01:35 -Generating unique operation named: addUsingGET_2
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_2
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_2
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_4
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_5
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_2
2021-06-07 16:01:35 -Generating unique operation named: updateUsingGET_2
2021-06-07 16:01:35 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_2
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPUT_2
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 16:01:35 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 16:01:35 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 16:01:35 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_3
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_3
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_3
2021-06-07 16:01:35 -Generating unique operation named: addUsingGET_3
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_4
2021-06-07 16:01:35 -Generating unique operation named: infoUsingGET_1
2021-06-07 16:01:35 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 16:01:35 -Generating unique operation named: infoUsingPOST_1
2021-06-07 16:01:35 -Generating unique operation named: infoUsingPUT_1
2021-06-07 16:01:35 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 16:01:35 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 16:01:35 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 16:01:35 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_4
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_6
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_7
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_3
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_4
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_5
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_8
2021-06-07 16:01:35 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 16:01:35 -Generating unique operation named: addUsingGET_4
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_5
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_6
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_9
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_10
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_4
2021-06-07 16:01:35 -Generating unique operation named: updateUsingGET_3
2021-06-07 16:01:35 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_5
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPUT_3
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 16:01:35 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 16:01:35 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 16:01:35 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 16:01:35 -Generating unique operation named: addUsingGET_5
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_6
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_7
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_11
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_5
2021-06-07 16:01:35 -Generating unique operation named: treeUsingGET_1
2021-06-07 16:01:35 -Generating unique operation named: treeUsingGET_2
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_6
2021-06-07 16:01:35 -Generating unique operation named: addUsingGET_6
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_7
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_8
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_12
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_13
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_6
2021-06-07 16:01:35 -Generating unique operation named: updateUsingGET_4
2021-06-07 16:01:35 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_7
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPUT_4
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 16:01:35 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 16:01:35 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 16:01:35 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 16:01:35 -Generating unique operation named: addUsingGET_7
2021-06-07 16:01:35 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_8
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_9
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_7
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_8
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_8
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_10
2021-06-07 16:01:35 -Generating unique operation named: listUsingHEAD_1
2021-06-07 16:01:35 -Generating unique operation named: listUsingPOST_1
2021-06-07 16:01:35 -Generating unique operation named: listUsingPUT_1
2021-06-07 16:01:35 -Generating unique operation named: listUsingPATCH_1
2021-06-07 16:01:35 -Generating unique operation named: listUsingDELETE_1
2021-06-07 16:01:35 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 16:01:35 -Generating unique operation named: listUsingTRACE_1
2021-06-07 16:01:35 -Generating unique operation named: addUsingGET_8
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_9
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_11
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_14
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_15
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_9
2021-06-07 16:01:35 -Generating unique operation named: updateUsingGET_5
2021-06-07 16:01:35 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_9
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPUT_5
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 16:01:35 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 16:01:35 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 16:01:35 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 16:01:35 -Generating unique operation named: addUsingGET_9
2021-06-07 16:01:35 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 16:01:35 -Generating unique operation named: editUsingGET_10
2021-06-07 16:01:35 -Generating unique operation named: listUsingGET_12
2021-06-07 16:01:35 -Generating unique operation named: removeUsingPOST_16
2021-06-07 16:01:35 -Generating unique operation named: saveUsingPOST_10
2021-06-07 16:01:35 -Generating unique operation named: treeUsingGET_3
2021-06-07 16:01:35 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 16:01:35 -Generating unique operation named: updateUsingPOST_10
2021-06-07 16:01:35 -Starting Quartz Scheduler now
2021-06-07 16:01:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 16:01:35 -Starting...
2021-06-07 16:01:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 16:01:35 -Started.
2021-06-07 16:01:35 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 16:01:35 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 16:01:35 -Using a shared selector for servlet write/read
2021-06-07 16:01:35 -Tomcat started on port(s): 8088 (http)
2021-06-07 16:01:36 -Started BootdoApplication in 6.968 seconds (JVM running for 7.62)
2021-06-07 16:01:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 16:01:39 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 16:01:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 16:01:39 -Enabling session validation scheduler...
2021-06-07 16:01:39 -请求地址 : http://localhost:8088/login;JSESSIONID=878b290e-84c2-430c-a687-6cf2a146dd08
2021-06-07 16:01:39 -HTTP METHOD : GET
2021-06-07 16:01:39 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 16:01:39 -参数 : []
2021-06-07 16:01:39 -耗时 : 1
2021-06-07 16:01:39 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 16:01:39 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 16:01:39 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 16:01:39 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 16:01:39 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 16:01:39 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 16:01:39 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 16:01:41 -请求地址 : http://localhost:8088/login
2021-06-07 16:01:41 -HTTP METHOD : POST
2021-06-07 16:01:41 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 16:01:41 -参数 : [admin, Dm202007sc]
2021-06-07 16:01:41 -耗时 : 5
2021-06-07 16:01:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 16:01:41 -请求地址 : http://localhost:8088/index
2021-06-07 16:01:41 -HTTP METHOD : GET
2021-06-07 16:01:41 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 16:01:41 -参数 : [{}]
2021-06-07 16:01:41 -耗时 : 21
2021-06-07 16:01:41 -请求地址 : http://localhost:8088/main
2021-06-07 16:01:41 -HTTP METHOD : GET
2021-06-07 16:01:41 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:01:41 -参数 : []
2021-06-07 16:01:41 -耗时 : 1
2021-06-07 16:01:41 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 16:01:41 -HTTP METHOD : GET
2021-06-07 16:01:41 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 16:01:41 -参数 : []
2021-06-07 16:01:41 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 16:01:41 -请求地址 : http://localhost:8088/main
2021-06-07 16:01:41 -HTTP METHOD : GET
2021-06-07 16:01:41 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:01:41 -参数 : []
2021-06-07 16:01:41 -耗时 : 7
2021-06-07 16:01:42 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 16:01:42 -HTTP METHOD : GET
2021-06-07 16:01:42 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 16:01:42 -参数 : []
2021-06-07 16:01:42 -耗时 : 0
2021-06-07 16:01:43 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:01:43 -HTTP METHOD : GET
2021-06-07 16:01:43 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:01:43 -参数 : [{limit=10, offset=0}]
2021-06-07 16:01:43 -耗时 : 8
2021-06-07 16:01:48 -请求地址 : http://localhost:8088/manufacturer/manufacturer/add
2021-06-07 16:01:48 -HTTP METHOD : GET
2021-06-07 16:01:48 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.add
2021-06-07 16:01:48 -参数 : []
2021-06-07 16:01:48 -耗时 : 0
2021-06-07 16:01:59 -请求地址 : http://localhost:8088/manufacturer/manufacturer/save
2021-06-07 16:01:59 -HTTP METHOD : POST
2021-06-07 16:01:59 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.save
2021-06-07 16:01:59 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@4bc303e9]
2021-06-07 16:01:59 -耗时 : 23
2021-06-07 16:01:59 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:01:59 -HTTP METHOD : GET
2021-06-07 16:01:59 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:01:59 -参数 : [{limit=10, offset=0}]
2021-06-07 16:01:59 -耗时 : 3
2021-06-07 16:02:04 -请求地址 : http://localhost:8088/manufacturer/manufacturer/edit/4
2021-06-07 16:02:04 -HTTP METHOD : GET
2021-06-07 16:02:04 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.edit
2021-06-07 16:02:04 -参数 : [4, {}]
2021-06-07 16:02:04 -耗时 : 2
2021-06-07 16:02:07 -请求地址 : http://localhost:8088/manufacturer/manufacturer/update
2021-06-07 16:02:07 -HTTP METHOD : POST
2021-06-07 16:02:07 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.update
2021-06-07 16:02:07 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@1704fd41]
2021-06-07 16:02:07 -耗时 : 55
2021-06-07 16:02:07 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:02:07 -HTTP METHOD : GET
2021-06-07 16:02:07 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:02:07 -参数 : [{limit=10, offset=0}]
2021-06-07 16:02:07 -耗时 : 2
2021-06-07 16:02:09 -请求地址 : http://localhost:8088/manufacturer/manufacturer/edit/4
2021-06-07 16:02:09 -HTTP METHOD : GET
2021-06-07 16:02:09 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.edit
2021-06-07 16:02:09 -参数 : [4, {}]
2021-06-07 16:02:09 -耗时 : 1
2021-06-07 16:02:11 -请求地址 : http://localhost:8088/manufacturer/manufacturer/update
2021-06-07 16:02:11 -HTTP METHOD : POST
2021-06-07 16:02:11 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.update
2021-06-07 16:02:11 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@49032ee5]
2021-06-07 16:02:11 -耗时 : 37
2021-06-07 16:02:11 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:02:11 -HTTP METHOD : GET
2021-06-07 16:02:11 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:02:11 -参数 : [{limit=10, offset=0}]
2021-06-07 16:02:11 -耗时 : 4
2021-06-07 16:02:33 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 13]
2021-06-07 16:22:09 -请求地址 : http://localhost:8088/manufacturer/manufacturer/add
2021-06-07 16:22:09 -HTTP METHOD : GET
2021-06-07 16:22:09 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.add
2021-06-07 16:22:09 -参数 : []
2021-06-07 16:22:09 -耗时 : 0
2021-06-07 16:22:13 -请求地址 : http://localhost:8088/manufacturer/manufacturer/save
2021-06-07 16:22:13 -HTTP METHOD : POST
2021-06-07 16:22:13 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.save
2021-06-07 16:22:13 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@70a8b283]
2021-06-07 16:22:13 -耗时 : 71
2021-06-07 16:22:13 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:22:13 -HTTP METHOD : GET
2021-06-07 16:22:13 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:22:13 -参数 : [{limit=10, offset=0}]
2021-06-07 16:22:13 -耗时 : 4
2021-06-07 16:23:04 -请求地址 : http://localhost:8088/index
2021-06-07 16:23:04 -HTTP METHOD : GET
2021-06-07 16:23:04 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 16:23:04 -参数 : [{}]
2021-06-07 16:23:04 -耗时 : 7
2021-06-07 16:23:05 -请求地址 : http://localhost:8088/main
2021-06-07 16:23:05 -HTTP METHOD : GET
2021-06-07 16:23:05 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:23:05 -参数 : []
2021-06-07 16:23:05 -耗时 : 0
2021-06-07 16:23:05 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 16:23:05 -HTTP METHOD : GET
2021-06-07 16:23:05 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 16:23:05 -参数 : []
2021-06-07 16:23:05 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 16:23:05 -请求地址 : http://localhost:8088/main
2021-06-07 16:23:05 -HTTP METHOD : GET
2021-06-07 16:23:05 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:23:05 -参数 : []
2021-06-07 16:23:05 -耗时 : 2
2021-06-07 16:23:07 -请求地址 : http://localhost:8088/manufacturer/manufacturer
2021-06-07 16:23:07 -HTTP METHOD : GET
2021-06-07 16:23:07 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.Manufacturer
2021-06-07 16:23:07 -参数 : []
2021-06-07 16:23:07 -耗时 : 0
2021-06-07 16:23:07 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:23:07 -HTTP METHOD : GET
2021-06-07 16:23:07 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:23:07 -参数 : [{limit=10, offset=0}]
2021-06-07 16:23:07 -耗时 : 3
2021-06-07 16:23:09 -请求地址 : http://localhost:8088/manufacturer/manufacturer/edit/5
2021-06-07 16:23:09 -HTTP METHOD : GET
2021-06-07 16:23:09 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.edit
2021-06-07 16:23:09 -参数 : [5, {}]
2021-06-07 16:23:09 -耗时 : 1
2021-06-07 16:23:12 -请求地址 : http://localhost:8088/manufacturer/manufacturer/update
2021-06-07 16:23:12 -HTTP METHOD : POST
2021-06-07 16:23:12 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.update
2021-06-07 16:23:12 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@4baf23f2]
2021-06-07 16:23:12 -耗时 : 56
2021-06-07 16:23:12 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:23:12 -HTTP METHOD : GET
2021-06-07 16:23:12 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:23:12 -参数 : [{limit=10, offset=0}]
2021-06-07 16:23:12 -耗时 : 2
2021-06-07 16:23:14 -请求地址 : http://localhost:8088/manufacturer/manufacturer/edit/5
2021-06-07 16:23:14 -HTTP METHOD : GET
2021-06-07 16:23:14 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.edit
2021-06-07 16:23:14 -参数 : [5, {}]
2021-06-07 16:23:14 -耗时 : 1
2021-06-07 16:23:22 -请求地址 : http://localhost:8088/manufacturer/manufacturer/update
2021-06-07 16:23:22 -HTTP METHOD : POST
2021-06-07 16:23:22 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.update
2021-06-07 16:23:22 -参数 : [com.shiguang.manufacturer.domain.ManufacturerDO@105ddc9]
2021-06-07 16:23:22 -耗时 : 30
2021-06-07 16:23:22 -请求地址 : http://localhost:8088/manufacturer/manufacturer/list
2021-06-07 16:23:22 -HTTP METHOD : GET
2021-06-07 16:23:22 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.list
2021-06-07 16:23:22 -参数 : [{limit=10, offset=0}]
2021-06-07 16:23:22 -耗时 : 3
2021-06-07 16:23:27 -请求地址 : http://localhost:8088/manufacturer/manufacturer/edit/5
2021-06-07 16:23:27 -HTTP METHOD : GET
2021-06-07 16:23:27 -CLASS_METHOD : com.shiguang.manufacturer.controller.ManufacturerController.edit
2021-06-07 16:23:27 -参数 : [5, {}]
2021-06-07 16:23:27 -耗时 : 1
2021-06-07 16:23:31 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'manufacturerDO' on field 'manufacturernum': rejected value [b2]; codes [typeMismatch.manufacturerDO.manufacturernum,typeMismatch.manufacturernum,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [manufacturerDO.manufacturernum,manufacturernum]; arguments []; default message [manufacturernum]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'manufacturernum'; nested exception is java.lang.NumberFormatException: For input string: "b2"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'manufacturerDO' on field 'manufacturernum': rejected value [b2]; codes [typeMismatch.manufacturerDO.manufacturernum,typeMismatch.manufacturernum,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [manufacturerDO.manufacturernum,manufacturernum]; arguments []; default message [manufacturernum]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'manufacturernum'; nested exception is java.lang.NumberFormatException: For input string: "b2"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 16:23:33 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'manufacturerDO' on field 'manufacturernum': rejected value [b2]; codes [typeMismatch.manufacturerDO.manufacturernum,typeMismatch.manufacturernum,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [manufacturerDO.manufacturernum,manufacturernum]; arguments []; default message [manufacturernum]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'manufacturernum'; nested exception is java.lang.NumberFormatException: For input string: "b2"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'manufacturerDO' on field 'manufacturernum': rejected value [b2]; codes [typeMismatch.manufacturerDO.manufacturernum,typeMismatch.manufacturernum,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [manufacturerDO.manufacturernum,manufacturernum]; arguments []; default message [manufacturernum]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'manufacturernum'; nested exception is java.lang.NumberFormatException: For input string: "b2"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:115)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:121)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:158)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:128)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 16:32:33 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 419]
2021-06-07 16:54:03 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=39b097aa-2a82-4bd6-9bb7-f55977f31f40
2021-06-07 16:54:03 -HTTP METHOD : GET
2021-06-07 16:54:03 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 16:54:03 -参数 : []
2021-06-07 16:54:03 -耗时 : 0
2021-06-07 16:54:03 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 16:54:03 -HTTP METHOD : GET
2021-06-07 16:54:03 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 16:54:03 -参数 : []
2021-06-07 16:54:03 -耗时 : 0
2021-06-07 16:54:05 -请求地址 : http://127.0.0.1:8088/login;JSESSIONID=39b097aa-2a82-4bd6-9bb7-f55977f31f40
2021-06-07 16:54:05 -HTTP METHOD : GET
2021-06-07 16:54:05 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 16:54:05 -参数 : []
2021-06-07 16:54:05 -耗时 : 0
2021-06-07 16:54:05 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 16:54:05 -HTTP METHOD : GET
2021-06-07 16:54:05 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 16:54:05 -参数 : []
2021-06-07 16:54:05 -耗时 : 1
2021-06-07 16:54:07 -请求地址 : http://127.0.0.1:8088/login
2021-06-07 16:54:07 -HTTP METHOD : POST
2021-06-07 16:54:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 16:54:07 -参数 : [admin, Dm202007sc]
2021-06-07 16:54:07 -耗时 : 2
2021-06-07 16:54:07 -请求地址 : http://127.0.0.1:8088/index
2021-06-07 16:54:07 -HTTP METHOD : GET
2021-06-07 16:54:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 16:54:07 -参数 : [{}]
2021-06-07 16:54:07 -耗时 : 6
2021-06-07 16:54:07 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 16:54:07 -HTTP METHOD : GET
2021-06-07 16:54:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:54:07 -参数 : []
2021-06-07 16:54:07 -耗时 : 0
2021-06-07 16:54:07 -请求地址 : http://127.0.0.1:8088/oa/notify/message
2021-06-07 16:54:07 -HTTP METHOD : GET
2021-06-07 16:54:07 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 16:54:07 -参数 : []
2021-06-07 16:54:07 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 16:54:07 -请求地址 : http://127.0.0.1:8088/main
2021-06-07 16:54:07 -HTTP METHOD : GET
2021-06-07 16:54:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:54:07 -参数 : []
2021-06-07 16:54:07 -耗时 : 0
2021-06-07 16:54:19 -请求地址 : http://127.0.0.1:8088/common/generator
2021-06-07 16:54:19 -HTTP METHOD : GET
2021-06-07 16:54:19 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.generator
2021-06-07 16:54:19 -参数 : []
2021-06-07 16:54:19 -耗时 : 0
2021-06-07 16:54:20 -请求地址 : http://127.0.0.1:8088/common/generator/list
2021-06-07 16:54:20 -HTTP METHOD : GET
2021-06-07 16:54:20 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.list
2021-06-07 16:54:20 -参数 : []
2021-06-07 16:54:20 -耗时 : 11
2021-06-07 16:54:22 -请求地址 : http://127.0.0.1:8088/common/generator/edit
2021-06-07 16:54:22 -HTTP METHOD : GET
2021-06-07 16:54:22 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.edit
2021-06-07 16:54:22 -参数 : [{}]
2021-06-07 16:54:22 -耗时 : 17
2021-06-07 16:54:50 -请求地址 : http://127.0.0.1:8088/common/generator/update
2021-06-07 16:54:50 -HTTP METHOD : POST
2021-06-07 16:54:50 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.update
2021-06-07 16:54:50 -参数 : [{author=cln, email=bushuo@163.com, package=com.shiguang.mfrs, autoRemovePre=true, tablePrefix=c_}]
2021-06-07 16:54:50 -耗时 : 6
2021-06-07 16:54:53 -请求地址 : http://127.0.0.1:8088/common/generator/batchCode
2021-06-07 16:54:53 -HTTP METHOD : GET
2021-06-07 16:54:53 -CLASS_METHOD : com.shiguang.common.controller.GeneratorController.batchCode
2021-06-07 16:54:53 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@73dccece, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2215795a, ["c_mfrs"]]
2021-06-07 16:54:53 -耗时 : 82
2021-06-07 16:56:48 -请求地址 : http://localhost:8088/index
2021-06-07 16:56:48 -HTTP METHOD : GET
2021-06-07 16:56:48 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 16:56:48 -参数 : [{}]
2021-06-07 16:56:48 -耗时 : 4
2021-06-07 16:56:48 -请求地址 : http://localhost:8088/main
2021-06-07 16:56:48 -HTTP METHOD : GET
2021-06-07 16:56:48 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:56:48 -参数 : []
2021-06-07 16:56:48 -耗时 : 0
2021-06-07 16:56:48 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 16:56:48 -HTTP METHOD : GET
2021-06-07 16:56:48 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 16:56:48 -参数 : []
2021-06-07 16:56:48 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor102.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 16:56:48 -请求地址 : http://localhost:8088/main
2021-06-07 16:56:48 -HTTP METHOD : GET
2021-06-07 16:56:48 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:56:48 -参数 : []
2021-06-07 16:56:48 -耗时 : 0
2021-06-07 16:57:27 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 6796 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 16:57:27 -The following profiles are active: dev
2021-06-07 16:57:27 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 16:57:27 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 16:57:27 CST 2021]; root of context hierarchy
2021-06-07 16:57:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 16:57:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e681df8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:57:28 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3ef2e8fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:57:29 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:57:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:57:29 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 16:57:29 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 16:57:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:57:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:57:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:57:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 16:57:29 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 16:57:29 -Starting service [Tomcat]
2021-06-07 16:57:29 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 16:57:29 -Initializing Spring embedded WebApplicationContext
2021-06-07 16:57:29 -Root WebApplicationContext: initialization completed in 2036 ms
2021-06-07 16:57:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 16:57:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 16:57:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 16:57:29 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 16:57:29 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 16:57:29 -Filter xssFilter was not registered (disabled)
2021-06-07 16:57:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 16:57:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 16:57:29 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 16:57:29 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 16:57:30 -{dataSource-1} inited
2021-06-07 16:57:30 -Using default implementation for ThreadExecutor
2021-06-07 16:57:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 16:57:30 -Quartz Scheduler v.2.2.1 created.
2021-06-07 16:57:30 -RAMJobStore initialized.
2021-06-07 16:57:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 16:57:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 16:57:30 -Quartz scheduler version: 2.2.1
2021-06-07 16:57:30 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@6314df3c
2021-06-07 16:57:30 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 16:57:30 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 16:57:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 16:57:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 16:57:31 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 16:57:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 16:57:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 16:57:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 16:57:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 16:57:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 16:57:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 16:57:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 16:57:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 16:57:31 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 16:57:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 16:57:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 16:57:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 16:57:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 16:57:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 16:57:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 16:57:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 16:57:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 16:57:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 16:57:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 16:57:31 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 16:57:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 16:57:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 16:57:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 16:57:31 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 16:57:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 16:57:31 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 16:57:31 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 16:57:31 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 16:57:31 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 16:57:31 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 16:57:31 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 16:57:31 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 16:57:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 16:57:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 16:57:31 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 16:57:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 16:57:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 16:57:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 16:57:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 16:57:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 16:57:31 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 16:57:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 16:57:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 16:57:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 16:57:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 16:57:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 16:57:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 16:57:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 16:57:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 16:57:31 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 16:57:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 16:57:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 16:57:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 16:57:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 16:57:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 16:57:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 16:57:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 16:57:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 16:57:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 16:57:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 16:57:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 16:57:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 16:57:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 16:57:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 16:57:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 16:57:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 16:57:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 16:57:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 16:57:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 16:57:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 16:57:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 16:57:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 16:57:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 16:57:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 16:57:31 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 16:57:31 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 16:57:31 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 16:57:31 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 16:57:31 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 16:57:31 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 16:57:31 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 16:57:31 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 16:57:31 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 16:57:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 16:57:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 16:57:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 16:57:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 16:57:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 16:57:31 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 16:57:32 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 16:57:27 CST 2021]; root of context hierarchy
2021-06-07 16:57:32 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 16:57:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 16:57:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 16:57:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 16:57:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 16:57:32 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 16:57:32 -

Using default security password: 631d927d-3038-4c5f-84eb-7d5fcb925677

2021-06-07 16:57:32 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 16:57:32 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@3265995e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@33f2eb04, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e4b5da1, org.springframework.security.web.header.HeaderWriterFilter@7d5a0b14, org.springframework.security.web.csrf.CsrfFilter@7a274521, org.springframework.security.web.authentication.logout.LogoutFilter@52d59507, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54bc3bcf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39ead1b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4df13dd0, org.springframework.security.web.session.SessionManagementFilter@24d7657b, org.springframework.security.web.access.ExceptionTranslationFilter@19e2db7c]
2021-06-07 16:57:33 -Registering beans for JMX exposure on startup
2021-06-07 16:57:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 16:57:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 16:57:33 -Starting beans in phase 2147483647
2021-06-07 16:57:33 -Context refreshed
2021-06-07 16:57:33 -Found 1 custom documentation plugin(s)
2021-06-07 16:57:33 -Scanning for api listing references
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_1
2021-06-07 16:57:33 -Generating unique operation named: addUsingGET_1
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_1
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_1
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_2
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_3
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_1
2021-06-07 16:57:33 -Generating unique operation named: updateUsingGET_1
2021-06-07 16:57:33 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_1
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPUT_1
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 16:57:33 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 16:57:33 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 16:57:33 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 16:57:33 -Generating unique operation named: addUsingGET_2
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_2
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_2
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_4
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_5
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_2
2021-06-07 16:57:33 -Generating unique operation named: updateUsingGET_2
2021-06-07 16:57:33 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_2
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPUT_2
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 16:57:33 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 16:57:33 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 16:57:33 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_3
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_3
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_3
2021-06-07 16:57:33 -Generating unique operation named: addUsingGET_3
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_4
2021-06-07 16:57:33 -Generating unique operation named: infoUsingGET_1
2021-06-07 16:57:33 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 16:57:33 -Generating unique operation named: infoUsingPOST_1
2021-06-07 16:57:33 -Generating unique operation named: infoUsingPUT_1
2021-06-07 16:57:33 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 16:57:33 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 16:57:33 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 16:57:33 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_4
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_6
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_7
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_3
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_4
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_5
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_8
2021-06-07 16:57:33 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 16:57:33 -Generating unique operation named: addUsingGET_4
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_5
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_6
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_9
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_4
2021-06-07 16:57:33 -Generating unique operation named: treeUsingGET_1
2021-06-07 16:57:33 -Generating unique operation named: treeUsingGET_2
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_5
2021-06-07 16:57:33 -Generating unique operation named: addUsingGET_5
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_6
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_7
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_10
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_11
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_5
2021-06-07 16:57:33 -Generating unique operation named: updateUsingGET_3
2021-06-07 16:57:33 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_6
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPUT_3
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 16:57:33 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 16:57:33 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 16:57:33 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 16:57:33 -Generating unique operation named: addUsingGET_6
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_7
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_8
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_12
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_13
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_6
2021-06-07 16:57:33 -Generating unique operation named: updateUsingGET_4
2021-06-07 16:57:33 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_7
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPUT_4
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 16:57:33 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 16:57:33 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 16:57:33 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 16:57:33 -Generating unique operation named: addUsingGET_7
2021-06-07 16:57:33 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_8
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_9
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_7
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_8
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_8
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_10
2021-06-07 16:57:33 -Generating unique operation named: listUsingHEAD_1
2021-06-07 16:57:33 -Generating unique operation named: listUsingPOST_1
2021-06-07 16:57:33 -Generating unique operation named: listUsingPUT_1
2021-06-07 16:57:33 -Generating unique operation named: listUsingPATCH_1
2021-06-07 16:57:33 -Generating unique operation named: listUsingDELETE_1
2021-06-07 16:57:33 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 16:57:33 -Generating unique operation named: listUsingTRACE_1
2021-06-07 16:57:33 -Generating unique operation named: addUsingGET_8
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_9
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_11
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_14
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_15
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_9
2021-06-07 16:57:33 -Generating unique operation named: updateUsingGET_5
2021-06-07 16:57:33 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_9
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPUT_5
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 16:57:33 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 16:57:33 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 16:57:33 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 16:57:33 -Generating unique operation named: addUsingGET_9
2021-06-07 16:57:33 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 16:57:33 -Generating unique operation named: editUsingGET_10
2021-06-07 16:57:33 -Generating unique operation named: listUsingGET_12
2021-06-07 16:57:33 -Generating unique operation named: removeUsingPOST_16
2021-06-07 16:57:33 -Generating unique operation named: saveUsingPOST_10
2021-06-07 16:57:33 -Generating unique operation named: treeUsingGET_3
2021-06-07 16:57:33 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 16:57:33 -Generating unique operation named: updateUsingPOST_10
2021-06-07 16:57:33 -Starting Quartz Scheduler now
2021-06-07 16:57:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 16:57:33 -Starting...
2021-06-07 16:57:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 16:57:33 -Started.
2021-06-07 16:57:33 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 16:57:33 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 16:57:33 -Using a shared selector for servlet write/read
2021-06-07 16:57:33 -Tomcat started on port(s): 8088 (http)
2021-06-07 16:57:34 -Started BootdoApplication in 6.892 seconds (JVM running for 7.538)
2021-06-07 16:57:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 16:57:38 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 16:57:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2021-06-07 16:57:38 -Enabling session validation scheduler...
2021-06-07 16:57:38 -请求地址 : http://localhost:8088/login;JSESSIONID=4068d28b-fda2-4f15-92b4-cc44adc5d68a
2021-06-07 16:57:38 -HTTP METHOD : GET
2021-06-07 16:57:38 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 16:57:38 -参数 : []
2021-06-07 16:57:38 -耗时 : 1
2021-06-07 16:57:38 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 16:57:38 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 16:57:38 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 16:57:38 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 16:57:38 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 16:57:38 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 16:57:38 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 16:57:39 -请求地址 : http://localhost:8088/login
2021-06-07 16:57:39 -HTTP METHOD : POST
2021-06-07 16:57:39 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 16:57:39 -参数 : [admin, Dm202007sc]
2021-06-07 16:57:39 -耗时 : 6
2021-06-07 16:57:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 16:57:39 -请求地址 : http://localhost:8088/index
2021-06-07 16:57:39 -HTTP METHOD : GET
2021-06-07 16:57:39 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 16:57:39 -参数 : [{}]
2021-06-07 16:57:39 -耗时 : 19
2021-06-07 16:57:39 -请求地址 : http://localhost:8088/main
2021-06-07 16:57:39 -HTTP METHOD : GET
2021-06-07 16:57:39 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:57:39 -参数 : []
2021-06-07 16:57:39 -耗时 : 0
2021-06-07 16:57:39 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 16:57:39 -HTTP METHOD : GET
2021-06-07 16:57:39 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 16:57:39 -参数 : []
2021-06-07 16:57:39 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$d9c0101f.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 16:57:39 -请求地址 : http://localhost:8088/main
2021-06-07 16:57:39 -HTTP METHOD : GET
2021-06-07 16:57:39 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 16:57:39 -参数 : []
2021-06-07 16:57:39 -耗时 : 6
2021-06-07 16:57:46 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 16:57:46 -HTTP METHOD : GET
2021-06-07 16:57:46 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 16:57:46 -参数 : [{}]
2021-06-07 16:57:46 -耗时 : 0
2021-06-07 16:57:46 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 16:57:46 -HTTP METHOD : GET
2021-06-07 16:57:46 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 16:57:46 -参数 : [{sort=order_num}]
2021-06-07 16:57:46 -耗时 : 12
2021-06-07 16:58:07 -请求地址 : http://localhost:8088/sys/menu/edit/280
2021-06-07 16:58:07 -HTTP METHOD : GET
2021-06-07 16:58:07 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 16:58:07 -参数 : [{}, 280]
2021-06-07 16:58:07 -耗时 : 8
2021-06-07 16:58:25 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 16:58:25 -HTTP METHOD : POST
2021-06-07 16:58:25 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 16:58:25 -参数 : [MenuDO{menuId=280, parentId=279, name='制造商维护', url='/mfrs/mfrs', perms='mfrs:mfrs:mfrs', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 16:58:25 -耗时 : 29
2021-06-07 16:58:25 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 16:58:25 -HTTP METHOD : GET
2021-06-07 16:58:25 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 16:58:25 -参数 : [{sort=order_num}]
2021-06-07 16:58:25 -耗时 : 6
2021-06-07 16:58:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 13]
2021-06-07 16:58:34 -请求地址 : http://localhost:8088/sys/menu/edit/279
2021-06-07 16:58:34 -HTTP METHOD : GET
2021-06-07 16:58:34 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 16:58:34 -参数 : [{}, 279]
2021-06-07 16:58:34 -耗时 : 3
2021-06-07 16:58:44 -请求地址 : http://localhost:8088/sys/menu/edit/3
2021-06-07 16:58:44 -HTTP METHOD : GET
2021-06-07 16:58:44 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 16:58:44 -参数 : [{}, 3]
2021-06-07 16:58:44 -耗时 : 4
2021-06-07 16:58:53 -请求地址 : http://localhost:8088/sys/menu/edit/279
2021-06-07 16:58:53 -HTTP METHOD : GET
2021-06-07 16:58:53 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 16:58:53 -参数 : [{}, 279]
2021-06-07 16:58:53 -耗时 : 3
2021-06-07 16:58:55 -请求地址 : http://localhost:8088/sys/menu/edit/104
2021-06-07 16:58:55 -HTTP METHOD : GET
2021-06-07 16:58:55 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 16:58:55 -参数 : [{}, 104]
2021-06-07 16:58:55 -耗时 : 3
2021-06-07 16:59:25 -请求地址 : http://localhost:8088/sys/menu/edit/282
2021-06-07 16:59:25 -HTTP METHOD : GET
2021-06-07 16:59:25 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 16:59:25 -参数 : [{}, 282]
2021-06-07 16:59:25 -耗时 : 11
2021-06-07 16:59:31 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 16:59:31 -HTTP METHOD : POST
2021-06-07 16:59:31 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 16:59:31 -参数 : [MenuDO{menuId=282, parentId=280, name='添加', url='', perms='mfrs:mfrs:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 16:59:31 -耗时 : 27
2021-06-07 16:59:31 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 16:59:31 -HTTP METHOD : GET
2021-06-07 16:59:31 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 16:59:31 -参数 : [{sort=order_num}]
2021-06-07 16:59:31 -耗时 : 5
2021-06-07 16:59:36 -请求地址 : http://localhost:8088/sys/menu/edit/283
2021-06-07 16:59:36 -HTTP METHOD : GET
2021-06-07 16:59:36 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 16:59:36 -参数 : [{}, 283]
2021-06-07 16:59:36 -耗时 : 5
2021-06-07 16:59:52 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 16:59:52 -HTTP METHOD : POST
2021-06-07 16:59:52 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 16:59:52 -参数 : [MenuDO{menuId=283, parentId=280, name='修改', url='', perms='mfrs:mfrs:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 16:59:52 -耗时 : 32
2021-06-07 16:59:52 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 16:59:52 -HTTP METHOD : GET
2021-06-07 16:59:52 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 16:59:52 -参数 : [{sort=order_num}]
2021-06-07 16:59:52 -耗时 : 5
2021-06-07 17:00:10 -请求地址 : http://localhost:8088/sys/menu/edit/283
2021-06-07 17:00:10 -HTTP METHOD : GET
2021-06-07 17:00:10 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:00:10 -参数 : [{}, 283]
2021-06-07 17:00:10 -耗时 : 6
2021-06-07 17:00:13 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:00:13 -HTTP METHOD : POST
2021-06-07 17:00:13 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:00:13 -参数 : [MenuDO{menuId=283, parentId=280, name='修改', url='', perms='mfrs:mfrs:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:00:13 -耗时 : 41
2021-06-07 17:00:13 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:00:13 -HTTP METHOD : GET
2021-06-07 17:00:13 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:00:13 -参数 : [{sort=order_num}]
2021-06-07 17:00:13 -耗时 : 4
2021-06-07 17:00:26 -请求地址 : http://localhost:8088/sys/menu/edit/284
2021-06-07 17:00:26 -HTTP METHOD : GET
2021-06-07 17:00:26 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:00:26 -参数 : [{}, 284]
2021-06-07 17:00:26 -耗时 : 5
2021-06-07 17:00:31 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:00:31 -HTTP METHOD : POST
2021-06-07 17:00:31 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:00:31 -参数 : [MenuDO{menuId=284, parentId=280, name='删除', url='', perms='mfrs:mfrs:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:00:31 -耗时 : 28
2021-06-07 17:00:31 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:00:31 -HTTP METHOD : GET
2021-06-07 17:00:31 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:00:31 -参数 : [{sort=order_num}]
2021-06-07 17:00:31 -耗时 : 4
2021-06-07 17:00:44 -请求地址 : http://localhost:8088/sys/menu/edit/285
2021-06-07 17:00:44 -HTTP METHOD : GET
2021-06-07 17:00:44 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:00:44 -参数 : [{}, 285]
2021-06-07 17:00:44 -耗时 : 6
2021-06-07 17:00:47 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:00:47 -HTTP METHOD : POST
2021-06-07 17:00:47 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:00:47 -参数 : [MenuDO{menuId=285, parentId=280, name='批量删除', url='', perms='mfrs:mfrs:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:00:47 -耗时 : 23
2021-06-07 17:00:47 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:00:47 -HTTP METHOD : GET
2021-06-07 17:00:47 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:00:47 -参数 : [{sort=order_num}]
2021-06-07 17:00:47 -耗时 : 4
2021-06-07 17:00:51 -请求地址 : http://localhost:8088/
2021-06-07 17:00:51 -HTTP METHOD : GET
2021-06-07 17:00:51 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 17:00:51 -参数 : [{}]
2021-06-07 17:00:51 -耗时 : 1
2021-06-07 17:00:51 -请求地址 : http://localhost:8088/login
2021-06-07 17:00:51 -HTTP METHOD : GET
2021-06-07 17:00:51 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:00:51 -参数 : []
2021-06-07 17:00:51 -耗时 : 0
2021-06-07 17:00:52 -请求地址 : http://localhost:8088/login
2021-06-07 17:00:52 -HTTP METHOD : POST
2021-06-07 17:00:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:00:52 -参数 : [admin, Dm202007sc]
2021-06-07 17:00:52 -耗时 : 2
2021-06-07 17:00:52 -请求地址 : http://localhost:8088/index
2021-06-07 17:00:52 -HTTP METHOD : GET
2021-06-07 17:00:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:00:52 -参数 : [{}]
2021-06-07 17:00:52 -耗时 : 5
2021-06-07 17:00:52 -请求地址 : http://localhost:8088/main
2021-06-07 17:00:52 -HTTP METHOD : GET
2021-06-07 17:00:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:00:52 -参数 : []
2021-06-07 17:00:52 -耗时 : 0
2021-06-07 17:00:52 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:00:52 -HTTP METHOD : GET
2021-06-07 17:00:52 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:00:52 -参数 : []
2021-06-07 17:00:52 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor121.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$d9c0101f.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:00:52 -请求地址 : http://localhost:8088/main
2021-06-07 17:00:52 -HTTP METHOD : GET
2021-06-07 17:00:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:00:52 -参数 : []
2021-06-07 17:00:52 -耗时 : 1
2021-06-07 17:00:54 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:00:54 -HTTP METHOD : GET
2021-06-07 17:00:54 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:00:54 -参数 : []
2021-06-07 17:00:54 -耗时 : 0
2021-06-07 17:00:54 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:00:54 -HTTP METHOD : GET
2021-06-07 17:00:54 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:00:54 -参数 : [{limit=10, offset=0}]
2021-06-07 17:00:54 -耗时 : 9
2021-06-07 17:00:59 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:00:59 -HTTP METHOD : GET
2021-06-07 17:00:59 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:00:59 -参数 : []
2021-06-07 17:00:59 -耗时 : 0
2021-06-07 17:01:18 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:01:18 -HTTP METHOD : GET
2021-06-07 17:01:18 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:01:18 -参数 : []
2021-06-07 17:01:18 -耗时 : 0
2021-06-07 17:01:18 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:01:18 -HTTP METHOD : GET
2021-06-07 17:01:18 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:01:18 -参数 : [{limit=10, offset=0}]
2021-06-07 17:01:18 -耗时 : 2
2021-06-07 17:03:32 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 5344 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 17:03:32 -The following profiles are active: dev
2021-06-07 17:03:33 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 17:03:33 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:03:33 CST 2021]; root of context hierarchy
2021-06-07 17:03:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 17:03:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c7aac13c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:03:34 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b8358c3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:03:34 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:03:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:03:34 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 17:03:34 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 17:03:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:03:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:03:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:03:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:03:34 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 17:03:35 -Starting service [Tomcat]
2021-06-07 17:03:35 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 17:03:35 -Initializing Spring embedded WebApplicationContext
2021-06-07 17:03:35 -Root WebApplicationContext: initialization completed in 2006 ms
2021-06-07 17:03:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 17:03:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 17:03:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 17:03:35 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 17:03:35 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 17:03:35 -Filter xssFilter was not registered (disabled)
2021-06-07 17:03:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 17:03:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 17:03:35 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 17:03:35 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 17:03:35 -{dataSource-1} inited
2021-06-07 17:03:36 -Using default implementation for ThreadExecutor
2021-06-07 17:03:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 17:03:36 -Quartz Scheduler v.2.2.1 created.
2021-06-07 17:03:36 -RAMJobStore initialized.
2021-06-07 17:03:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 17:03:36 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 17:03:36 -Quartz scheduler version: 2.2.1
2021-06-07 17:03:36 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@350323a0
2021-06-07 17:03:36 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 17:03:36 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 17:03:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 17:03:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 17:03:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 17:03:36 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 17:03:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 17:03:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 17:03:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 17:03:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 17:03:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 17:03:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:03:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 17:03:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 17:03:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 17:03:36 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 17:03:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 17:03:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 17:03:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 17:03:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:03:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 17:03:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 17:03:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:03:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 17:03:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:03:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 17:03:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 17:03:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 17:03:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 17:03:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 17:03:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 17:03:36 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 17:03:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:03:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 17:03:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 17:03:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 17:03:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 17:03:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 17:03:36 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:03:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:03:36 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 17:03:37 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 17:03:37 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 17:03:37 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 17:03:37 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:03:37 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:37 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:03:37 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 17:03:37 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 17:03:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 17:03:37 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:03:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:03:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 17:03:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 17:03:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 17:03:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 17:03:37 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 17:03:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 17:03:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 17:03:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 17:03:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 17:03:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 17:03:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 17:03:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 17:03:37 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 17:03:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 17:03:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 17:03:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 17:03:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 17:03:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 17:03:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 17:03:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 17:03:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 17:03:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 17:03:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 17:03:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 17:03:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 17:03:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 17:03:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 17:03:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 17:03:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 17:03:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 17:03:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 17:03:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 17:03:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 17:03:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 17:03:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:03:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 17:03:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:03:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:03:37 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 17:03:37 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 17:03:37 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 17:03:37 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 17:03:37 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:03:37 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 17:03:37 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 17:03:37 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:03:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:03:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 17:03:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 17:03:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 17:03:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 17:03:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 17:03:37 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 17:03:37 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:03:33 CST 2021]; root of context hierarchy
2021-06-07 17:03:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:03:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:03:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:03:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 17:03:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:03:38 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 17:03:38 -

Using default security password: cba0134b-cce1-4325-903c-01784f3510ec

2021-06-07 17:03:38 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 17:03:38 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@388e4c25, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12532e37, org.springframework.security.web.context.SecurityContextPersistenceFilter@6a0e97fc, org.springframework.security.web.header.HeaderWriterFilter@96be1ae, org.springframework.security.web.csrf.CsrfFilter@af3295f, org.springframework.security.web.authentication.logout.LogoutFilter@4552f905, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@33f2eb04, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@673a9db4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@401b67a9, org.springframework.security.web.session.SessionManagementFilter@c0004b7, org.springframework.security.web.access.ExceptionTranslationFilter@d3d5094]
2021-06-07 17:03:38 -Registering beans for JMX exposure on startup
2021-06-07 17:03:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 17:03:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 17:03:38 -Starting beans in phase 2147483647
2021-06-07 17:03:38 -Context refreshed
2021-06-07 17:03:38 -Found 1 custom documentation plugin(s)
2021-06-07 17:03:38 -Scanning for api listing references
2021-06-07 17:03:38 -Generating unique operation named: removeUsingPOST_1
2021-06-07 17:03:38 -Generating unique operation named: addUsingGET_1
2021-06-07 17:03:38 -Generating unique operation named: editUsingGET_1
2021-06-07 17:03:38 -Generating unique operation named: listUsingGET_1
2021-06-07 17:03:38 -Generating unique operation named: removeUsingPOST_2
2021-06-07 17:03:38 -Generating unique operation named: removeUsingPOST_3
2021-06-07 17:03:38 -Generating unique operation named: saveUsingPOST_1
2021-06-07 17:03:38 -Generating unique operation named: updateUsingGET_1
2021-06-07 17:03:38 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 17:03:38 -Generating unique operation named: updateUsingPOST_1
2021-06-07 17:03:38 -Generating unique operation named: updateUsingPUT_1
2021-06-07 17:03:38 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 17:03:38 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 17:03:38 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 17:03:38 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 17:03:38 -Generating unique operation named: addUsingGET_2
2021-06-07 17:03:38 -Generating unique operation named: editUsingGET_2
2021-06-07 17:03:38 -Generating unique operation named: listUsingGET_2
2021-06-07 17:03:38 -Generating unique operation named: removeUsingPOST_4
2021-06-07 17:03:38 -Generating unique operation named: removeUsingPOST_5
2021-06-07 17:03:39 -Generating unique operation named: saveUsingPOST_2
2021-06-07 17:03:39 -Generating unique operation named: updateUsingGET_2
2021-06-07 17:03:39 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPOST_2
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPUT_2
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 17:03:39 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 17:03:39 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 17:03:39 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 17:03:39 -Generating unique operation named: editUsingGET_3
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_3
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPOST_3
2021-06-07 17:03:39 -Generating unique operation named: addUsingGET_3
2021-06-07 17:03:39 -Generating unique operation named: editUsingGET_4
2021-06-07 17:03:39 -Generating unique operation named: infoUsingGET_1
2021-06-07 17:03:39 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 17:03:39 -Generating unique operation named: infoUsingPOST_1
2021-06-07 17:03:39 -Generating unique operation named: infoUsingPUT_1
2021-06-07 17:03:39 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 17:03:39 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 17:03:39 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 17:03:39 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_4
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_6
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_7
2021-06-07 17:03:39 -Generating unique operation named: saveUsingPOST_3
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPOST_4
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_5
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_8
2021-06-07 17:03:39 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 17:03:39 -Generating unique operation named: addUsingGET_4
2021-06-07 17:03:39 -Generating unique operation named: editUsingGET_5
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_6
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_9
2021-06-07 17:03:39 -Generating unique operation named: saveUsingPOST_4
2021-06-07 17:03:39 -Generating unique operation named: treeUsingGET_1
2021-06-07 17:03:39 -Generating unique operation named: treeUsingGET_2
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPOST_5
2021-06-07 17:03:39 -Generating unique operation named: addUsingGET_5
2021-06-07 17:03:39 -Generating unique operation named: editUsingGET_6
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_7
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_10
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_11
2021-06-07 17:03:39 -Generating unique operation named: saveUsingPOST_5
2021-06-07 17:03:39 -Generating unique operation named: updateUsingGET_3
2021-06-07 17:03:39 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPOST_6
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPUT_3
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 17:03:39 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 17:03:39 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 17:03:39 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 17:03:39 -Generating unique operation named: addUsingGET_6
2021-06-07 17:03:39 -Generating unique operation named: editUsingGET_7
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_8
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_12
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_13
2021-06-07 17:03:39 -Generating unique operation named: saveUsingPOST_6
2021-06-07 17:03:39 -Generating unique operation named: updateUsingGET_4
2021-06-07 17:03:39 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPOST_7
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPUT_4
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 17:03:39 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 17:03:39 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 17:03:39 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 17:03:39 -Generating unique operation named: addUsingGET_7
2021-06-07 17:03:39 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 17:03:39 -Generating unique operation named: editUsingGET_8
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_9
2021-06-07 17:03:39 -Generating unique operation named: saveUsingPOST_7
2021-06-07 17:03:39 -Generating unique operation named: saveUsingPOST_8
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPOST_8
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_10
2021-06-07 17:03:39 -Generating unique operation named: listUsingHEAD_1
2021-06-07 17:03:39 -Generating unique operation named: listUsingPOST_1
2021-06-07 17:03:39 -Generating unique operation named: listUsingPUT_1
2021-06-07 17:03:39 -Generating unique operation named: listUsingPATCH_1
2021-06-07 17:03:39 -Generating unique operation named: listUsingDELETE_1
2021-06-07 17:03:39 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 17:03:39 -Generating unique operation named: listUsingTRACE_1
2021-06-07 17:03:39 -Generating unique operation named: addUsingGET_8
2021-06-07 17:03:39 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 17:03:39 -Generating unique operation named: editUsingGET_9
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_11
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_14
2021-06-07 17:03:39 -Generating unique operation named: saveUsingPOST_9
2021-06-07 17:03:39 -Generating unique operation named: treeUsingGET_3
2021-06-07 17:03:39 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPOST_9
2021-06-07 17:03:39 -Generating unique operation named: addUsingGET_9
2021-06-07 17:03:39 -Generating unique operation named: editUsingGET_10
2021-06-07 17:03:39 -Generating unique operation named: listUsingGET_12
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_15
2021-06-07 17:03:39 -Generating unique operation named: removeUsingPOST_16
2021-06-07 17:03:39 -Generating unique operation named: saveUsingPOST_10
2021-06-07 17:03:39 -Generating unique operation named: updateUsingGET_5
2021-06-07 17:03:39 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPOST_10
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPUT_5
2021-06-07 17:03:39 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 17:03:39 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 17:03:39 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 17:03:39 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 17:03:39 -Starting Quartz Scheduler now
2021-06-07 17:03:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 17:03:39 -Starting...
2021-06-07 17:03:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 17:03:39 -Started.
2021-06-07 17:03:39 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 17:03:39 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 17:03:39 -Using a shared selector for servlet write/read
2021-06-07 17:03:39 -Tomcat started on port(s): 8088 (http)
2021-06-07 17:03:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 17:03:39 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 17:03:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2021-06-07 17:03:39 -Enabling session validation scheduler...
2021-06-07 17:03:39 -Started BootdoApplication in 7.04 seconds (JVM running for 7.698)
2021-06-07 17:03:39 -请求地址 : http://localhost:8088/login;JSESSIONID=5a26d2e3-2fe8-487c-ae29-02ac2ac7cae0
2021-06-07 17:03:39 -HTTP METHOD : GET
2021-06-07 17:03:39 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:03:39 -参数 : []
2021-06-07 17:03:39 -耗时 : 2
2021-06-07 17:03:39 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 17:03:39 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 17:03:39 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 17:03:39 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 17:03:39 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 17:03:39 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XHTML
[THYMELEAF]     * HTML5
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 17:03:39 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 17:03:46 -请求地址 : http://localhost:8088/login
2021-06-07 17:03:46 -HTTP METHOD : POST
2021-06-07 17:03:46 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:03:46 -参数 : [admin, Dm202007sc]
2021-06-07 17:03:46 -耗时 : 6
2021-06-07 17:03:46 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 17:03:46 -请求地址 : http://localhost:8088/index
2021-06-07 17:03:46 -HTTP METHOD : GET
2021-06-07 17:03:46 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:03:46 -参数 : [{}]
2021-06-07 17:03:46 -耗时 : 20
2021-06-07 17:03:46 -请求地址 : http://localhost:8088/main
2021-06-07 17:03:46 -HTTP METHOD : GET
2021-06-07 17:03:46 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:03:46 -参数 : []
2021-06-07 17:03:46 -耗时 : 0
2021-06-07 17:03:46 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:03:46 -HTTP METHOD : GET
2021-06-07 17:03:46 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:03:46 -参数 : []
2021-06-07 17:03:46 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$d024e3c0.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:03:46 -请求地址 : http://localhost:8088/main
2021-06-07 17:03:46 -HTTP METHOD : GET
2021-06-07 17:03:46 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:03:46 -参数 : []
2021-06-07 17:03:46 -耗时 : 2
2021-06-07 17:03:48 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:03:48 -HTTP METHOD : GET
2021-06-07 17:03:48 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:03:48 -参数 : []
2021-06-07 17:03:48 -耗时 : 1
2021-06-07 17:03:48 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:03:48 -HTTP METHOD : GET
2021-06-07 17:03:48 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:03:48 -参数 : [{limit=10, offset=0}]
2021-06-07 17:03:48 -耗时 : 11
2021-06-07 17:04:04 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:04:04 -HTTP METHOD : GET
2021-06-07 17:04:04 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:04:04 -参数 : []
2021-06-07 17:04:04 -耗时 : 0
2021-06-07 17:04:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 11]
2021-06-07 17:06:07 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:06:07 -HTTP METHOD : POST
2021-06-07 17:06:07 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:06:07 -参数 : [com.shiguang.mfrs.domain.MfrsDO@1529c9a9]
2021-06-07 17:06:07 -{conn-10001, pstmt-20008} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:06:07 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2021-06-07 17:06:07 -SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2021-06-07 17:06:07 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2021-06-07 17:06:10 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:06:10 -HTTP METHOD : POST
2021-06-07 17:06:10 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:06:10 -参数 : [com.shiguang.mfrs.domain.MfrsDO@20ced562]
2021-06-07 17:06:10 -{conn-10001, pstmt-20009} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:06:10 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2021-06-07 17:06:17 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:06:17 -HTTP METHOD : POST
2021-06-07 17:06:17 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:06:17 -参数 : [com.shiguang.mfrs.domain.MfrsDO@5ca18c50]
2021-06-07 17:06:17 -{conn-10001, pstmt-20010} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:06:17 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2021-06-07 17:06:22 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:06:22 -HTTP METHOD : POST
2021-06-07 17:06:22 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:06:22 -参数 : [com.shiguang.mfrs.domain.MfrsDO@101cdf43]
2021-06-07 17:06:22 -{conn-10001, pstmt-20011} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:06:22 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2021-06-07 17:06:23 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:06:23 -HTTP METHOD : POST
2021-06-07 17:06:23 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:06:23 -参数 : [com.shiguang.mfrs.domain.MfrsDO@5d6b5497]
2021-06-07 17:06:23 -{conn-10001, pstmt-20012} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:06:23 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2021-06-07 17:06:30 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:06:30 -HTTP METHOD : POST
2021-06-07 17:06:30 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:06:30 -参数 : [com.shiguang.mfrs.domain.MfrsDO@78a556ab]
2021-06-07 17:06:30 -{conn-10001, pstmt-20013} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:06:30 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2021-06-07 17:07:01 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:07:01 -HTTP METHOD : POST
2021-06-07 17:07:01 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:07:01 -参数 : [com.shiguang.mfrs.domain.MfrsDO@2f2edf68]
2021-06-07 17:07:01 -{conn-10001, pstmt-20014} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:07:01 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2021-06-07 17:07:05 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:07:05 -HTTP METHOD : POST
2021-06-07 17:07:05 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:07:05 -参数 : [com.shiguang.mfrs.domain.MfrsDO@3447b069]
2021-06-07 17:07:05 -{conn-10001, pstmt-20015} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor106.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor104.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:07:05 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor104.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$2671e46b.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor106.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 109 common frames omitted
2021-06-07 17:07:18 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 9360 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 17:07:18 -The following profiles are active: dev
2021-06-07 17:07:19 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 17:07:19 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:07:19 CST 2021]; root of context hierarchy
2021-06-07 17:07:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 17:07:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43105862] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:07:20 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$339b2364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:07:20 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:07:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:07:20 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 17:07:20 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 17:07:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:07:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:07:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:07:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:07:20 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 17:07:20 -Starting service [Tomcat]
2021-06-07 17:07:20 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 17:07:21 -Initializing Spring embedded WebApplicationContext
2021-06-07 17:07:21 -Root WebApplicationContext: initialization completed in 2012 ms
2021-06-07 17:07:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 17:07:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 17:07:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 17:07:21 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 17:07:21 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 17:07:21 -Filter xssFilter was not registered (disabled)
2021-06-07 17:07:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 17:07:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 17:07:21 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 17:07:21 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 17:07:21 -{dataSource-1} inited
2021-06-07 17:07:22 -Using default implementation for ThreadExecutor
2021-06-07 17:07:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 17:07:22 -Quartz Scheduler v.2.2.1 created.
2021-06-07 17:07:22 -RAMJobStore initialized.
2021-06-07 17:07:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 17:07:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 17:07:22 -Quartz scheduler version: 2.2.1
2021-06-07 17:07:22 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@740b9a50
2021-06-07 17:07:22 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 17:07:22 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 17:07:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 17:07:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 17:07:22 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 17:07:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 17:07:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 17:07:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 17:07:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 17:07:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 17:07:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 17:07:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 17:07:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 17:07:22 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 17:07:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 17:07:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 17:07:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 17:07:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 17:07:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:07:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:07:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 17:07:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 17:07:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 17:07:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 17:07:22 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 17:07:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 17:07:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 17:07:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 17:07:22 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:07:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:07:22 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 17:07:22 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 17:07:22 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 17:07:22 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 17:07:22 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:07:22 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:07:22 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 17:07:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 17:07:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 17:07:22 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:07:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:07:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 17:07:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 17:07:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 17:07:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 17:07:22 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 17:07:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 17:07:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 17:07:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 17:07:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 17:07:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 17:07:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 17:07:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 17:07:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 17:07:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 17:07:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 17:07:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 17:07:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 17:07:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 17:07:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 17:07:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 17:07:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 17:07:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 17:07:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 17:07:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 17:07:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 17:07:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 17:07:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 17:07:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 17:07:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 17:07:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 17:07:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 17:07:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 17:07:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 17:07:22 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 17:07:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:07:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:07:22 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 17:07:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:07:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 17:07:22 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 17:07:22 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 17:07:22 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 17:07:22 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:07:22 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 17:07:22 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 17:07:22 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:07:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:07:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 17:07:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 17:07:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 17:07:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 17:07:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 17:07:23 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 17:07:23 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:07:19 CST 2021]; root of context hierarchy
2021-06-07 17:07:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:07:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:07:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:07:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 17:07:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:07:24 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 17:07:24 -

Using default security password: 40363b61-1ffd-44ec-b5a1-f3b31bd6e46e

2021-06-07 17:07:24 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 17:07:24 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@fb2c2f3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@148fca83, org.springframework.security.web.context.SecurityContextPersistenceFilter@b8142f4, org.springframework.security.web.header.HeaderWriterFilter@38b54694, org.springframework.security.web.csrf.CsrfFilter@3245efdb, org.springframework.security.web.authentication.logout.LogoutFilter@4e3ee457, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50b38342, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a8b42a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d2a8819, org.springframework.security.web.session.SessionManagementFilter@45539bd8, org.springframework.security.web.access.ExceptionTranslationFilter@77e730bd]
2021-06-07 17:07:24 -Registering beans for JMX exposure on startup
2021-06-07 17:07:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 17:07:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 17:07:24 -Starting beans in phase 2147483647
2021-06-07 17:07:24 -Context refreshed
2021-06-07 17:07:24 -Found 1 custom documentation plugin(s)
2021-06-07 17:07:24 -Scanning for api listing references
2021-06-07 17:07:24 -Generating unique operation named: removeUsingPOST_1
2021-06-07 17:07:24 -Generating unique operation named: addUsingGET_1
2021-06-07 17:07:24 -Generating unique operation named: editUsingGET_1
2021-06-07 17:07:24 -Generating unique operation named: listUsingGET_1
2021-06-07 17:07:24 -Generating unique operation named: removeUsingPOST_2
2021-06-07 17:07:24 -Generating unique operation named: removeUsingPOST_3
2021-06-07 17:07:24 -Generating unique operation named: saveUsingPOST_1
2021-06-07 17:07:24 -Generating unique operation named: updateUsingGET_1
2021-06-07 17:07:24 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 17:07:24 -Generating unique operation named: updateUsingPOST_1
2021-06-07 17:07:24 -Generating unique operation named: updateUsingPUT_1
2021-06-07 17:07:24 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 17:07:24 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 17:07:24 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 17:07:24 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 17:07:24 -Generating unique operation named: addUsingGET_2
2021-06-07 17:07:24 -Generating unique operation named: editUsingGET_2
2021-06-07 17:07:24 -Generating unique operation named: listUsingGET_2
2021-06-07 17:07:24 -Generating unique operation named: removeUsingPOST_4
2021-06-07 17:07:24 -Generating unique operation named: removeUsingPOST_5
2021-06-07 17:07:24 -Generating unique operation named: saveUsingPOST_2
2021-06-07 17:07:24 -Generating unique operation named: updateUsingGET_2
2021-06-07 17:07:24 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 17:07:24 -Generating unique operation named: updateUsingPOST_2
2021-06-07 17:07:24 -Generating unique operation named: updateUsingPUT_2
2021-06-07 17:07:24 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 17:07:24 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 17:07:24 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 17:07:24 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 17:07:24 -Generating unique operation named: editUsingGET_3
2021-06-07 17:07:24 -Generating unique operation named: listUsingGET_3
2021-06-07 17:07:24 -Generating unique operation named: updateUsingPOST_3
2021-06-07 17:07:24 -Generating unique operation named: addUsingGET_3
2021-06-07 17:07:24 -Generating unique operation named: editUsingGET_4
2021-06-07 17:07:24 -Generating unique operation named: infoUsingGET_1
2021-06-07 17:07:24 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 17:07:24 -Generating unique operation named: infoUsingPOST_1
2021-06-07 17:07:24 -Generating unique operation named: infoUsingPUT_1
2021-06-07 17:07:24 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 17:07:24 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 17:07:24 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 17:07:24 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 17:07:24 -Generating unique operation named: listUsingGET_4
2021-06-07 17:07:24 -Generating unique operation named: removeUsingPOST_6
2021-06-07 17:07:24 -Generating unique operation named: removeUsingPOST_7
2021-06-07 17:07:24 -Generating unique operation named: saveUsingPOST_3
2021-06-07 17:07:24 -Generating unique operation named: updateUsingPOST_4
2021-06-07 17:07:24 -Generating unique operation named: listUsingGET_5
2021-06-07 17:07:24 -Generating unique operation named: removeUsingPOST_8
2021-06-07 17:07:24 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 17:07:24 -Generating unique operation named: addUsingGET_4
2021-06-07 17:07:24 -Generating unique operation named: editUsingGET_5
2021-06-07 17:07:24 -Generating unique operation named: listUsingGET_6
2021-06-07 17:07:24 -Generating unique operation named: removeUsingPOST_9
2021-06-07 17:07:24 -Generating unique operation named: saveUsingPOST_4
2021-06-07 17:07:25 -Generating unique operation named: treeUsingGET_1
2021-06-07 17:07:25 -Generating unique operation named: treeUsingGET_2
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPOST_5
2021-06-07 17:07:25 -Generating unique operation named: addUsingGET_5
2021-06-07 17:07:25 -Generating unique operation named: editUsingGET_6
2021-06-07 17:07:25 -Generating unique operation named: listUsingGET_7
2021-06-07 17:07:25 -Generating unique operation named: removeUsingPOST_10
2021-06-07 17:07:25 -Generating unique operation named: removeUsingPOST_11
2021-06-07 17:07:25 -Generating unique operation named: saveUsingPOST_5
2021-06-07 17:07:25 -Generating unique operation named: updateUsingGET_3
2021-06-07 17:07:25 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPOST_6
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPUT_3
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 17:07:25 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 17:07:25 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 17:07:25 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 17:07:25 -Generating unique operation named: addUsingGET_6
2021-06-07 17:07:25 -Generating unique operation named: editUsingGET_7
2021-06-07 17:07:25 -Generating unique operation named: listUsingGET_8
2021-06-07 17:07:25 -Generating unique operation named: removeUsingPOST_12
2021-06-07 17:07:25 -Generating unique operation named: removeUsingPOST_13
2021-06-07 17:07:25 -Generating unique operation named: saveUsingPOST_6
2021-06-07 17:07:25 -Generating unique operation named: updateUsingGET_4
2021-06-07 17:07:25 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPOST_7
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPUT_4
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 17:07:25 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 17:07:25 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 17:07:25 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 17:07:25 -Generating unique operation named: addUsingGET_7
2021-06-07 17:07:25 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 17:07:25 -Generating unique operation named: editUsingGET_8
2021-06-07 17:07:25 -Generating unique operation named: listUsingGET_9
2021-06-07 17:07:25 -Generating unique operation named: saveUsingPOST_7
2021-06-07 17:07:25 -Generating unique operation named: saveUsingPOST_8
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPOST_8
2021-06-07 17:07:25 -Generating unique operation named: listUsingGET_10
2021-06-07 17:07:25 -Generating unique operation named: listUsingHEAD_1
2021-06-07 17:07:25 -Generating unique operation named: listUsingPOST_1
2021-06-07 17:07:25 -Generating unique operation named: listUsingPUT_1
2021-06-07 17:07:25 -Generating unique operation named: listUsingPATCH_1
2021-06-07 17:07:25 -Generating unique operation named: listUsingDELETE_1
2021-06-07 17:07:25 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 17:07:25 -Generating unique operation named: listUsingTRACE_1
2021-06-07 17:07:25 -Generating unique operation named: addUsingGET_8
2021-06-07 17:07:25 -Generating unique operation named: editUsingGET_9
2021-06-07 17:07:25 -Generating unique operation named: listUsingGET_11
2021-06-07 17:07:25 -Generating unique operation named: removeUsingPOST_14
2021-06-07 17:07:25 -Generating unique operation named: removeUsingPOST_15
2021-06-07 17:07:25 -Generating unique operation named: saveUsingPOST_9
2021-06-07 17:07:25 -Generating unique operation named: updateUsingGET_5
2021-06-07 17:07:25 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPOST_9
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPUT_5
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 17:07:25 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 17:07:25 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 17:07:25 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 17:07:25 -Generating unique operation named: addUsingGET_9
2021-06-07 17:07:25 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 17:07:25 -Generating unique operation named: editUsingGET_10
2021-06-07 17:07:25 -Generating unique operation named: listUsingGET_12
2021-06-07 17:07:25 -Generating unique operation named: removeUsingPOST_16
2021-06-07 17:07:25 -Generating unique operation named: saveUsingPOST_10
2021-06-07 17:07:25 -Generating unique operation named: treeUsingGET_3
2021-06-07 17:07:25 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 17:07:25 -Generating unique operation named: updateUsingPOST_10
2021-06-07 17:07:25 -Starting Quartz Scheduler now
2021-06-07 17:07:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 17:07:25 -Starting...
2021-06-07 17:07:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 17:07:25 -Started.
2021-06-07 17:07:25 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 17:07:25 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 17:07:25 -Using a shared selector for servlet write/read
2021-06-07 17:07:25 -Tomcat started on port(s): 8088 (http)
2021-06-07 17:07:25 -Started BootdoApplication in 6.903 seconds (JVM running for 7.556)
2021-06-07 17:07:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 17:07:28 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 17:07:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2021-06-07 17:07:29 -Enabling session validation scheduler...
2021-06-07 17:07:29 -请求地址 : http://localhost:8088/login;JSESSIONID=d1a80ca1-608a-4629-a7f6-fe5a0ece3e42
2021-06-07 17:07:29 -HTTP METHOD : GET
2021-06-07 17:07:29 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:07:29 -参数 : []
2021-06-07 17:07:29 -耗时 : 1
2021-06-07 17:07:29 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 17:07:29 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 17:07:29 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 17:07:29 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 17:07:29 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 17:07:29 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 17:07:29 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 17:07:29 -请求地址 : http://localhost:8088/login;JSESSIONID=d1a80ca1-608a-4629-a7f6-fe5a0ece3e42
2021-06-07 17:07:29 -HTTP METHOD : GET
2021-06-07 17:07:29 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:07:29 -参数 : []
2021-06-07 17:07:29 -耗时 : 0
2021-06-07 17:07:30 -请求地址 : http://localhost:8088/login
2021-06-07 17:07:30 -HTTP METHOD : POST
2021-06-07 17:07:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:07:30 -参数 : [admin, Dm202007sc]
2021-06-07 17:07:30 -耗时 : 6
2021-06-07 17:07:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 17:07:30 -请求地址 : http://localhost:8088/index
2021-06-07 17:07:30 -HTTP METHOD : GET
2021-06-07 17:07:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:07:30 -参数 : [{}]
2021-06-07 17:07:30 -耗时 : 21
2021-06-07 17:07:30 -请求地址 : http://localhost:8088/main
2021-06-07 17:07:30 -HTTP METHOD : GET
2021-06-07 17:07:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:07:30 -参数 : []
2021-06-07 17:07:30 -耗时 : 0
2021-06-07 17:07:30 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:07:30 -HTTP METHOD : GET
2021-06-07 17:07:30 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:07:30 -参数 : []
2021-06-07 17:07:30 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:07:30 -请求地址 : http://localhost:8088/main
2021-06-07 17:07:30 -HTTP METHOD : GET
2021-06-07 17:07:30 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:07:30 -参数 : []
2021-06-07 17:07:30 -耗时 : 0
2021-06-07 17:07:33 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:07:33 -HTTP METHOD : GET
2021-06-07 17:07:33 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:07:33 -参数 : []
2021-06-07 17:07:33 -耗时 : 0
2021-06-07 17:07:33 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:07:33 -HTTP METHOD : GET
2021-06-07 17:07:33 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:07:33 -参数 : [{limit=10, offset=0}]
2021-06-07 17:07:33 -耗时 : 10
2021-06-07 17:07:35 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:07:35 -HTTP METHOD : GET
2021-06-07 17:07:35 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:07:35 -参数 : []
2021-06-07 17:07:35 -耗时 : 0
2021-06-07 17:07:52 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:07:52 -HTTP METHOD : POST
2021-06-07 17:07:52 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:07:52 -参数 : [com.shiguang.mfrs.domain.MfrsDO@1715dbe3]
2021-06-07 17:07:52 -{conn-10002, pstmt-20009} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$877a185.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:07:52 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2021-06-07 17:07:52 -SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2021-06-07 17:07:52 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$877a185.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2021-06-07 17:08:23 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 13]
2021-06-07 17:09:58 -请求地址 : http://localhost:8088/index
2021-06-07 17:09:58 -HTTP METHOD : GET
2021-06-07 17:09:58 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:09:58 -参数 : [{}]
2021-06-07 17:09:58 -耗时 : 9
2021-06-07 17:09:58 -请求地址 : http://localhost:8088/main
2021-06-07 17:09:58 -HTTP METHOD : GET
2021-06-07 17:09:58 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:09:58 -参数 : []
2021-06-07 17:09:58 -耗时 : 0
2021-06-07 17:09:58 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:09:58 -HTTP METHOD : GET
2021-06-07 17:09:58 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:09:58 -参数 : []
2021-06-07 17:09:58 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:09:58 -请求地址 : http://localhost:8088/main
2021-06-07 17:09:58 -HTTP METHOD : GET
2021-06-07 17:09:58 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:09:58 -参数 : []
2021-06-07 17:09:58 -耗时 : 0
2021-06-07 17:10:02 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:10:02 -HTTP METHOD : GET
2021-06-07 17:10:02 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:10:02 -参数 : []
2021-06-07 17:10:02 -耗时 : 0
2021-06-07 17:10:02 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:10:02 -HTTP METHOD : GET
2021-06-07 17:10:02 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:10:02 -参数 : [{limit=10, offset=0}]
2021-06-07 17:10:02 -耗时 : 2
2021-06-07 17:10:03 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:10:03 -HTTP METHOD : GET
2021-06-07 17:10:03 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:10:03 -参数 : []
2021-06-07 17:10:03 -耗时 : 0
2021-06-07 17:11:02 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 1880 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 17:11:02 -The following profiles are active: dev
2021-06-07 17:11:02 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 17:11:02 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:11:02 CST 2021]; root of context hierarchy
2021-06-07 17:11:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 17:11:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43105862] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:04 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$339b2364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:04 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:04 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 17:11:04 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 17:11:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:05 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 17:11:05 -Starting service [Tomcat]
2021-06-07 17:11:05 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 17:11:05 -Initializing Spring embedded WebApplicationContext
2021-06-07 17:11:05 -Root WebApplicationContext: initialization completed in 2090 ms
2021-06-07 17:11:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 17:11:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 17:11:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 17:11:05 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 17:11:05 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 17:11:05 -Filter xssFilter was not registered (disabled)
2021-06-07 17:11:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 17:11:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 17:11:05 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 17:11:05 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 17:11:05 -{dataSource-1} inited
2021-06-07 17:11:06 -Using default implementation for ThreadExecutor
2021-06-07 17:11:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 17:11:06 -Quartz Scheduler v.2.2.1 created.
2021-06-07 17:11:06 -RAMJobStore initialized.
2021-06-07 17:11:06 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 17:11:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 17:11:06 -Quartz scheduler version: 2.2.1
2021-06-07 17:11:06 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@740b9a50
2021-06-07 17:11:06 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 17:11:06 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 17:11:06 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 17:11:06 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 17:11:06 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 17:11:06 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 17:11:06 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:06 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 17:11:06 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 17:11:06 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 17:11:06 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 17:11:06 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:06 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 17:11:06 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 17:11:06 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 17:11:06 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 17:11:06 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 17:11:06 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:06 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 17:11:06 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 17:11:06 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:06 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 17:11:06 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 17:11:06 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:06 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 17:11:06 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:11:06 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 17:11:06 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 17:11:06 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:11:06 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 17:11:06 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 17:11:06 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 17:11:06 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 17:11:06 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:06 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 17:11:06 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 17:11:06 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:06 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 17:11:06 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 17:11:06 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 17:11:06 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 17:11:06 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:06 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 17:11:06 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:11:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:11:06 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 17:11:07 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 17:11:07 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 17:11:07 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 17:11:07 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:11:07 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:07 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:11:07 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 17:11:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 17:11:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 17:11:07 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:11:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:11:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 17:11:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 17:11:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 17:11:07 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 17:11:07 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 17:11:07 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 17:11:07 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 17:11:07 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 17:11:07 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 17:11:07 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 17:11:07 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 17:11:07 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 17:11:07 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 17:11:07 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 17:11:07 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 17:11:07 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:07 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 17:11:07 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 17:11:07 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 17:11:07 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 17:11:07 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 17:11:07 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 17:11:07 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 17:11:07 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 17:11:07 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 17:11:07 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 17:11:07 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 17:11:07 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 17:11:07 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 17:11:07 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:07 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 17:11:07 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:07 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 17:11:07 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 17:11:07 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 17:11:07 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 17:11:07 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:11:07 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:11:07 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 17:11:07 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 17:11:07 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:11:07 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 17:11:07 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 17:11:07 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 17:11:07 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 17:11:07 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:07 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 17:11:07 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 17:11:07 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:11:07 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:11:07 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 17:11:07 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 17:11:07 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 17:11:07 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 17:11:07 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 17:11:07 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 17:11:07 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:11:02 CST 2021]; root of context hierarchy
2021-06-07 17:11:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:11:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:11:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:11:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 17:11:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:11:08 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 17:11:08 -

Using default security password: 3ff0c877-0526-476a-824d-291398e0d854

2021-06-07 17:11:08 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 17:11:08 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@72585e83, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b64bf61, org.springframework.security.web.context.SecurityContextPersistenceFilter@3265995e, org.springframework.security.web.header.HeaderWriterFilter@27ec74a3, org.springframework.security.web.csrf.CsrfFilter@6f428e6e, org.springframework.security.web.authentication.logout.LogoutFilter@148fca83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15ad5acb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57a5b03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d5bb5c, org.springframework.security.web.session.SessionManagementFilter@b8142f4, org.springframework.security.web.access.ExceptionTranslationFilter@38b54694]
2021-06-07 17:11:08 -Registering beans for JMX exposure on startup
2021-06-07 17:11:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 17:11:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 17:11:08 -Starting beans in phase 2147483647
2021-06-07 17:11:08 -Context refreshed
2021-06-07 17:11:08 -Found 1 custom documentation plugin(s)
2021-06-07 17:11:08 -Scanning for api listing references
2021-06-07 17:11:08 -Generating unique operation named: removeUsingPOST_1
2021-06-07 17:11:08 -Generating unique operation named: addUsingGET_1
2021-06-07 17:11:08 -Generating unique operation named: editUsingGET_1
2021-06-07 17:11:08 -Generating unique operation named: listUsingGET_1
2021-06-07 17:11:08 -Generating unique operation named: removeUsingPOST_2
2021-06-07 17:11:08 -Generating unique operation named: removeUsingPOST_3
2021-06-07 17:11:08 -Generating unique operation named: saveUsingPOST_1
2021-06-07 17:11:08 -Generating unique operation named: updateUsingGET_1
2021-06-07 17:11:08 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 17:11:08 -Generating unique operation named: updateUsingPOST_1
2021-06-07 17:11:08 -Generating unique operation named: updateUsingPUT_1
2021-06-07 17:11:08 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 17:11:08 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 17:11:08 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 17:11:08 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 17:11:08 -Generating unique operation named: addUsingGET_2
2021-06-07 17:11:09 -Generating unique operation named: editUsingGET_2
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_2
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_4
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_5
2021-06-07 17:11:09 -Generating unique operation named: saveUsingPOST_2
2021-06-07 17:11:09 -Generating unique operation named: updateUsingGET_2
2021-06-07 17:11:09 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPOST_2
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPUT_2
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 17:11:09 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 17:11:09 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 17:11:09 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 17:11:09 -Generating unique operation named: editUsingGET_3
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_3
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPOST_3
2021-06-07 17:11:09 -Generating unique operation named: addUsingGET_3
2021-06-07 17:11:09 -Generating unique operation named: editUsingGET_4
2021-06-07 17:11:09 -Generating unique operation named: infoUsingGET_1
2021-06-07 17:11:09 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 17:11:09 -Generating unique operation named: infoUsingPOST_1
2021-06-07 17:11:09 -Generating unique operation named: infoUsingPUT_1
2021-06-07 17:11:09 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 17:11:09 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 17:11:09 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 17:11:09 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_4
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_6
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_7
2021-06-07 17:11:09 -Generating unique operation named: saveUsingPOST_3
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPOST_4
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_5
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_8
2021-06-07 17:11:09 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 17:11:09 -Generating unique operation named: addUsingGET_4
2021-06-07 17:11:09 -Generating unique operation named: editUsingGET_5
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_6
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_9
2021-06-07 17:11:09 -Generating unique operation named: saveUsingPOST_4
2021-06-07 17:11:09 -Generating unique operation named: treeUsingGET_1
2021-06-07 17:11:09 -Generating unique operation named: treeUsingGET_2
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPOST_5
2021-06-07 17:11:09 -Generating unique operation named: addUsingGET_5
2021-06-07 17:11:09 -Generating unique operation named: editUsingGET_6
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_7
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_10
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_11
2021-06-07 17:11:09 -Generating unique operation named: saveUsingPOST_5
2021-06-07 17:11:09 -Generating unique operation named: updateUsingGET_3
2021-06-07 17:11:09 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPOST_6
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPUT_3
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 17:11:09 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 17:11:09 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 17:11:09 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 17:11:09 -Generating unique operation named: addUsingGET_6
2021-06-07 17:11:09 -Generating unique operation named: editUsingGET_7
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_8
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_12
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_13
2021-06-07 17:11:09 -Generating unique operation named: saveUsingPOST_6
2021-06-07 17:11:09 -Generating unique operation named: updateUsingGET_4
2021-06-07 17:11:09 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPOST_7
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPUT_4
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 17:11:09 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 17:11:09 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 17:11:09 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 17:11:09 -Generating unique operation named: addUsingGET_7
2021-06-07 17:11:09 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 17:11:09 -Generating unique operation named: editUsingGET_8
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_9
2021-06-07 17:11:09 -Generating unique operation named: saveUsingPOST_7
2021-06-07 17:11:09 -Generating unique operation named: saveUsingPOST_8
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPOST_8
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_10
2021-06-07 17:11:09 -Generating unique operation named: listUsingHEAD_1
2021-06-07 17:11:09 -Generating unique operation named: listUsingPOST_1
2021-06-07 17:11:09 -Generating unique operation named: listUsingPUT_1
2021-06-07 17:11:09 -Generating unique operation named: listUsingPATCH_1
2021-06-07 17:11:09 -Generating unique operation named: listUsingDELETE_1
2021-06-07 17:11:09 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 17:11:09 -Generating unique operation named: listUsingTRACE_1
2021-06-07 17:11:09 -Generating unique operation named: addUsingGET_8
2021-06-07 17:11:09 -Generating unique operation named: editUsingGET_9
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_11
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_14
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_15
2021-06-07 17:11:09 -Generating unique operation named: saveUsingPOST_9
2021-06-07 17:11:09 -Generating unique operation named: updateUsingGET_5
2021-06-07 17:11:09 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPOST_9
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPUT_5
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 17:11:09 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 17:11:09 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 17:11:09 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 17:11:09 -Generating unique operation named: addUsingGET_9
2021-06-07 17:11:09 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 17:11:09 -Generating unique operation named: editUsingGET_10
2021-06-07 17:11:09 -Generating unique operation named: listUsingGET_12
2021-06-07 17:11:09 -Generating unique operation named: removeUsingPOST_16
2021-06-07 17:11:09 -Generating unique operation named: saveUsingPOST_10
2021-06-07 17:11:09 -Generating unique operation named: treeUsingGET_3
2021-06-07 17:11:09 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 17:11:09 -Generating unique operation named: updateUsingPOST_10
2021-06-07 17:11:09 -Starting Quartz Scheduler now
2021-06-07 17:11:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 17:11:09 -Starting...
2021-06-07 17:11:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 17:11:09 -Started.
2021-06-07 17:11:09 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 17:11:09 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 17:11:09 -Using a shared selector for servlet write/read
2021-06-07 17:11:09 -Tomcat started on port(s): 8088 (http)
2021-06-07 17:11:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 17:11:09 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 17:11:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2021-06-07 17:11:09 -Enabling session validation scheduler...
2021-06-07 17:11:09 -Started BootdoApplication in 7.193 seconds (JVM running for 7.843)
2021-06-07 17:11:09 -请求地址 : http://localhost:8088/login;JSESSIONID=fb54d056-824f-4836-a934-7c644b64575c
2021-06-07 17:11:09 -HTTP METHOD : GET
2021-06-07 17:11:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:11:09 -参数 : []
2021-06-07 17:11:09 -耗时 : 1
2021-06-07 17:11:09 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 17:11:09 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 17:11:09 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 17:11:09 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 17:11:09 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 17:11:09 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 17:11:09 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 17:11:19 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 2400 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 17:11:19 -The following profiles are active: dev
2021-06-07 17:11:19 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 17:11:19 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:11:19 CST 2021]; root of context hierarchy
2021-06-07 17:11:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 17:11:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43105862] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:20 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$339b2364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:20 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:20 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 17:11:20 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 17:11:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:11:21 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 17:11:21 -Starting service [Tomcat]
2021-06-07 17:11:21 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 17:11:21 -Initializing Spring embedded WebApplicationContext
2021-06-07 17:11:21 -Root WebApplicationContext: initialization completed in 1975 ms
2021-06-07 17:11:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 17:11:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 17:11:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 17:11:21 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 17:11:21 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 17:11:21 -Filter xssFilter was not registered (disabled)
2021-06-07 17:11:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 17:11:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 17:11:21 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 17:11:21 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 17:11:21 -{dataSource-1} inited
2021-06-07 17:11:22 -Using default implementation for ThreadExecutor
2021-06-07 17:11:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 17:11:22 -Quartz Scheduler v.2.2.1 created.
2021-06-07 17:11:22 -RAMJobStore initialized.
2021-06-07 17:11:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 17:11:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 17:11:22 -Quartz scheduler version: 2.2.1
2021-06-07 17:11:22 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@740b9a50
2021-06-07 17:11:22 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 17:11:22 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 17:11:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 17:11:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 17:11:23 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 17:11:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 17:11:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 17:11:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 17:11:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 17:11:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 17:11:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 17:11:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 17:11:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 17:11:23 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 17:11:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 17:11:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 17:11:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 17:11:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:11:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 17:11:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:11:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 17:11:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 17:11:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 17:11:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 17:11:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 17:11:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 17:11:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 17:11:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 17:11:23 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:11:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:11:23 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 17:11:23 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 17:11:23 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 17:11:23 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 17:11:23 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:11:23 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:11:23 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 17:11:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 17:11:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 17:11:23 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:11:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:11:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 17:11:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 17:11:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 17:11:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 17:11:23 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 17:11:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 17:11:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 17:11:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 17:11:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 17:11:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 17:11:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 17:11:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 17:11:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 17:11:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 17:11:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 17:11:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 17:11:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 17:11:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 17:11:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 17:11:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 17:11:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 17:11:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 17:11:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 17:11:23 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 17:11:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 17:11:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 17:11:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 17:11:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 17:11:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 17:11:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 17:11:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 17:11:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 17:11:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 17:11:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:11:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 17:11:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:11:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:11:23 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 17:11:23 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 17:11:23 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 17:11:23 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 17:11:23 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 17:11:23 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:11:23 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 17:11:23 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:11:23 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 17:11:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:11:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 17:11:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 17:11:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 17:11:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 17:11:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 17:11:23 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 17:11:23 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:11:19 CST 2021]; root of context hierarchy
2021-06-07 17:11:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:11:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:11:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:11:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 17:11:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:11:24 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 17:11:24 -

Using default security password: e015390e-7729-4f95-b0ff-6361ea533282

2021-06-07 17:11:24 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 17:11:24 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@fb2c2f3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@148fca83, org.springframework.security.web.context.SecurityContextPersistenceFilter@b8142f4, org.springframework.security.web.header.HeaderWriterFilter@38b54694, org.springframework.security.web.csrf.CsrfFilter@3245efdb, org.springframework.security.web.authentication.logout.LogoutFilter@4e3ee457, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50b38342, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a8b42a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2d2a8819, org.springframework.security.web.session.SessionManagementFilter@45539bd8, org.springframework.security.web.access.ExceptionTranslationFilter@77e730bd]
2021-06-07 17:11:24 -Registering beans for JMX exposure on startup
2021-06-07 17:11:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 17:11:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 17:11:24 -Starting beans in phase 2147483647
2021-06-07 17:11:24 -Context refreshed
2021-06-07 17:11:24 -Found 1 custom documentation plugin(s)
2021-06-07 17:11:24 -Scanning for api listing references
2021-06-07 17:11:24 -Generating unique operation named: removeUsingPOST_1
2021-06-07 17:11:24 -Generating unique operation named: addUsingGET_1
2021-06-07 17:11:24 -Generating unique operation named: editUsingGET_1
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_1
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_2
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_3
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_1
2021-06-07 17:11:25 -Generating unique operation named: updateUsingGET_1
2021-06-07 17:11:25 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_1
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPUT_1
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 17:11:25 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 17:11:25 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 17:11:25 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 17:11:25 -Generating unique operation named: addUsingGET_2
2021-06-07 17:11:25 -Generating unique operation named: editUsingGET_2
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_2
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_4
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_5
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_2
2021-06-07 17:11:25 -Generating unique operation named: updateUsingGET_2
2021-06-07 17:11:25 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_2
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPUT_2
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 17:11:25 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 17:11:25 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 17:11:25 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 17:11:25 -Generating unique operation named: editUsingGET_3
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_3
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_3
2021-06-07 17:11:25 -Generating unique operation named: addUsingGET_3
2021-06-07 17:11:25 -Generating unique operation named: editUsingGET_4
2021-06-07 17:11:25 -Generating unique operation named: infoUsingGET_1
2021-06-07 17:11:25 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 17:11:25 -Generating unique operation named: infoUsingPOST_1
2021-06-07 17:11:25 -Generating unique operation named: infoUsingPUT_1
2021-06-07 17:11:25 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 17:11:25 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 17:11:25 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 17:11:25 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_4
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_6
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_7
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_3
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_4
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_5
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_8
2021-06-07 17:11:25 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 17:11:25 -Generating unique operation named: addUsingGET_4
2021-06-07 17:11:25 -Generating unique operation named: editUsingGET_5
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_6
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_9
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_4
2021-06-07 17:11:25 -Generating unique operation named: treeUsingGET_1
2021-06-07 17:11:25 -Generating unique operation named: treeUsingGET_2
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_5
2021-06-07 17:11:25 -Generating unique operation named: addUsingGET_5
2021-06-07 17:11:25 -Generating unique operation named: editUsingGET_6
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_7
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_10
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_11
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_5
2021-06-07 17:11:25 -Generating unique operation named: updateUsingGET_3
2021-06-07 17:11:25 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_6
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPUT_3
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 17:11:25 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 17:11:25 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 17:11:25 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 17:11:25 -Generating unique operation named: addUsingGET_6
2021-06-07 17:11:25 -Generating unique operation named: editUsingGET_7
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_8
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_12
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_13
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_6
2021-06-07 17:11:25 -Generating unique operation named: updateUsingGET_4
2021-06-07 17:11:25 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_7
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPUT_4
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 17:11:25 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 17:11:25 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 17:11:25 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 17:11:25 -Generating unique operation named: addUsingGET_7
2021-06-07 17:11:25 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 17:11:25 -Generating unique operation named: editUsingGET_8
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_9
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_7
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_8
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_8
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_10
2021-06-07 17:11:25 -Generating unique operation named: listUsingHEAD_1
2021-06-07 17:11:25 -Generating unique operation named: listUsingPOST_1
2021-06-07 17:11:25 -Generating unique operation named: listUsingPUT_1
2021-06-07 17:11:25 -Generating unique operation named: listUsingPATCH_1
2021-06-07 17:11:25 -Generating unique operation named: listUsingDELETE_1
2021-06-07 17:11:25 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 17:11:25 -Generating unique operation named: listUsingTRACE_1
2021-06-07 17:11:25 -Generating unique operation named: addUsingGET_8
2021-06-07 17:11:25 -Generating unique operation named: editUsingGET_9
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_11
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_14
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_15
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_9
2021-06-07 17:11:25 -Generating unique operation named: updateUsingGET_5
2021-06-07 17:11:25 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_9
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPUT_5
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 17:11:25 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 17:11:25 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 17:11:25 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 17:11:25 -Generating unique operation named: addUsingGET_9
2021-06-07 17:11:25 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 17:11:25 -Generating unique operation named: editUsingGET_10
2021-06-07 17:11:25 -Generating unique operation named: listUsingGET_12
2021-06-07 17:11:25 -Generating unique operation named: removeUsingPOST_16
2021-06-07 17:11:25 -Generating unique operation named: saveUsingPOST_10
2021-06-07 17:11:25 -Generating unique operation named: treeUsingGET_3
2021-06-07 17:11:25 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 17:11:25 -Generating unique operation named: updateUsingPOST_10
2021-06-07 17:11:25 -Starting Quartz Scheduler now
2021-06-07 17:11:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 17:11:25 -Starting...
2021-06-07 17:11:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 17:11:25 -Started.
2021-06-07 17:11:25 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 17:11:25 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 17:11:25 -Using a shared selector for servlet write/read
2021-06-07 17:11:25 -Tomcat started on port(s): 8088 (http)
2021-06-07 17:11:25 -Started BootdoApplication in 6.825 seconds (JVM running for 7.47)
2021-06-07 17:11:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 17:11:38 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 17:11:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 17:11:38 -Enabling session validation scheduler...
2021-06-07 17:11:38 -请求地址 : http://localhost:8088/login
2021-06-07 17:11:38 -HTTP METHOD : POST
2021-06-07 17:11:38 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:11:38 -参数 : [admin, Dm202007sc]
2021-06-07 17:11:38 -耗时 : 9
2021-06-07 17:11:38 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 17:11:38 -请求地址 : http://localhost:8088/index
2021-06-07 17:11:38 -HTTP METHOD : GET
2021-06-07 17:11:38 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:11:38 -参数 : [{}]
2021-06-07 17:11:38 -耗时 : 20
2021-06-07 17:11:38 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 17:11:38 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 17:11:38 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 17:11:38 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 17:11:38 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 17:11:38 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 17:11:38 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 17:11:38 -请求地址 : http://localhost:8088/main
2021-06-07 17:11:38 -HTTP METHOD : GET
2021-06-07 17:11:38 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:11:38 -参数 : []
2021-06-07 17:11:38 -耗时 : 0
2021-06-07 17:11:38 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:11:38 -HTTP METHOD : GET
2021-06-07 17:11:38 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:11:38 -参数 : []
2021-06-07 17:11:38 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:11:38 -请求地址 : http://localhost:8088/main
2021-06-07 17:11:38 -HTTP METHOD : GET
2021-06-07 17:11:38 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:11:38 -参数 : []
2021-06-07 17:11:38 -耗时 : 4
2021-06-07 17:11:40 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:11:40 -HTTP METHOD : GET
2021-06-07 17:11:40 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:11:40 -参数 : []
2021-06-07 17:11:40 -耗时 : 0
2021-06-07 17:11:40 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:11:40 -HTTP METHOD : GET
2021-06-07 17:11:40 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:11:40 -参数 : [{limit=10, offset=0}]
2021-06-07 17:11:40 -耗时 : 11
2021-06-07 17:11:42 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:11:42 -HTTP METHOD : GET
2021-06-07 17:11:42 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:11:42 -参数 : []
2021-06-07 17:11:42 -耗时 : 1
2021-06-07 17:11:54 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:11:54 -HTTP METHOD : POST
2021-06-07 17:11:54 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:11:54 -参数 : [com.shiguang.mfrs.domain.MfrsDO@42b76609]
2021-06-07 17:11:54 -{conn-10001, pstmt-20008} execute error. insert into c_mfrs
		(
			`mfrs_id`, 
			`mfrs_num`, 
			`mfrs_name`, 
			`mfrs_contacts`, 
			`mfrs_realname`, 
			`mfrs_telephone`, 
			`contact_number`, 
			`commodity_category`, 
			`mfrs_fax`, 
			`mfrs_address`, 
			`settlement_method`, 
			`billing_status`, 
			`credit_code`, 
			`credit_codeday`, 
			`key_medicine`, 
			`key_medicineday`, 
			`key_industry`, 
			`key_industryday`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$877a185.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:11:54 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2021-06-07 17:11:54 -SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2021-06-07 17:11:54 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
### The error may involve com.shiguang.mfrs.dao.MfrsDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into c_mfrs   (    `mfrs_id`,     `mfrs_num`,     `mfrs_name`,     `mfrs_contacts`,     `mfrs_realname`,     `mfrs_telephone`,     `contact_number`,     `commodity_category`,     `mfrs_fax`,     `mfrs_address`,     `settlement_method`,     `billing_status`,     `credit_code`,     `credit_codeday`,     `key_medicine`,     `key_medicineday`,     `key_industry`,     `key_industryday`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
; SQL []; Column 'mfrs_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:85)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy100.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy113.save(Unknown Source)
	at com.shiguang.mfrs.service.impl.MfrsServiceImpl.save(MfrsServiceImpl.java:37)
	at com.shiguang.mfrs.controller.MfrsController.save(MfrsController.java:77)
	at com.shiguang.mfrs.controller.MfrsController$$FastClassBySpringCGLIB$$2fe9d17d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.mfrs.controller.MfrsController$$EnhancerBySpringCGLIB$$877a185.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'mfrs_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2487)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 110 common frames omitted
2021-06-07 17:12:23 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 10]
2021-06-07 17:12:37 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 9752 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 17:12:37 -The following profiles are active: dev
2021-06-07 17:12:37 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 17:12:37 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:12:37 CST 2021]; root of context hierarchy
2021-06-07 17:12:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 17:12:38 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee47edf5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:12:39 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ded2b8f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:12:39 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:12:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:12:39 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 17:12:39 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 17:12:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:12:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:12:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:12:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:12:39 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 17:12:39 -Starting service [Tomcat]
2021-06-07 17:12:39 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 17:12:39 -Initializing Spring embedded WebApplicationContext
2021-06-07 17:12:39 -Root WebApplicationContext: initialization completed in 1996 ms
2021-06-07 17:12:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 17:12:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 17:12:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 17:12:40 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 17:12:40 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 17:12:40 -Filter xssFilter was not registered (disabled)
2021-06-07 17:12:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 17:12:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 17:12:40 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 17:12:40 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 17:12:40 -{dataSource-1} inited
2021-06-07 17:12:40 -Using default implementation for ThreadExecutor
2021-06-07 17:12:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 17:12:40 -Quartz Scheduler v.2.2.1 created.
2021-06-07 17:12:40 -RAMJobStore initialized.
2021-06-07 17:12:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 17:12:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 17:12:40 -Quartz scheduler version: 2.2.1
2021-06-07 17:12:40 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@2c9306d3
2021-06-07 17:12:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 17:12:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 17:12:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 17:12:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 17:12:41 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 17:12:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 17:12:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 17:12:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 17:12:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 17:12:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 17:12:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 17:12:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 17:12:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 17:12:41 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 17:12:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 17:12:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 17:12:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 17:12:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:12:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 17:12:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:12:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 17:12:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 17:12:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 17:12:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 17:12:41 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 17:12:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 17:12:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 17:12:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 17:12:41 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:12:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:12:41 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 17:12:41 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 17:12:41 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 17:12:41 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 17:12:41 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:12:41 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:12:41 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 17:12:41 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 17:12:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 17:12:41 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:12:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:12:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 17:12:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 17:12:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 17:12:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 17:12:41 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 17:12:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 17:12:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 17:12:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 17:12:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 17:12:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 17:12:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 17:12:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 17:12:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 17:12:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 17:12:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 17:12:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 17:12:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 17:12:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 17:12:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 17:12:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 17:12:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 17:12:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 17:12:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 17:12:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 17:12:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 17:12:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 17:12:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 17:12:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 17:12:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 17:12:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 17:12:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 17:12:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 17:12:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 17:12:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:12:41 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 17:12:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 17:12:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:12:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:12:41 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 17:12:41 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 17:12:41 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 17:12:41 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 17:12:41 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:12:41 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 17:12:41 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 17:12:41 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:12:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:12:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 17:12:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 17:12:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 17:12:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 17:12:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 17:12:41 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 17:12:42 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:12:37 CST 2021]; root of context hierarchy
2021-06-07 17:12:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:12:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:12:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:12:42 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 17:12:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:12:42 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 17:12:43 -

Using default security password: 17e43dde-ee9b-49b0-bf1b-30c0a15dc873

2021-06-07 17:12:43 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 17:12:43 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@4e3ee457, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41b66d1, org.springframework.security.web.context.SecurityContextPersistenceFilter@4df13dd0, org.springframework.security.web.header.HeaderWriterFilter@c0004b7, org.springframework.security.web.csrf.CsrfFilter@2e4b5da1, org.springframework.security.web.authentication.logout.LogoutFilter@12532e37, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30665461, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6fa7ce4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fb2c2f3, org.springframework.security.web.session.SessionManagementFilter@4d75c604, org.springframework.security.web.access.ExceptionTranslationFilter@39ead1b7]
2021-06-07 17:12:43 -Registering beans for JMX exposure on startup
2021-06-07 17:12:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 17:12:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 17:12:43 -Starting beans in phase 2147483647
2021-06-07 17:12:43 -Context refreshed
2021-06-07 17:12:43 -Found 1 custom documentation plugin(s)
2021-06-07 17:12:43 -Scanning for api listing references
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_1
2021-06-07 17:12:43 -Generating unique operation named: addUsingGET_1
2021-06-07 17:12:43 -Generating unique operation named: editUsingGET_1
2021-06-07 17:12:43 -Generating unique operation named: listUsingGET_1
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_2
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_3
2021-06-07 17:12:43 -Generating unique operation named: saveUsingPOST_1
2021-06-07 17:12:43 -Generating unique operation named: updateUsingGET_1
2021-06-07 17:12:43 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPOST_1
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPUT_1
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 17:12:43 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 17:12:43 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 17:12:43 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 17:12:43 -Generating unique operation named: addUsingGET_2
2021-06-07 17:12:43 -Generating unique operation named: editUsingGET_2
2021-06-07 17:12:43 -Generating unique operation named: listUsingGET_2
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_4
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_5
2021-06-07 17:12:43 -Generating unique operation named: saveUsingPOST_2
2021-06-07 17:12:43 -Generating unique operation named: updateUsingGET_2
2021-06-07 17:12:43 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPOST_2
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPUT_2
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 17:12:43 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 17:12:43 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 17:12:43 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 17:12:43 -Generating unique operation named: editUsingGET_3
2021-06-07 17:12:43 -Generating unique operation named: listUsingGET_3
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPOST_3
2021-06-07 17:12:43 -Generating unique operation named: addUsingGET_3
2021-06-07 17:12:43 -Generating unique operation named: editUsingGET_4
2021-06-07 17:12:43 -Generating unique operation named: infoUsingGET_1
2021-06-07 17:12:43 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 17:12:43 -Generating unique operation named: infoUsingPOST_1
2021-06-07 17:12:43 -Generating unique operation named: infoUsingPUT_1
2021-06-07 17:12:43 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 17:12:43 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 17:12:43 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 17:12:43 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 17:12:43 -Generating unique operation named: listUsingGET_4
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_6
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_7
2021-06-07 17:12:43 -Generating unique operation named: saveUsingPOST_3
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPOST_4
2021-06-07 17:12:43 -Generating unique operation named: listUsingGET_5
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_8
2021-06-07 17:12:43 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 17:12:43 -Generating unique operation named: addUsingGET_4
2021-06-07 17:12:43 -Generating unique operation named: editUsingGET_5
2021-06-07 17:12:43 -Generating unique operation named: listUsingGET_6
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_9
2021-06-07 17:12:43 -Generating unique operation named: saveUsingPOST_4
2021-06-07 17:12:43 -Generating unique operation named: treeUsingGET_1
2021-06-07 17:12:43 -Generating unique operation named: treeUsingGET_2
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPOST_5
2021-06-07 17:12:43 -Generating unique operation named: addUsingGET_5
2021-06-07 17:12:43 -Generating unique operation named: editUsingGET_6
2021-06-07 17:12:43 -Generating unique operation named: listUsingGET_7
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_10
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_11
2021-06-07 17:12:43 -Generating unique operation named: saveUsingPOST_5
2021-06-07 17:12:43 -Generating unique operation named: updateUsingGET_3
2021-06-07 17:12:43 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPOST_6
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPUT_3
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 17:12:43 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 17:12:43 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 17:12:43 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 17:12:43 -Generating unique operation named: addUsingGET_6
2021-06-07 17:12:43 -Generating unique operation named: editUsingGET_7
2021-06-07 17:12:43 -Generating unique operation named: listUsingGET_8
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_12
2021-06-07 17:12:43 -Generating unique operation named: removeUsingPOST_13
2021-06-07 17:12:43 -Generating unique operation named: saveUsingPOST_6
2021-06-07 17:12:43 -Generating unique operation named: updateUsingGET_4
2021-06-07 17:12:43 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPOST_7
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPUT_4
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 17:12:43 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 17:12:43 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 17:12:43 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 17:12:43 -Generating unique operation named: addUsingGET_7
2021-06-07 17:12:43 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 17:12:43 -Generating unique operation named: editUsingGET_8
2021-06-07 17:12:43 -Generating unique operation named: listUsingGET_9
2021-06-07 17:12:43 -Generating unique operation named: saveUsingPOST_7
2021-06-07 17:12:43 -Generating unique operation named: saveUsingPOST_8
2021-06-07 17:12:43 -Generating unique operation named: updateUsingPOST_8
2021-06-07 17:12:44 -Generating unique operation named: listUsingGET_10
2021-06-07 17:12:44 -Generating unique operation named: listUsingHEAD_1
2021-06-07 17:12:44 -Generating unique operation named: listUsingPOST_1
2021-06-07 17:12:44 -Generating unique operation named: listUsingPUT_1
2021-06-07 17:12:44 -Generating unique operation named: listUsingPATCH_1
2021-06-07 17:12:44 -Generating unique operation named: listUsingDELETE_1
2021-06-07 17:12:44 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 17:12:44 -Generating unique operation named: listUsingTRACE_1
2021-06-07 17:12:44 -Generating unique operation named: addUsingGET_8
2021-06-07 17:12:44 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 17:12:44 -Generating unique operation named: editUsingGET_9
2021-06-07 17:12:44 -Generating unique operation named: listUsingGET_11
2021-06-07 17:12:44 -Generating unique operation named: removeUsingPOST_14
2021-06-07 17:12:44 -Generating unique operation named: saveUsingPOST_9
2021-06-07 17:12:44 -Generating unique operation named: treeUsingGET_3
2021-06-07 17:12:44 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 17:12:44 -Generating unique operation named: updateUsingPOST_9
2021-06-07 17:12:44 -Generating unique operation named: addUsingGET_9
2021-06-07 17:12:44 -Generating unique operation named: editUsingGET_10
2021-06-07 17:12:44 -Generating unique operation named: listUsingGET_12
2021-06-07 17:12:44 -Generating unique operation named: removeUsingPOST_15
2021-06-07 17:12:44 -Generating unique operation named: removeUsingPOST_16
2021-06-07 17:12:44 -Generating unique operation named: saveUsingPOST_10
2021-06-07 17:12:44 -Generating unique operation named: updateUsingGET_5
2021-06-07 17:12:44 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 17:12:44 -Generating unique operation named: updateUsingPOST_10
2021-06-07 17:12:44 -Generating unique operation named: updateUsingPUT_5
2021-06-07 17:12:44 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 17:12:44 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 17:12:44 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 17:12:44 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 17:12:44 -Starting Quartz Scheduler now
2021-06-07 17:12:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 17:12:44 -Starting...
2021-06-07 17:12:44 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 17:12:44 -Started.
2021-06-07 17:12:44 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 17:12:44 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 17:12:44 -Using a shared selector for servlet write/read
2021-06-07 17:12:44 -Tomcat started on port(s): 8088 (http)
2021-06-07 17:12:44 -Started BootdoApplication in 7.067 seconds (JVM running for 7.733)
2021-06-07 17:12:52 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 17:12:52 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 17:12:52 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 17:12:52 -Enabling session validation scheduler...
2021-06-07 17:12:52 -请求地址 : http://localhost:8088/login;JSESSIONID=5873fedc-0584-4994-a92d-bd81b1776e2b
2021-06-07 17:12:52 -HTTP METHOD : GET
2021-06-07 17:12:52 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:12:52 -参数 : []
2021-06-07 17:12:52 -耗时 : 1
2021-06-07 17:12:52 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 17:12:52 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 17:12:52 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 17:12:52 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 17:12:52 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 17:12:52 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 17:12:52 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 17:12:53 -请求地址 : http://localhost:8088/login
2021-06-07 17:12:53 -HTTP METHOD : POST
2021-06-07 17:12:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:12:53 -参数 : [admin, Dm202007sc]
2021-06-07 17:12:53 -耗时 : 6
2021-06-07 17:12:53 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 17:12:53 -请求地址 : http://localhost:8088/index
2021-06-07 17:12:53 -HTTP METHOD : GET
2021-06-07 17:12:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:12:53 -参数 : [{}]
2021-06-07 17:12:53 -耗时 : 21
2021-06-07 17:12:53 -请求地址 : http://localhost:8088/main
2021-06-07 17:12:53 -HTTP METHOD : GET
2021-06-07 17:12:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:12:53 -参数 : []
2021-06-07 17:12:53 -耗时 : 1
2021-06-07 17:12:53 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:12:53 -HTTP METHOD : GET
2021-06-07 17:12:53 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:12:53 -参数 : []
2021-06-07 17:12:53 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:12:53 -请求地址 : http://localhost:8088/main
2021-06-07 17:12:53 -HTTP METHOD : GET
2021-06-07 17:12:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:12:53 -参数 : []
2021-06-07 17:12:53 -耗时 : 4
2021-06-07 17:12:55 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:12:55 -HTTP METHOD : GET
2021-06-07 17:12:55 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:12:55 -参数 : []
2021-06-07 17:12:55 -耗时 : 1
2021-06-07 17:12:55 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:12:55 -HTTP METHOD : GET
2021-06-07 17:12:55 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:12:55 -参数 : [{limit=10, offset=0}]
2021-06-07 17:12:55 -耗时 : 10
2021-06-07 17:12:57 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:12:57 -HTTP METHOD : GET
2021-06-07 17:12:57 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:12:57 -参数 : []
2021-06-07 17:12:57 -耗时 : 1
2021-06-07 17:13:05 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:13:05 -HTTP METHOD : POST
2021-06-07 17:13:05 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:13:05 -参数 : [com.shiguang.mfrs.domain.MfrsDO@41b0087f]
2021-06-07 17:13:05 -耗时 : 29
2021-06-07 17:13:05 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:13:05 -HTTP METHOD : GET
2021-06-07 17:13:05 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:13:05 -参数 : [{limit=10, offset=0}]
2021-06-07 17:13:05 -耗时 : 4
2021-06-07 17:13:32 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 2276 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 17:13:32 -The following profiles are active: dev
2021-06-07 17:13:32 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 17:13:32 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:13:32 CST 2021]; root of context hierarchy
2021-06-07 17:13:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 17:13:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4e681df8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:13:34 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3ef2e8fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:13:34 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:13:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:13:34 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 17:13:34 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 17:13:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:13:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:13:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:13:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:13:34 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 17:13:34 -Starting service [Tomcat]
2021-06-07 17:13:34 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 17:13:34 -Initializing Spring embedded WebApplicationContext
2021-06-07 17:13:34 -Root WebApplicationContext: initialization completed in 1992 ms
2021-06-07 17:13:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 17:13:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 17:13:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 17:13:35 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 17:13:35 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 17:13:35 -Filter xssFilter was not registered (disabled)
2021-06-07 17:13:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 17:13:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 17:13:35 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 17:13:35 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 17:13:35 -{dataSource-1} inited
2021-06-07 17:13:35 -Using default implementation for ThreadExecutor
2021-06-07 17:13:35 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 17:13:35 -Quartz Scheduler v.2.2.1 created.
2021-06-07 17:13:35 -RAMJobStore initialized.
2021-06-07 17:13:35 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 17:13:35 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 17:13:35 -Quartz scheduler version: 2.2.1
2021-06-07 17:13:35 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@6314df3c
2021-06-07 17:13:36 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 17:13:36 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 17:13:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 17:13:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 17:13:36 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 17:13:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 17:13:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 17:13:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 17:13:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 17:13:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 17:13:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 17:13:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 17:13:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 17:13:36 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 17:13:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 17:13:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 17:13:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 17:13:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:13:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 17:13:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:13:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 17:13:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 17:13:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 17:13:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 17:13:36 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 17:13:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 17:13:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 17:13:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 17:13:36 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:13:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:13:36 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 17:13:36 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 17:13:36 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 17:13:36 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 17:13:36 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:13:36 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:13:36 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 17:13:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 17:13:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 17:13:36 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:13:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:13:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 17:13:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 17:13:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 17:13:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 17:13:36 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 17:13:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 17:13:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 17:13:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 17:13:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 17:13:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 17:13:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 17:13:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 17:13:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 17:13:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 17:13:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 17:13:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 17:13:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 17:13:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 17:13:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 17:13:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 17:13:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 17:13:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 17:13:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 17:13:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 17:13:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 17:13:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 17:13:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 17:13:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 17:13:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 17:13:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 17:13:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 17:13:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 17:13:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:13:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 17:13:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:13:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:13:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 17:13:36 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 17:13:36 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 17:13:36 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 17:13:36 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 17:13:36 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 17:13:36 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:13:36 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 17:13:36 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 17:13:36 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:13:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:13:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 17:13:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 17:13:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 17:13:36 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 17:13:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 17:13:37 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 17:13:37 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:13:32 CST 2021]; root of context hierarchy
2021-06-07 17:13:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:13:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:13:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:13:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 17:13:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:13:38 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 17:13:38 -

Using default security password: 13a15437-d586-432e-8dd2-501f7fa86686

2021-06-07 17:13:38 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 17:13:38 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@2ed7978c, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30665461, org.springframework.security.web.context.SecurityContextPersistenceFilter@1cab19e2, org.springframework.security.web.header.HeaderWriterFilter@af3295f, org.springframework.security.web.csrf.CsrfFilter@5e9ea380, org.springframework.security.web.authentication.logout.LogoutFilter@33f2eb04, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c3cd7a5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c0004b7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@146833a2, org.springframework.security.web.session.SessionManagementFilter@2e4b5da1, org.springframework.security.web.access.ExceptionTranslationFilter@7d5a0b14]
2021-06-07 17:13:38 -Registering beans for JMX exposure on startup
2021-06-07 17:13:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 17:13:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 17:13:38 -Starting beans in phase 2147483647
2021-06-07 17:13:38 -Context refreshed
2021-06-07 17:13:38 -Found 1 custom documentation plugin(s)
2021-06-07 17:13:38 -Scanning for api listing references
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_1
2021-06-07 17:13:38 -Generating unique operation named: addUsingGET_1
2021-06-07 17:13:38 -Generating unique operation named: editUsingGET_1
2021-06-07 17:13:38 -Generating unique operation named: listUsingGET_1
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_2
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_3
2021-06-07 17:13:38 -Generating unique operation named: saveUsingPOST_1
2021-06-07 17:13:38 -Generating unique operation named: updateUsingGET_1
2021-06-07 17:13:38 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPOST_1
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPUT_1
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 17:13:38 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 17:13:38 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 17:13:38 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 17:13:38 -Generating unique operation named: addUsingGET_2
2021-06-07 17:13:38 -Generating unique operation named: editUsingGET_2
2021-06-07 17:13:38 -Generating unique operation named: listUsingGET_2
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_4
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_5
2021-06-07 17:13:38 -Generating unique operation named: saveUsingPOST_2
2021-06-07 17:13:38 -Generating unique operation named: updateUsingGET_2
2021-06-07 17:13:38 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPOST_2
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPUT_2
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 17:13:38 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 17:13:38 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 17:13:38 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 17:13:38 -Generating unique operation named: editUsingGET_3
2021-06-07 17:13:38 -Generating unique operation named: listUsingGET_3
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPOST_3
2021-06-07 17:13:38 -Generating unique operation named: addUsingGET_3
2021-06-07 17:13:38 -Generating unique operation named: editUsingGET_4
2021-06-07 17:13:38 -Generating unique operation named: infoUsingGET_1
2021-06-07 17:13:38 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 17:13:38 -Generating unique operation named: infoUsingPOST_1
2021-06-07 17:13:38 -Generating unique operation named: infoUsingPUT_1
2021-06-07 17:13:38 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 17:13:38 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 17:13:38 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 17:13:38 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 17:13:38 -Generating unique operation named: listUsingGET_4
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_6
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_7
2021-06-07 17:13:38 -Generating unique operation named: saveUsingPOST_3
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPOST_4
2021-06-07 17:13:38 -Generating unique operation named: listUsingGET_5
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_8
2021-06-07 17:13:38 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 17:13:38 -Generating unique operation named: addUsingGET_4
2021-06-07 17:13:38 -Generating unique operation named: editUsingGET_5
2021-06-07 17:13:38 -Generating unique operation named: listUsingGET_6
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_9
2021-06-07 17:13:38 -Generating unique operation named: saveUsingPOST_4
2021-06-07 17:13:38 -Generating unique operation named: treeUsingGET_1
2021-06-07 17:13:38 -Generating unique operation named: treeUsingGET_2
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPOST_5
2021-06-07 17:13:38 -Generating unique operation named: addUsingGET_5
2021-06-07 17:13:38 -Generating unique operation named: editUsingGET_6
2021-06-07 17:13:38 -Generating unique operation named: listUsingGET_7
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_10
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_11
2021-06-07 17:13:38 -Generating unique operation named: saveUsingPOST_5
2021-06-07 17:13:38 -Generating unique operation named: updateUsingGET_3
2021-06-07 17:13:38 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPOST_6
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPUT_3
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 17:13:38 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 17:13:38 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 17:13:38 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 17:13:38 -Generating unique operation named: addUsingGET_6
2021-06-07 17:13:38 -Generating unique operation named: editUsingGET_7
2021-06-07 17:13:38 -Generating unique operation named: listUsingGET_8
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_12
2021-06-07 17:13:38 -Generating unique operation named: removeUsingPOST_13
2021-06-07 17:13:38 -Generating unique operation named: saveUsingPOST_6
2021-06-07 17:13:38 -Generating unique operation named: updateUsingGET_4
2021-06-07 17:13:38 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPOST_7
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPUT_4
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 17:13:38 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 17:13:38 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 17:13:38 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 17:13:38 -Generating unique operation named: addUsingGET_7
2021-06-07 17:13:38 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 17:13:38 -Generating unique operation named: editUsingGET_8
2021-06-07 17:13:38 -Generating unique operation named: listUsingGET_9
2021-06-07 17:13:38 -Generating unique operation named: saveUsingPOST_7
2021-06-07 17:13:38 -Generating unique operation named: saveUsingPOST_8
2021-06-07 17:13:38 -Generating unique operation named: updateUsingPOST_8
2021-06-07 17:13:39 -Generating unique operation named: listUsingGET_10
2021-06-07 17:13:39 -Generating unique operation named: listUsingHEAD_1
2021-06-07 17:13:39 -Generating unique operation named: listUsingPOST_1
2021-06-07 17:13:39 -Generating unique operation named: listUsingPUT_1
2021-06-07 17:13:39 -Generating unique operation named: listUsingPATCH_1
2021-06-07 17:13:39 -Generating unique operation named: listUsingDELETE_1
2021-06-07 17:13:39 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 17:13:39 -Generating unique operation named: listUsingTRACE_1
2021-06-07 17:13:39 -Generating unique operation named: addUsingGET_8
2021-06-07 17:13:39 -Generating unique operation named: editUsingGET_9
2021-06-07 17:13:39 -Generating unique operation named: listUsingGET_11
2021-06-07 17:13:39 -Generating unique operation named: removeUsingPOST_14
2021-06-07 17:13:39 -Generating unique operation named: removeUsingPOST_15
2021-06-07 17:13:39 -Generating unique operation named: saveUsingPOST_9
2021-06-07 17:13:39 -Generating unique operation named: updateUsingGET_5
2021-06-07 17:13:39 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 17:13:39 -Generating unique operation named: updateUsingPOST_9
2021-06-07 17:13:39 -Generating unique operation named: updateUsingPUT_5
2021-06-07 17:13:39 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 17:13:39 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 17:13:39 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 17:13:39 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 17:13:39 -Generating unique operation named: addUsingGET_9
2021-06-07 17:13:39 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 17:13:39 -Generating unique operation named: editUsingGET_10
2021-06-07 17:13:39 -Generating unique operation named: listUsingGET_12
2021-06-07 17:13:39 -Generating unique operation named: removeUsingPOST_16
2021-06-07 17:13:39 -Generating unique operation named: saveUsingPOST_10
2021-06-07 17:13:39 -Generating unique operation named: treeUsingGET_3
2021-06-07 17:13:39 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 17:13:39 -Generating unique operation named: updateUsingPOST_10
2021-06-07 17:13:39 -Starting Quartz Scheduler now
2021-06-07 17:13:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 17:13:39 -Starting...
2021-06-07 17:13:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 17:13:39 -Started.
2021-06-07 17:13:39 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 17:13:39 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 17:13:39 -Using a shared selector for servlet write/read
2021-06-07 17:13:39 -Tomcat started on port(s): 8088 (http)
2021-06-07 17:13:39 -Started BootdoApplication in 6.922 seconds (JVM running for 7.565)
2021-06-07 17:13:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 17:13:43 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 17:13:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2021-06-07 17:13:43 -Enabling session validation scheduler...
2021-06-07 17:13:43 -请求地址 : http://localhost:8088/login;JSESSIONID=efc6304b-0a69-4505-a02b-6f9f144ba70e
2021-06-07 17:13:43 -HTTP METHOD : GET
2021-06-07 17:13:43 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:13:43 -参数 : []
2021-06-07 17:13:43 -耗时 : 1
2021-06-07 17:13:43 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 17:13:43 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 17:13:43 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 17:13:43 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 17:13:43 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 17:13:43 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * HTML5
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 17:13:43 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 17:13:44 -请求地址 : http://localhost:8088/login
2021-06-07 17:13:44 -HTTP METHOD : POST
2021-06-07 17:13:44 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:13:44 -参数 : [admin, Dm202007sc]
2021-06-07 17:13:44 -耗时 : 5
2021-06-07 17:13:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 17:13:44 -请求地址 : http://localhost:8088/index
2021-06-07 17:13:44 -HTTP METHOD : GET
2021-06-07 17:13:44 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:13:44 -参数 : [{}]
2021-06-07 17:13:44 -耗时 : 21
2021-06-07 17:13:44 -请求地址 : http://localhost:8088/main
2021-06-07 17:13:44 -HTTP METHOD : GET
2021-06-07 17:13:44 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:13:44 -参数 : []
2021-06-07 17:13:44 -耗时 : 0
2021-06-07 17:13:44 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:13:44 -HTTP METHOD : GET
2021-06-07 17:13:44 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:13:44 -参数 : []
2021-06-07 17:13:44 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$d9c0101f.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:13:44 -请求地址 : http://localhost:8088/main
2021-06-07 17:13:44 -HTTP METHOD : GET
2021-06-07 17:13:44 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:13:44 -参数 : []
2021-06-07 17:13:44 -耗时 : 1
2021-06-07 17:13:46 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:13:46 -HTTP METHOD : GET
2021-06-07 17:13:46 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:13:46 -参数 : []
2021-06-07 17:13:46 -耗时 : 1
2021-06-07 17:13:46 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:13:46 -HTTP METHOD : GET
2021-06-07 17:13:46 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:13:46 -参数 : [{limit=10, offset=0}]
2021-06-07 17:13:46 -耗时 : 12
2021-06-07 17:13:50 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:13:50 -HTTP METHOD : GET
2021-06-07 17:13:50 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:13:50 -参数 : []
2021-06-07 17:13:50 -耗时 : 1
2021-06-07 17:13:55 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:13:55 -HTTP METHOD : POST
2021-06-07 17:13:55 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:13:55 -参数 : [com.shiguang.mfrs.domain.MfrsDO@a6cee02]
2021-06-07 17:13:55 -耗时 : 37
2021-06-07 17:13:55 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:13:55 -HTTP METHOD : GET
2021-06-07 17:13:55 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:13:55 -参数 : [{limit=10, offset=0}]
2021-06-07 17:13:55 -耗时 : 3
2021-06-07 17:14:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 13]
2021-06-07 17:15:04 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 1188 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 17:15:04 -The following profiles are active: dev
2021-06-07 17:15:04 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 17:15:04 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:15:04 CST 2021]; root of context hierarchy
2021-06-07 17:15:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 17:15:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e77e0b7f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:15:05 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d808d681] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:15:06 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:15:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:15:06 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 17:15:06 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 17:15:06 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:15:06 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:15:06 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:15:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:15:06 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 17:15:06 -Starting service [Tomcat]
2021-06-07 17:15:06 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 17:15:06 -Initializing Spring embedded WebApplicationContext
2021-06-07 17:15:06 -Root WebApplicationContext: initialization completed in 2066 ms
2021-06-07 17:15:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 17:15:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 17:15:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 17:15:06 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 17:15:06 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 17:15:06 -Filter xssFilter was not registered (disabled)
2021-06-07 17:15:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 17:15:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 17:15:06 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 17:15:06 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 17:15:07 -{dataSource-1} inited
2021-06-07 17:15:07 -Using default implementation for ThreadExecutor
2021-06-07 17:15:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 17:15:07 -Quartz Scheduler v.2.2.1 created.
2021-06-07 17:15:07 -RAMJobStore initialized.
2021-06-07 17:15:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 17:15:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 17:15:07 -Quartz scheduler version: 2.2.1
2021-06-07 17:15:07 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@6459f4ea
2021-06-07 17:15:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 17:15:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 17:15:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 17:15:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 17:15:08 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 17:15:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 17:15:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 17:15:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 17:15:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 17:15:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 17:15:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 17:15:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 17:15:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 17:15:08 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 17:15:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 17:15:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 17:15:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 17:15:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:15:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 17:15:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:15:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 17:15:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 17:15:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 17:15:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 17:15:08 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 17:15:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 17:15:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 17:15:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 17:15:08 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:15:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:15:08 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 17:15:08 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 17:15:08 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 17:15:08 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 17:15:08 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:15:08 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:15:08 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 17:15:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 17:15:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 17:15:08 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:15:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:15:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 17:15:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 17:15:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 17:15:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 17:15:08 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 17:15:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 17:15:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 17:15:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 17:15:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 17:15:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 17:15:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 17:15:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 17:15:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 17:15:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 17:15:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 17:15:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 17:15:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 17:15:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 17:15:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 17:15:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 17:15:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 17:15:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 17:15:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 17:15:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 17:15:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 17:15:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 17:15:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 17:15:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 17:15:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 17:15:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 17:15:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 17:15:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 17:15:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 17:15:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 17:15:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:15:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:15:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:15:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 17:15:08 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 17:15:08 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 17:15:08 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 17:15:08 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 17:15:08 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:15:08 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 17:15:08 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 17:15:08 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:15:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:15:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 17:15:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 17:15:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 17:15:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 17:15:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 17:15:08 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 17:15:09 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:15:04 CST 2021]; root of context hierarchy
2021-06-07 17:15:09 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:15:09 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:15:09 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:15:09 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 17:15:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:15:09 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 17:15:10 -

Using default security password: 7a6b1a5b-21f1-4605-ae55-7ff72b06209b

2021-06-07 17:15:10 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 17:15:10 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@41b66d1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fb2c2f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@55e5415d, org.springframework.security.web.header.HeaderWriterFilter@7b8cb283, org.springframework.security.web.csrf.CsrfFilter@7157413e, org.springframework.security.web.authentication.logout.LogoutFilter@401b67a9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@146833a2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@351e86b2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@148fca83, org.springframework.security.web.session.SessionManagementFilter@662713b6, org.springframework.security.web.access.ExceptionTranslationFilter@6eb5b9e7]
2021-06-07 17:15:10 -Registering beans for JMX exposure on startup
2021-06-07 17:15:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 17:15:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 17:15:10 -Starting beans in phase 2147483647
2021-06-07 17:15:10 -Context refreshed
2021-06-07 17:15:10 -Found 1 custom documentation plugin(s)
2021-06-07 17:15:10 -Scanning for api listing references
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_1
2021-06-07 17:15:10 -Generating unique operation named: addUsingGET_1
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_1
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_1
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_2
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_3
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_1
2021-06-07 17:15:10 -Generating unique operation named: updateUsingGET_1
2021-06-07 17:15:10 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_1
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPUT_1
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 17:15:10 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 17:15:10 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 17:15:10 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 17:15:10 -Generating unique operation named: addUsingGET_2
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_2
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_2
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_4
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_5
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_2
2021-06-07 17:15:10 -Generating unique operation named: updateUsingGET_2
2021-06-07 17:15:10 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_2
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPUT_2
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 17:15:10 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 17:15:10 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 17:15:10 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_3
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_3
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_3
2021-06-07 17:15:10 -Generating unique operation named: addUsingGET_3
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_4
2021-06-07 17:15:10 -Generating unique operation named: infoUsingGET_1
2021-06-07 17:15:10 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 17:15:10 -Generating unique operation named: infoUsingPOST_1
2021-06-07 17:15:10 -Generating unique operation named: infoUsingPUT_1
2021-06-07 17:15:10 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 17:15:10 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 17:15:10 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 17:15:10 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_4
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_6
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_7
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_3
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_4
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_5
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_8
2021-06-07 17:15:10 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 17:15:10 -Generating unique operation named: addUsingGET_4
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_5
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_6
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_9
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_4
2021-06-07 17:15:10 -Generating unique operation named: treeUsingGET_1
2021-06-07 17:15:10 -Generating unique operation named: treeUsingGET_2
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_5
2021-06-07 17:15:10 -Generating unique operation named: addUsingGET_5
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_6
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_7
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_10
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_11
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_5
2021-06-07 17:15:10 -Generating unique operation named: updateUsingGET_3
2021-06-07 17:15:10 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_6
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPUT_3
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 17:15:10 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 17:15:10 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 17:15:10 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 17:15:10 -Generating unique operation named: addUsingGET_6
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_7
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_8
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_12
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_13
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_6
2021-06-07 17:15:10 -Generating unique operation named: updateUsingGET_4
2021-06-07 17:15:10 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_7
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPUT_4
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 17:15:10 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 17:15:10 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 17:15:10 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 17:15:10 -Generating unique operation named: addUsingGET_7
2021-06-07 17:15:10 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_8
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_9
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_7
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_8
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_8
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_10
2021-06-07 17:15:10 -Generating unique operation named: listUsingHEAD_1
2021-06-07 17:15:10 -Generating unique operation named: listUsingPOST_1
2021-06-07 17:15:10 -Generating unique operation named: listUsingPUT_1
2021-06-07 17:15:10 -Generating unique operation named: listUsingPATCH_1
2021-06-07 17:15:10 -Generating unique operation named: listUsingDELETE_1
2021-06-07 17:15:10 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 17:15:10 -Generating unique operation named: listUsingTRACE_1
2021-06-07 17:15:10 -Generating unique operation named: addUsingGET_8
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_9
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_11
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_14
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_15
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_9
2021-06-07 17:15:10 -Generating unique operation named: updateUsingGET_5
2021-06-07 17:15:10 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_9
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPUT_5
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 17:15:10 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 17:15:10 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 17:15:10 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 17:15:10 -Generating unique operation named: addUsingGET_9
2021-06-07 17:15:10 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 17:15:10 -Generating unique operation named: editUsingGET_10
2021-06-07 17:15:10 -Generating unique operation named: listUsingGET_12
2021-06-07 17:15:10 -Generating unique operation named: removeUsingPOST_16
2021-06-07 17:15:10 -Generating unique operation named: saveUsingPOST_10
2021-06-07 17:15:10 -Generating unique operation named: treeUsingGET_3
2021-06-07 17:15:10 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 17:15:10 -Generating unique operation named: updateUsingPOST_10
2021-06-07 17:15:10 -Starting Quartz Scheduler now
2021-06-07 17:15:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 17:15:10 -Starting...
2021-06-07 17:15:10 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 17:15:10 -Started.
2021-06-07 17:15:10 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 17:15:11 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 17:15:11 -Using a shared selector for servlet write/read
2021-06-07 17:15:11 -Tomcat started on port(s): 8088 (http)
2021-06-07 17:15:11 -Started BootdoApplication in 7.067 seconds (JVM running for 7.742)
2021-06-07 17:15:28 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 17:15:28 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 17:15:28 -FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2021-06-07 17:15:28 -Enabling session validation scheduler...
2021-06-07 17:15:28 -请求地址 : http://localhost:8088/login;JSESSIONID=44f8ea04-d550-499f-a16d-409d04925f6c
2021-06-07 17:15:28 -HTTP METHOD : GET
2021-06-07 17:15:28 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:15:28 -参数 : []
2021-06-07 17:15:28 -耗时 : 2
2021-06-07 17:15:28 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 17:15:28 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 17:15:28 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 17:15:28 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 17:15:28 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 17:15:28 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 17:15:28 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 17:15:29 -请求地址 : http://localhost:8088/login
2021-06-07 17:15:29 -HTTP METHOD : POST
2021-06-07 17:15:29 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:15:29 -参数 : [admin, Dm202007sc]
2021-06-07 17:15:29 -耗时 : 5
2021-06-07 17:15:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 17:15:29 -请求地址 : http://localhost:8088/index
2021-06-07 17:15:29 -HTTP METHOD : GET
2021-06-07 17:15:29 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:15:29 -参数 : [{}]
2021-06-07 17:15:29 -耗时 : 21
2021-06-07 17:15:29 -请求地址 : http://localhost:8088/main
2021-06-07 17:15:29 -HTTP METHOD : GET
2021-06-07 17:15:29 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:15:29 -参数 : []
2021-06-07 17:15:29 -耗时 : 0
2021-06-07 17:15:29 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:15:29 -HTTP METHOD : GET
2021-06-07 17:15:29 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:15:29 -参数 : []
2021-06-07 17:15:29 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$93170b92.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:15:29 -请求地址 : http://localhost:8088/main
2021-06-07 17:15:29 -HTTP METHOD : GET
2021-06-07 17:15:29 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:15:29 -参数 : []
2021-06-07 17:15:29 -耗时 : 2
2021-06-07 17:15:31 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:15:31 -HTTP METHOD : GET
2021-06-07 17:15:31 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:15:31 -参数 : []
2021-06-07 17:15:31 -耗时 : 0
2021-06-07 17:15:31 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:15:31 -HTTP METHOD : GET
2021-06-07 17:15:31 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:15:31 -参数 : [{limit=10, offset=0}]
2021-06-07 17:15:31 -耗时 : 11
2021-06-07 17:15:35 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:15:35 -HTTP METHOD : GET
2021-06-07 17:15:35 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:15:35 -参数 : []
2021-06-07 17:15:35 -耗时 : 0
2021-06-07 17:16:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 9]
2021-06-07 17:16:57 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 7160 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 17:16:57 -The following profiles are active: dev
2021-06-07 17:16:57 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 17:16:57 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:16:57 CST 2021]; root of context hierarchy
2021-06-07 17:16:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 17:16:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee47edf5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:16:58 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ded2b8f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:16:58 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:16:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:16:58 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 17:16:58 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 17:16:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:16:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:16:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:16:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:16:59 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 17:16:59 -Starting service [Tomcat]
2021-06-07 17:16:59 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 17:16:59 -Initializing Spring embedded WebApplicationContext
2021-06-07 17:16:59 -Root WebApplicationContext: initialization completed in 2047 ms
2021-06-07 17:16:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 17:16:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 17:16:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 17:16:59 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 17:16:59 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 17:16:59 -Filter xssFilter was not registered (disabled)
2021-06-07 17:16:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 17:16:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 17:16:59 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 17:16:59 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 17:16:59 -{dataSource-1} inited
2021-06-07 17:17:00 -Using default implementation for ThreadExecutor
2021-06-07 17:17:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 17:17:00 -Quartz Scheduler v.2.2.1 created.
2021-06-07 17:17:00 -RAMJobStore initialized.
2021-06-07 17:17:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 17:17:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 17:17:00 -Quartz scheduler version: 2.2.1
2021-06-07 17:17:00 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@2c9306d3
2021-06-07 17:17:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 17:17:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 17:17:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 17:17:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 17:17:01 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 17:17:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 17:17:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 17:17:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 17:17:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 17:17:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 17:17:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 17:17:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 17:17:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 17:17:01 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 17:17:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 17:17:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 17:17:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 17:17:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:17:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 17:17:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:17:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 17:17:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 17:17:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 17:17:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 17:17:01 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 17:17:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 17:17:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 17:17:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 17:17:01 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:17:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:17:01 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 17:17:01 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 17:17:01 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 17:17:01 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 17:17:01 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:17:01 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:17:01 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 17:17:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 17:17:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 17:17:01 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:17:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:17:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 17:17:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 17:17:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 17:17:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 17:17:01 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 17:17:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 17:17:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 17:17:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 17:17:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 17:17:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 17:17:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 17:17:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 17:17:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 17:17:01 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 17:17:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 17:17:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 17:17:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 17:17:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 17:17:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 17:17:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 17:17:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 17:17:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 17:17:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 17:17:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 17:17:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 17:17:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 17:17:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 17:17:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 17:17:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 17:17:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 17:17:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 17:17:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 17:17:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 17:17:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:17:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:17:01 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 17:17:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:17:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 17:17:01 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 17:17:01 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 17:17:01 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 17:17:01 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 17:17:01 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:17:01 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 17:17:01 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 17:17:01 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:17:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:17:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 17:17:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 17:17:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 17:17:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 17:17:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 17:17:01 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 17:17:01 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:16:57 CST 2021]; root of context hierarchy
2021-06-07 17:17:01 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:17:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:17:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:17:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 17:17:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:17:02 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 17:17:02 -

Using default security password: 32f3c96e-a287-4f8c-8dbb-456f9f6f376a

2021-06-07 17:17:02 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 17:17:02 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@4e3ee457, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@41b66d1, org.springframework.security.web.context.SecurityContextPersistenceFilter@4df13dd0, org.springframework.security.web.header.HeaderWriterFilter@c0004b7, org.springframework.security.web.csrf.CsrfFilter@2e4b5da1, org.springframework.security.web.authentication.logout.LogoutFilter@12532e37, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30665461, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6fa7ce4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fb2c2f3, org.springframework.security.web.session.SessionManagementFilter@4d75c604, org.springframework.security.web.access.ExceptionTranslationFilter@39ead1b7]
2021-06-07 17:17:02 -Registering beans for JMX exposure on startup
2021-06-07 17:17:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 17:17:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 17:17:02 -Starting beans in phase 2147483647
2021-06-07 17:17:02 -Context refreshed
2021-06-07 17:17:03 -Found 1 custom documentation plugin(s)
2021-06-07 17:17:03 -Scanning for api listing references
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_1
2021-06-07 17:17:03 -Generating unique operation named: addUsingGET_1
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_1
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_1
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_2
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_3
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_1
2021-06-07 17:17:03 -Generating unique operation named: updateUsingGET_1
2021-06-07 17:17:03 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_1
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPUT_1
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 17:17:03 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 17:17:03 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 17:17:03 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 17:17:03 -Generating unique operation named: addUsingGET_2
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_2
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_2
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_4
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_5
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_2
2021-06-07 17:17:03 -Generating unique operation named: updateUsingGET_2
2021-06-07 17:17:03 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_2
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPUT_2
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 17:17:03 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 17:17:03 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 17:17:03 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_3
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_3
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_3
2021-06-07 17:17:03 -Generating unique operation named: addUsingGET_3
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_4
2021-06-07 17:17:03 -Generating unique operation named: infoUsingGET_1
2021-06-07 17:17:03 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 17:17:03 -Generating unique operation named: infoUsingPOST_1
2021-06-07 17:17:03 -Generating unique operation named: infoUsingPUT_1
2021-06-07 17:17:03 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 17:17:03 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 17:17:03 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 17:17:03 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_4
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_6
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_7
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_3
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_4
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_5
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_8
2021-06-07 17:17:03 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 17:17:03 -Generating unique operation named: addUsingGET_4
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_5
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_6
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_9
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_4
2021-06-07 17:17:03 -Generating unique operation named: treeUsingGET_1
2021-06-07 17:17:03 -Generating unique operation named: treeUsingGET_2
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_5
2021-06-07 17:17:03 -Generating unique operation named: addUsingGET_5
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_6
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_7
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_10
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_11
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_5
2021-06-07 17:17:03 -Generating unique operation named: updateUsingGET_3
2021-06-07 17:17:03 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_6
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPUT_3
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 17:17:03 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 17:17:03 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 17:17:03 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 17:17:03 -Generating unique operation named: addUsingGET_6
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_7
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_8
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_12
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_13
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_6
2021-06-07 17:17:03 -Generating unique operation named: updateUsingGET_4
2021-06-07 17:17:03 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_7
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPUT_4
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 17:17:03 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 17:17:03 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 17:17:03 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 17:17:03 -Generating unique operation named: addUsingGET_7
2021-06-07 17:17:03 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_8
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_9
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_7
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_8
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_8
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_10
2021-06-07 17:17:03 -Generating unique operation named: listUsingHEAD_1
2021-06-07 17:17:03 -Generating unique operation named: listUsingPOST_1
2021-06-07 17:17:03 -Generating unique operation named: listUsingPUT_1
2021-06-07 17:17:03 -Generating unique operation named: listUsingPATCH_1
2021-06-07 17:17:03 -Generating unique operation named: listUsingDELETE_1
2021-06-07 17:17:03 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 17:17:03 -Generating unique operation named: listUsingTRACE_1
2021-06-07 17:17:03 -Generating unique operation named: addUsingGET_8
2021-06-07 17:17:03 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_9
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_11
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_14
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_9
2021-06-07 17:17:03 -Generating unique operation named: treeUsingGET_3
2021-06-07 17:17:03 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_9
2021-06-07 17:17:03 -Generating unique operation named: addUsingGET_9
2021-06-07 17:17:03 -Generating unique operation named: editUsingGET_10
2021-06-07 17:17:03 -Generating unique operation named: listUsingGET_12
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_15
2021-06-07 17:17:03 -Generating unique operation named: removeUsingPOST_16
2021-06-07 17:17:03 -Generating unique operation named: saveUsingPOST_10
2021-06-07 17:17:03 -Generating unique operation named: updateUsingGET_5
2021-06-07 17:17:03 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPOST_10
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPUT_5
2021-06-07 17:17:03 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 17:17:03 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 17:17:03 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 17:17:03 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 17:17:03 -Starting Quartz Scheduler now
2021-06-07 17:17:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 17:17:03 -Starting...
2021-06-07 17:17:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 17:17:03 -Started.
2021-06-07 17:17:03 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 17:17:03 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 17:17:03 -Using a shared selector for servlet write/read
2021-06-07 17:17:03 -Tomcat started on port(s): 8088 (http)
2021-06-07 17:17:03 -Started BootdoApplication in 6.997 seconds (JVM running for 7.655)
2021-06-07 17:17:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 17:17:09 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 17:17:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2021-06-07 17:17:09 -Enabling session validation scheduler...
2021-06-07 17:17:09 -请求地址 : http://localhost:8088/login;JSESSIONID=6ddb6537-6925-4a93-a62f-647ed148f9bd
2021-06-07 17:17:09 -HTTP METHOD : GET
2021-06-07 17:17:09 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:17:09 -参数 : []
2021-06-07 17:17:09 -耗时 : 1
2021-06-07 17:17:09 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 17:17:09 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 17:17:09 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 17:17:09 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 17:17:09 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 17:17:09 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * HTML5
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * XHTML
[THYMELEAF]     * XML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 17:17:09 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 17:17:11 -请求地址 : http://localhost:8088/login
2021-06-07 17:17:11 -HTTP METHOD : POST
2021-06-07 17:17:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:17:11 -参数 : [admin, Dm202007sc]
2021-06-07 17:17:11 -耗时 : 5
2021-06-07 17:17:11 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 17:17:11 -请求地址 : http://localhost:8088/index
2021-06-07 17:17:11 -HTTP METHOD : GET
2021-06-07 17:17:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:17:11 -参数 : [{}]
2021-06-07 17:17:11 -耗时 : 20
2021-06-07 17:17:11 -请求地址 : http://localhost:8088/main
2021-06-07 17:17:11 -HTTP METHOD : GET
2021-06-07 17:17:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:17:11 -参数 : []
2021-06-07 17:17:11 -耗时 : 1
2021-06-07 17:17:11 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:17:11 -HTTP METHOD : GET
2021-06-07 17:17:11 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:17:11 -参数 : []
2021-06-07 17:17:11 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:17:11 -请求地址 : http://localhost:8088/main
2021-06-07 17:17:11 -HTTP METHOD : GET
2021-06-07 17:17:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:17:11 -参数 : []
2021-06-07 17:17:11 -耗时 : 0
2021-06-07 17:17:13 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:17:13 -HTTP METHOD : GET
2021-06-07 17:17:13 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:17:13 -参数 : []
2021-06-07 17:17:13 -耗时 : 0
2021-06-07 17:17:13 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:17:13 -HTTP METHOD : GET
2021-06-07 17:17:13 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:17:13 -参数 : [{limit=10, offset=0}]
2021-06-07 17:17:13 -耗时 : 10
2021-06-07 17:17:15 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:17:15 -HTTP METHOD : GET
2021-06-07 17:17:15 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:17:15 -参数 : []
2021-06-07 17:17:15 -耗时 : 1
2021-06-07 17:17:23 -请求地址 : http://localhost:8088/mfrs/mfrs/edit/2
2021-06-07 17:17:23 -HTTP METHOD : GET
2021-06-07 17:17:23 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.edit
2021-06-07 17:17:23 -参数 : [2, {}]
2021-06-07 17:17:23 -耗时 : 3
2021-06-07 17:17:23 -[THYMELEAF][http-nio-8088-exec-7] Exception processing template "mfrs/mfrs/edit": Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)
2021-06-07 17:17:23 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'mfrs_id' cannot be found on object of type 'com.shiguang.mfrs.domain.MfrsDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:17:24 -请求地址 : http://localhost:8088/
2021-06-07 17:17:24 -HTTP METHOD : GET
2021-06-07 17:17:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 17:17:24 -参数 : [{}]
2021-06-07 17:17:24 -耗时 : 0
2021-06-07 17:17:24 -请求地址 : http://localhost:8088/login
2021-06-07 17:17:24 -HTTP METHOD : GET
2021-06-07 17:17:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:17:24 -参数 : []
2021-06-07 17:17:24 -耗时 : 0
2021-06-07 17:17:24 -请求地址 : http://localhost:8088/login
2021-06-07 17:17:24 -HTTP METHOD : GET
2021-06-07 17:17:24 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:17:24 -参数 : []
2021-06-07 17:17:24 -耗时 : 1
2021-06-07 17:17:26 -请求地址 : http://localhost:8088/login
2021-06-07 17:17:26 -HTTP METHOD : POST
2021-06-07 17:17:26 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:17:26 -参数 : [admin, Dm202007sc]
2021-06-07 17:17:26 -耗时 : 2
2021-06-07 17:17:26 -请求地址 : http://localhost:8088/index
2021-06-07 17:17:26 -HTTP METHOD : GET
2021-06-07 17:17:26 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:17:26 -参数 : [{}]
2021-06-07 17:17:26 -耗时 : 6
2021-06-07 17:17:26 -请求地址 : http://localhost:8088/main
2021-06-07 17:17:26 -HTTP METHOD : GET
2021-06-07 17:17:26 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:17:26 -参数 : []
2021-06-07 17:17:26 -耗时 : 1
2021-06-07 17:17:26 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:17:26 -HTTP METHOD : GET
2021-06-07 17:17:26 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:17:26 -参数 : []
2021-06-07 17:17:26 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:17:26 -请求地址 : http://localhost:8088/main
2021-06-07 17:17:26 -HTTP METHOD : GET
2021-06-07 17:17:26 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:17:26 -参数 : []
2021-06-07 17:17:26 -耗时 : 1
2021-06-07 17:17:29 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:17:29 -HTTP METHOD : GET
2021-06-07 17:17:29 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:17:29 -参数 : []
2021-06-07 17:17:29 -耗时 : 0
2021-06-07 17:17:29 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:17:29 -HTTP METHOD : GET
2021-06-07 17:17:29 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:17:29 -参数 : [{limit=10, offset=0}]
2021-06-07 17:17:29 -耗时 : 3
2021-06-07 17:17:30 -请求地址 : http://localhost:8088/mfrs/mfrs/edit/2
2021-06-07 17:17:30 -HTTP METHOD : GET
2021-06-07 17:17:30 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.edit
2021-06-07 17:17:30 -参数 : [2, {}]
2021-06-07 17:17:30 -耗时 : 2
2021-06-07 17:17:30 -[THYMELEAF][http-nio-8088-exec-6] Exception processing template "mfrs/mfrs/edit": Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)
2021-06-07 17:17:30 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'mfrs_id' cannot be found on object of type 'com.shiguang.mfrs.domain.MfrsDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:17:34 -请求地址 : http://localhost:8088/mfrs/mfrs/remove
2021-06-07 17:17:34 -HTTP METHOD : POST
2021-06-07 17:17:34 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.remove
2021-06-07 17:17:34 -参数 : [2]
2021-06-07 17:17:34 -耗时 : 41
2021-06-07 17:17:34 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:17:34 -HTTP METHOD : GET
2021-06-07 17:17:34 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:17:34 -参数 : [{limit=10, offset=0}]
2021-06-07 17:17:34 -耗时 : 1
2021-06-07 17:17:37 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:17:37 -HTTP METHOD : GET
2021-06-07 17:17:37 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:17:37 -参数 : []
2021-06-07 17:17:37 -耗时 : 0
2021-06-07 17:17:43 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:17:43 -HTTP METHOD : POST
2021-06-07 17:17:43 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:17:43 -参数 : [com.shiguang.mfrs.domain.MfrsDO@1f54c99d]
2021-06-07 17:17:43 -耗时 : 40
2021-06-07 17:17:43 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:17:43 -HTTP METHOD : GET
2021-06-07 17:17:43 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:17:43 -参数 : [{limit=10, offset=0}]
2021-06-07 17:17:43 -耗时 : 3
2021-06-07 17:17:46 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:17:46 -HTTP METHOD : GET
2021-06-07 17:17:46 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:17:46 -参数 : []
2021-06-07 17:17:46 -耗时 : 0
2021-06-07 17:17:50 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:17:50 -HTTP METHOD : POST
2021-06-07 17:17:50 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:17:50 -参数 : [com.shiguang.mfrs.domain.MfrsDO@4d893070]
2021-06-07 17:17:50 -耗时 : 42
2021-06-07 17:17:50 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:17:50 -HTTP METHOD : GET
2021-06-07 17:17:50 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:17:50 -参数 : [{limit=10, offset=0}]
2021-06-07 17:17:50 -耗时 : 5
2021-06-07 17:17:53 -请求地址 : http://localhost:8088/mfrs/mfrs/batchRemove
2021-06-07 17:17:53 -HTTP METHOD : POST
2021-06-07 17:17:53 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.remove
2021-06-07 17:17:53 -参数 : [[Ljava.lang.Integer;@7f91d00f]
2021-06-07 17:17:54 -耗时 : 23
2021-06-07 17:17:54 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:17:54 -HTTP METHOD : GET
2021-06-07 17:17:54 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:17:54 -参数 : [{limit=10, offset=0}]
2021-06-07 17:17:54 -耗时 : 3
2021-06-07 17:17:54 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:17:54 -HTTP METHOD : GET
2021-06-07 17:17:54 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:17:54 -参数 : []
2021-06-07 17:17:54 -耗时 : 0
2021-06-07 17:17:59 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:17:59 -HTTP METHOD : POST
2021-06-07 17:17:59 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:17:59 -参数 : [com.shiguang.mfrs.domain.MfrsDO@17551d3f]
2021-06-07 17:17:59 -耗时 : 75
2021-06-07 17:17:59 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:17:59 -HTTP METHOD : GET
2021-06-07 17:17:59 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:17:59 -参数 : [{limit=10, offset=0}]
2021-06-07 17:17:59 -耗时 : 3
2021-06-07 17:18:01 -请求地址 : http://localhost:8088/mfrs/mfrs/edit/5
2021-06-07 17:18:01 -HTTP METHOD : GET
2021-06-07 17:18:01 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.edit
2021-06-07 17:18:01 -参数 : [5, {}]
2021-06-07 17:18:01 -耗时 : 3
2021-06-07 17:18:01 -[THYMELEAF][http-nio-8088-exec-10] Exception processing template "mfrs/mfrs/edit": Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)
2021-06-07 17:18:01 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'mfrs_id' cannot be found on object of type 'com.shiguang.mfrs.domain.MfrsDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:18:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 2, completed tasks = 11]
2021-06-07 17:18:05 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 17:18:05 -HTTP METHOD : GET
2021-06-07 17:18:05 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 17:18:05 -参数 : [{}]
2021-06-07 17:18:05 -耗时 : 0
2021-06-07 17:18:05 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:18:05 -HTTP METHOD : GET
2021-06-07 17:18:05 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:18:05 -参数 : [{sort=order_num}]
2021-06-07 17:18:05 -耗时 : 11
2021-06-07 17:18:32 -请求地址 : http://localhost:8088/sys/menu/edit/283
2021-06-07 17:18:32 -HTTP METHOD : GET
2021-06-07 17:18:32 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:18:32 -参数 : [{}, 283]
2021-06-07 17:18:32 -耗时 : 6
2021-06-07 17:18:36 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:18:36 -HTTP METHOD : POST
2021-06-07 17:18:36 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:18:36 -参数 : [MenuDO{menuId=283, parentId=280, name='修改', url='', perms='mfrs:mfrs:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:18:36 -耗时 : 28
2021-06-07 17:18:36 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:18:36 -HTTP METHOD : GET
2021-06-07 17:18:36 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:18:36 -参数 : [{sort=order_num}]
2021-06-07 17:18:36 -耗时 : 9
2021-06-07 17:18:39 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 17:18:39 -HTTP METHOD : GET
2021-06-07 17:18:39 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 17:18:39 -参数 : []
2021-06-07 17:18:39 -耗时 : 1
2021-06-07 17:18:39 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 17:18:39 -HTTP METHOD : GET
2021-06-07 17:18:39 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 17:18:39 -参数 : []
2021-06-07 17:18:39 -耗时 : 2
2021-06-07 17:18:40 -请求地址 : http://localhost:8088/sys/role/edit/2
2021-06-07 17:18:40 -HTTP METHOD : GET
2021-06-07 17:18:40 -CLASS_METHOD : com.shiguang.system.controller.RoleController.edit
2021-06-07 17:18:40 -参数 : [2, {}]
2021-06-07 17:18:40 -耗时 : 2
2021-06-07 17:18:40 -请求地址 : http://localhost:8088/sys/menu/tree/2
2021-06-07 17:18:40 -HTTP METHOD : GET
2021-06-07 17:18:40 -CLASS_METHOD : com.shiguang.system.controller.MenuController.tree
2021-06-07 17:18:40 -参数 : [2]
2021-06-07 17:18:40 -耗时 : 6
2021-06-07 17:18:42 -请求地址 : http://localhost:8088/sys/role/update
2021-06-07 17:18:42 -HTTP METHOD : POST
2021-06-07 17:18:42 -CLASS_METHOD : com.shiguang.system.controller.RoleController.update
2021-06-07 17:18:42 -参数 : [RoleDO{roleId=2, roleName='admin', roleSign='null', remark='超级管理权限', userIdCreate=null, gmtCreate=2019-03-19 16:28:02.0, gmtModified=null, menuIds=[-1, 285, 284, 283, 282, 280, 271, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 113, 105, 61, 22, 21, 20, 2, 279, 270, 104, 3], status=null}]
2021-06-07 17:18:42 -耗时 : 105
2021-06-07 17:18:42 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 17:18:42 -HTTP METHOD : GET
2021-06-07 17:18:42 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 17:18:42 -参数 : []
2021-06-07 17:18:42 -耗时 : 1
2021-06-07 17:18:44 -请求地址 : http://localhost:8088/
2021-06-07 17:18:44 -HTTP METHOD : GET
2021-06-07 17:18:44 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 17:18:44 -参数 : [{}]
2021-06-07 17:18:44 -耗时 : 0
2021-06-07 17:18:44 -请求地址 : http://localhost:8088/login
2021-06-07 17:18:44 -HTTP METHOD : GET
2021-06-07 17:18:44 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:18:44 -参数 : []
2021-06-07 17:18:44 -耗时 : 1
2021-06-07 17:18:45 -请求地址 : http://localhost:8088/login
2021-06-07 17:18:45 -HTTP METHOD : POST
2021-06-07 17:18:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:18:45 -参数 : [admin, Dm202007sc]
2021-06-07 17:18:45 -耗时 : 2
2021-06-07 17:18:45 -请求地址 : http://localhost:8088/index
2021-06-07 17:18:45 -HTTP METHOD : GET
2021-06-07 17:18:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:18:45 -参数 : [{}]
2021-06-07 17:18:45 -耗时 : 4
2021-06-07 17:18:45 -请求地址 : http://localhost:8088/main
2021-06-07 17:18:45 -HTTP METHOD : GET
2021-06-07 17:18:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:18:45 -参数 : []
2021-06-07 17:18:45 -耗时 : 1
2021-06-07 17:18:45 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:18:45 -HTTP METHOD : GET
2021-06-07 17:18:45 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:18:45 -参数 : []
2021-06-07 17:18:45 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:18:45 -请求地址 : http://localhost:8088/main
2021-06-07 17:18:45 -HTTP METHOD : GET
2021-06-07 17:18:45 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:18:45 -参数 : []
2021-06-07 17:18:45 -耗时 : 0
2021-06-07 17:18:46 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:18:46 -HTTP METHOD : GET
2021-06-07 17:18:46 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:18:46 -参数 : []
2021-06-07 17:18:46 -耗时 : 0
2021-06-07 17:18:46 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:18:46 -HTTP METHOD : GET
2021-06-07 17:18:46 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:18:46 -参数 : [{limit=10, offset=0}]
2021-06-07 17:18:46 -耗时 : 4
2021-06-07 17:18:48 -请求地址 : http://localhost:8088/mfrs/mfrs/edit/5
2021-06-07 17:18:48 -HTTP METHOD : GET
2021-06-07 17:18:48 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.edit
2021-06-07 17:18:48 -参数 : [5, {}]
2021-06-07 17:18:48 -耗时 : 1
2021-06-07 17:18:48 -[THYMELEAF][http-nio-8088-exec-3] Exception processing template "mfrs/mfrs/edit": Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)
2021-06-07 17:18:48 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'mfrs_id' cannot be found on object of type 'com.shiguang.mfrs.domain.MfrsDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:19:05 -请求地址 : http://localhost:8088/sys/user/
2021-06-07 17:19:05 -HTTP METHOD : GET
2021-06-07 17:19:05 -CLASS_METHOD : com.shiguang.system.controller.UserController.user
2021-06-07 17:19:05 -参数 : [{}]
2021-06-07 17:19:05 -耗时 : 0
2021-06-07 17:19:05 -请求地址 : http://localhost:8088/sys/user/list
2021-06-07 17:19:05 -HTTP METHOD : GET
2021-06-07 17:19:05 -CLASS_METHOD : com.shiguang.system.controller.UserController.list
2021-06-07 17:19:05 -参数 : [{limit=10, offset=0, name=, deptId=}]
2021-06-07 17:19:05 -耗时 : 9
2021-06-07 17:19:07 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 17:19:07 -HTTP METHOD : GET
2021-06-07 17:19:07 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 17:19:07 -参数 : [{}]
2021-06-07 17:19:07 -耗时 : 1
2021-06-07 17:19:07 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:19:07 -HTTP METHOD : GET
2021-06-07 17:19:07 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:19:07 -参数 : [{sort=order_num}]
2021-06-07 17:19:07 -耗时 : 3
2021-06-07 17:19:44 -请求地址 : http://localhost:8088/sys/menu/edit/283
2021-06-07 17:19:44 -HTTP METHOD : GET
2021-06-07 17:19:44 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:19:44 -参数 : [{}, 283]
2021-06-07 17:19:44 -耗时 : 7
2021-06-07 17:19:48 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:19:48 -HTTP METHOD : POST
2021-06-07 17:19:48 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:19:48 -参数 : [MenuDO{menuId=283, parentId=280, name='修改', url='', perms='mfrs:mfrs:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:19:49 -耗时 : 22
2021-06-07 17:19:49 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:19:49 -HTTP METHOD : GET
2021-06-07 17:19:49 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:19:49 -参数 : [{sort=order_num}]
2021-06-07 17:19:49 -耗时 : 4
2021-06-07 17:19:56 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 17:19:56 -HTTP METHOD : GET
2021-06-07 17:19:56 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 17:19:56 -参数 : []
2021-06-07 17:19:56 -耗时 : 0
2021-06-07 17:19:56 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 17:19:56 -HTTP METHOD : GET
2021-06-07 17:19:56 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 17:19:56 -参数 : []
2021-06-07 17:19:56 -耗时 : 1
2021-06-07 17:19:57 -请求地址 : http://localhost:8088/sys/role/edit/2
2021-06-07 17:19:57 -HTTP METHOD : GET
2021-06-07 17:19:57 -CLASS_METHOD : com.shiguang.system.controller.RoleController.edit
2021-06-07 17:19:57 -参数 : [2, {}]
2021-06-07 17:19:57 -耗时 : 1
2021-06-07 17:19:57 -请求地址 : http://localhost:8088/sys/menu/tree/2
2021-06-07 17:19:57 -HTTP METHOD : GET
2021-06-07 17:19:57 -CLASS_METHOD : com.shiguang.system.controller.MenuController.tree
2021-06-07 17:19:57 -参数 : [2]
2021-06-07 17:19:57 -耗时 : 4
2021-06-07 17:20:01 -请求地址 : http://localhost:8088/sys/role/update
2021-06-07 17:20:01 -HTTP METHOD : POST
2021-06-07 17:20:01 -CLASS_METHOD : com.shiguang.system.controller.RoleController.update
2021-06-07 17:20:01 -参数 : [RoleDO{roleId=2, roleName='admin', roleSign='null', remark='超级管理权限', userIdCreate=null, gmtCreate=2019-03-19 16:28:02.0, gmtModified=null, menuIds=[-1, 285, 284, 283, 282, 280, 271, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 113, 105, 61, 22, 21, 20, 2, 279, 270, 104, 3], status=null}]
2021-06-07 17:20:01 -耗时 : 103
2021-06-07 17:20:01 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 17:20:01 -HTTP METHOD : GET
2021-06-07 17:20:01 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 17:20:01 -参数 : []
2021-06-07 17:20:01 -耗时 : 4
2021-06-07 17:20:02 -请求地址 : http://localhost:8088/
2021-06-07 17:20:02 -HTTP METHOD : GET
2021-06-07 17:20:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 17:20:02 -参数 : [{}]
2021-06-07 17:20:02 -耗时 : 1
2021-06-07 17:20:02 -请求地址 : http://localhost:8088/login
2021-06-07 17:20:02 -HTTP METHOD : GET
2021-06-07 17:20:02 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:20:02 -参数 : []
2021-06-07 17:20:02 -耗时 : 0
2021-06-07 17:20:03 -请求地址 : http://localhost:8088/login
2021-06-07 17:20:03 -HTTP METHOD : POST
2021-06-07 17:20:03 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:20:03 -参数 : [admin, Dm202007sc]
2021-06-07 17:20:03 -耗时 : 2
2021-06-07 17:20:03 -请求地址 : http://localhost:8088/index
2021-06-07 17:20:03 -HTTP METHOD : GET
2021-06-07 17:20:03 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:20:03 -参数 : [{}]
2021-06-07 17:20:03 -耗时 : 6
2021-06-07 17:20:03 -请求地址 : http://localhost:8088/main
2021-06-07 17:20:03 -HTTP METHOD : GET
2021-06-07 17:20:03 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:20:03 -参数 : []
2021-06-07 17:20:03 -耗时 : 1
2021-06-07 17:20:03 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:20:03 -HTTP METHOD : GET
2021-06-07 17:20:03 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:20:03 -参数 : []
2021-06-07 17:20:03 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:20:03 -请求地址 : http://localhost:8088/main
2021-06-07 17:20:03 -HTTP METHOD : GET
2021-06-07 17:20:03 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:20:03 -参数 : []
2021-06-07 17:20:03 -耗时 : 0
2021-06-07 17:20:05 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:20:05 -HTTP METHOD : GET
2021-06-07 17:20:05 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:20:05 -参数 : []
2021-06-07 17:20:05 -耗时 : 0
2021-06-07 17:20:05 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:20:05 -HTTP METHOD : GET
2021-06-07 17:20:05 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:20:05 -参数 : [{limit=10, offset=0}]
2021-06-07 17:20:05 -耗时 : 2
2021-06-07 17:20:08 -请求地址 : http://localhost:8088/mfrs/mfrs/edit/5
2021-06-07 17:20:08 -HTTP METHOD : GET
2021-06-07 17:20:08 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.edit
2021-06-07 17:20:08 -参数 : [5, {}]
2021-06-07 17:20:08 -耗时 : 2
2021-06-07 17:20:08 -[THYMELEAF][http-nio-8088-exec-6] Exception processing template "mfrs/mfrs/edit": Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)
2021-06-07 17:20:08 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'mfrs_id' cannot be found on object of type 'com.shiguang.mfrs.domain.MfrsDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:20:10 -请求地址 : http://localhost:8088/
2021-06-07 17:20:10 -HTTP METHOD : GET
2021-06-07 17:20:10 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 17:20:10 -参数 : [{}]
2021-06-07 17:20:10 -耗时 : 0
2021-06-07 17:20:10 -请求地址 : http://localhost:8088/login
2021-06-07 17:20:10 -HTTP METHOD : GET
2021-06-07 17:20:10 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:20:10 -参数 : []
2021-06-07 17:20:10 -耗时 : 1
2021-06-07 17:20:10 -请求地址 : http://localhost:8088/login
2021-06-07 17:20:10 -HTTP METHOD : GET
2021-06-07 17:20:10 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:20:10 -参数 : []
2021-06-07 17:20:10 -耗时 : 0
2021-06-07 17:20:11 -请求地址 : http://localhost:8088/login
2021-06-07 17:20:11 -HTTP METHOD : POST
2021-06-07 17:20:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:20:11 -参数 : [admin, Dm202007sc]
2021-06-07 17:20:11 -耗时 : 1
2021-06-07 17:20:11 -请求地址 : http://localhost:8088/index
2021-06-07 17:20:11 -HTTP METHOD : GET
2021-06-07 17:20:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:20:11 -参数 : [{}]
2021-06-07 17:20:11 -耗时 : 5
2021-06-07 17:20:11 -请求地址 : http://localhost:8088/main
2021-06-07 17:20:11 -HTTP METHOD : GET
2021-06-07 17:20:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:20:11 -参数 : []
2021-06-07 17:20:11 -耗时 : 1
2021-06-07 17:20:11 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:20:11 -HTTP METHOD : GET
2021-06-07 17:20:11 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:20:11 -参数 : []
2021-06-07 17:20:11 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:20:11 -请求地址 : http://localhost:8088/main
2021-06-07 17:20:11 -HTTP METHOD : GET
2021-06-07 17:20:11 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:20:11 -参数 : []
2021-06-07 17:20:11 -耗时 : 0
2021-06-07 17:20:14 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:20:14 -HTTP METHOD : GET
2021-06-07 17:20:14 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:20:14 -参数 : []
2021-06-07 17:20:14 -耗时 : 0
2021-06-07 17:20:14 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:20:14 -HTTP METHOD : GET
2021-06-07 17:20:14 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:20:14 -参数 : [{limit=10, offset=0}]
2021-06-07 17:20:14 -耗时 : 2
2021-06-07 17:20:16 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:20:16 -HTTP METHOD : GET
2021-06-07 17:20:16 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:20:16 -参数 : []
2021-06-07 17:20:16 -耗时 : 0
2021-06-07 17:20:22 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:20:22 -HTTP METHOD : POST
2021-06-07 17:20:22 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:20:22 -参数 : [com.shiguang.mfrs.domain.MfrsDO@3f73bfb6]
2021-06-07 17:20:23 -耗时 : 42
2021-06-07 17:20:23 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:20:23 -HTTP METHOD : GET
2021-06-07 17:20:23 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:20:23 -参数 : [{limit=10, offset=0}]
2021-06-07 17:20:23 -耗时 : 3
2021-06-07 17:20:28 -请求地址 : http://localhost:8088/mfrs/mfrs/edit/6
2021-06-07 17:20:28 -HTTP METHOD : GET
2021-06-07 17:20:28 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.edit
2021-06-07 17:20:28 -参数 : [6, {}]
2021-06-07 17:20:28 -耗时 : 2
2021-06-07 17:20:28 -[THYMELEAF][http-nio-8088-exec-5] Exception processing template "mfrs/mfrs/edit": Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)
2021-06-07 17:20:28 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'mfrs_id' cannot be found on object of type 'com.shiguang.mfrs.domain.MfrsDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:21:00 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 17:21:00 -HTTP METHOD : GET
2021-06-07 17:21:00 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 17:21:00 -参数 : [{}]
2021-06-07 17:21:00 -耗时 : 0
2021-06-07 17:21:00 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:21:00 -HTTP METHOD : GET
2021-06-07 17:21:00 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:21:00 -参数 : [{sort=order_num}]
2021-06-07 17:21:00 -耗时 : 3
2021-06-07 17:21:04 -请求地址 : http://localhost:8088/sys/menu/edit/280
2021-06-07 17:21:04 -HTTP METHOD : GET
2021-06-07 17:21:04 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:21:04 -参数 : [{}, 280]
2021-06-07 17:21:04 -耗时 : 5
2021-06-07 17:21:24 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:21:24 -HTTP METHOD : POST
2021-06-07 17:21:24 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:21:24 -参数 : [MenuDO{menuId=280, parentId=279, name='制造商维护', url='/mfrs/mfrs', perms='mfrs:mfrs:mfrs', type=1, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:21:24 -耗时 : 28
2021-06-07 17:21:24 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:21:24 -HTTP METHOD : GET
2021-06-07 17:21:24 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:21:24 -参数 : [{sort=order_num}]
2021-06-07 17:21:24 -耗时 : 4
2021-06-07 17:21:30 -请求地址 : http://localhost:8088/sys/menu/edit/279
2021-06-07 17:21:30 -HTTP METHOD : GET
2021-06-07 17:21:30 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:21:30 -参数 : [{}, 279]
2021-06-07 17:21:30 -耗时 : 2
2021-06-07 17:21:36 -请求地址 : http://localhost:8088/sys/menu/edit/282
2021-06-07 17:21:36 -HTTP METHOD : GET
2021-06-07 17:21:36 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:21:36 -参数 : [{}, 282]
2021-06-07 17:21:36 -耗时 : 3
2021-06-07 17:22:04 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:22:04 -HTTP METHOD : POST
2021-06-07 17:22:04 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:22:04 -参数 : [MenuDO{menuId=282, parentId=280, name='添加', url='mfrs/mfrs/add', perms='mfrs:mfrs:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:22:04 -耗时 : 44
2021-06-07 17:22:04 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:22:04 -HTTP METHOD : GET
2021-06-07 17:22:04 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:22:04 -参数 : [{sort=order_num}]
2021-06-07 17:22:04 -耗时 : 3
2021-06-07 17:22:10 -请求地址 : http://localhost:8088/sys/menu/edit/283
2021-06-07 17:22:10 -HTTP METHOD : GET
2021-06-07 17:22:10 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:22:10 -参数 : [{}, 283]
2021-06-07 17:22:10 -耗时 : 3
2021-06-07 17:22:50 -请求地址 : http://localhost:8088/sys/menu/edit/282
2021-06-07 17:22:50 -HTTP METHOD : GET
2021-06-07 17:22:50 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:22:50 -参数 : [{}, 282]
2021-06-07 17:22:50 -耗时 : 4
2021-06-07 17:22:56 -请求地址 : http://localhost:8088/sys/menu/edit/283
2021-06-07 17:22:56 -HTTP METHOD : GET
2021-06-07 17:22:56 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:22:56 -参数 : [{}, 283]
2021-06-07 17:22:56 -耗时 : 4
2021-06-07 17:23:24 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:23:24 -HTTP METHOD : POST
2021-06-07 17:23:24 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:23:24 -参数 : [MenuDO{menuId=283, parentId=280, name='修改', url='mfrs/mfrs/update', perms='mfrs:mfrs:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:23:24 -耗时 : 37
2021-06-07 17:23:24 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:23:24 -HTTP METHOD : GET
2021-06-07 17:23:24 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:23:24 -参数 : [{sort=order_num}]
2021-06-07 17:23:24 -耗时 : 3
2021-06-07 17:23:28 -请求地址 : http://localhost:8088/sys/menu/edit/284
2021-06-07 17:23:28 -HTTP METHOD : GET
2021-06-07 17:23:28 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:23:28 -参数 : [{}, 284]
2021-06-07 17:23:28 -耗时 : 6
2021-06-07 17:23:44 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:23:44 -HTTP METHOD : POST
2021-06-07 17:23:44 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:23:44 -参数 : [MenuDO{menuId=284, parentId=280, name='删除', url='', perms='mfrs:mfrs:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:23:44 -耗时 : 33
2021-06-07 17:23:44 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:23:44 -HTTP METHOD : GET
2021-06-07 17:23:44 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:23:44 -参数 : [{sort=order_num}]
2021-06-07 17:23:44 -耗时 : 2
2021-06-07 17:23:47 -请求地址 : http://localhost:8088/sys/role/
2021-06-07 17:23:47 -HTTP METHOD : GET
2021-06-07 17:23:47 -CLASS_METHOD : com.shiguang.system.controller.RoleController.role
2021-06-07 17:23:47 -参数 : []
2021-06-07 17:23:47 -耗时 : 0
2021-06-07 17:23:47 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 17:23:47 -HTTP METHOD : GET
2021-06-07 17:23:47 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 17:23:47 -参数 : []
2021-06-07 17:23:47 -耗时 : 2
2021-06-07 17:23:49 -请求地址 : http://localhost:8088/sys/role/edit/2
2021-06-07 17:23:49 -HTTP METHOD : GET
2021-06-07 17:23:49 -CLASS_METHOD : com.shiguang.system.controller.RoleController.edit
2021-06-07 17:23:49 -参数 : [2, {}]
2021-06-07 17:23:49 -耗时 : 1
2021-06-07 17:23:49 -请求地址 : http://localhost:8088/sys/menu/tree/2
2021-06-07 17:23:49 -HTTP METHOD : GET
2021-06-07 17:23:49 -CLASS_METHOD : com.shiguang.system.controller.MenuController.tree
2021-06-07 17:23:49 -参数 : [2]
2021-06-07 17:23:49 -耗时 : 3
2021-06-07 17:23:51 -请求地址 : http://localhost:8088/sys/role/update
2021-06-07 17:23:51 -HTTP METHOD : POST
2021-06-07 17:23:51 -CLASS_METHOD : com.shiguang.system.controller.RoleController.update
2021-06-07 17:23:51 -参数 : [RoleDO{roleId=2, roleName='admin', roleSign='null', remark='超级管理权限', userIdCreate=null, gmtCreate=2019-03-19 16:28:02.0, gmtModified=null, menuIds=[-1, 285, 284, 283, 282, 280, 271, 117, 116, 115, 114, 112, 111, 110, 109, 108, 107, 113, 105, 61, 22, 21, 20, 2, 279, 270, 104, 3], status=null}]
2021-06-07 17:23:52 -耗时 : 110
2021-06-07 17:23:52 -请求地址 : http://localhost:8088/sys/role/list
2021-06-07 17:23:52 -HTTP METHOD : GET
2021-06-07 17:23:52 -CLASS_METHOD : com.shiguang.system.controller.RoleController.list
2021-06-07 17:23:52 -参数 : []
2021-06-07 17:23:52 -耗时 : 2
2021-06-07 17:23:53 -请求地址 : http://localhost:8088/
2021-06-07 17:23:53 -HTTP METHOD : GET
2021-06-07 17:23:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 17:23:53 -参数 : [{}]
2021-06-07 17:23:53 -耗时 : 1
2021-06-07 17:23:53 -请求地址 : http://localhost:8088/login
2021-06-07 17:23:53 -HTTP METHOD : GET
2021-06-07 17:23:53 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:23:53 -参数 : []
2021-06-07 17:23:53 -耗时 : 1
2021-06-07 17:23:54 -请求地址 : http://localhost:8088/login
2021-06-07 17:23:54 -HTTP METHOD : POST
2021-06-07 17:23:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:23:54 -参数 : [admin, Dm202007sc]
2021-06-07 17:23:54 -耗时 : 2
2021-06-07 17:23:54 -请求地址 : http://localhost:8088/index
2021-06-07 17:23:54 -HTTP METHOD : GET
2021-06-07 17:23:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:23:54 -参数 : [{}]
2021-06-07 17:23:54 -耗时 : 3
2021-06-07 17:23:54 -请求地址 : http://localhost:8088/main
2021-06-07 17:23:54 -HTTP METHOD : GET
2021-06-07 17:23:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:23:54 -参数 : []
2021-06-07 17:23:54 -耗时 : 0
2021-06-07 17:23:54 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:23:54 -HTTP METHOD : GET
2021-06-07 17:23:54 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:23:54 -参数 : []
2021-06-07 17:23:54 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor112.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$ea54af4a.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:23:54 -请求地址 : http://localhost:8088/main
2021-06-07 17:23:54 -HTTP METHOD : GET
2021-06-07 17:23:54 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:23:54 -参数 : []
2021-06-07 17:23:54 -耗时 : 1
2021-06-07 17:23:56 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:23:56 -HTTP METHOD : GET
2021-06-07 17:23:56 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:23:56 -参数 : []
2021-06-07 17:23:56 -耗时 : 1
2021-06-07 17:23:56 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:23:56 -HTTP METHOD : GET
2021-06-07 17:23:56 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:23:56 -参数 : [{limit=10, offset=0}]
2021-06-07 17:23:56 -耗时 : 1
2021-06-07 17:23:57 -请求地址 : http://localhost:8088/mfrs/mfrs/edit/5
2021-06-07 17:23:57 -HTTP METHOD : GET
2021-06-07 17:23:57 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.edit
2021-06-07 17:23:57 -参数 : [5, {}]
2021-06-07 17:23:57 -耗时 : 2
2021-06-07 17:23:57 -[THYMELEAF][http-nio-8088-exec-7] Exception processing template "mfrs/mfrs/edit": Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)
2021-06-07 17:23:57 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'mfrs_id' cannot be found on object of type 'com.shiguang.mfrs.domain.MfrsDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:24:03 -请求地址 : http://localhost:8088/mfrs/mfrs/edit/6
2021-06-07 17:24:03 -HTTP METHOD : GET
2021-06-07 17:24:03 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.edit
2021-06-07 17:24:03 -参数 : [6, {}]
2021-06-07 17:24:03 -耗时 : 1
2021-06-07 17:24:03 -[THYMELEAF][http-nio-8088-exec-8] Exception processing template "mfrs/mfrs/edit": Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)
2021-06-07 17:24:03 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'mfrs_id' cannot be found on object of type 'com.shiguang.mfrs.domain.MfrsDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:24:13 -请求地址 : http://localhost:8088/mfrs/mfrs/batchRemove
2021-06-07 17:24:13 -HTTP METHOD : POST
2021-06-07 17:24:13 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.remove
2021-06-07 17:24:13 -参数 : [[Ljava.lang.Integer;@2e100821]
2021-06-07 17:24:13 -耗时 : 23
2021-06-07 17:24:13 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:24:13 -HTTP METHOD : GET
2021-06-07 17:24:13 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:24:13 -参数 : [{limit=10, offset=0}]
2021-06-07 17:24:13 -耗时 : 1
2021-06-07 17:24:14 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:24:14 -HTTP METHOD : GET
2021-06-07 17:24:14 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:24:14 -参数 : []
2021-06-07 17:24:14 -耗时 : 0
2021-06-07 17:25:23 -Starting BootdoApplication on WIN-BCBQAI9HSV3 with PID 13384 (F:\sg\shiguang\shiguang-manager\target\classes started by EDZ in F:\sg\shiguang)
2021-06-07 17:25:23 -The following profiles are active: dev
2021-06-07 17:25:23 -HV000001: Hibernate Validator 5.3.6.Final
2021-06-07 17:25:23 -Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:25:23 CST 2021]; root of context hierarchy
2021-06-07 17:25:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2021-06-07 17:25:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$43105862] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:25:24 -Bean 'shiroConfig' of type [com.shiguang.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$339b2364] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:25:24 -Bean 'userRealm' of type [com.shiguang.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:25:24 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:25:24 -Cache with name 'com.shiguang.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2021-06-07 17:25:24 -Added EhCache named [com.shiguang.system.shiro.UserRealm.authorizationCache]
2021-06-07 17:25:24 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:25:24 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:25:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:25:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-06-07 17:25:25 -Tomcat initialized with port(s): 8088 (http)
2021-06-07 17:25:25 -Starting service [Tomcat]
2021-06-07 17:25:25 -Starting Servlet Engine: Apache Tomcat/8.5.23
2021-06-07 17:25:25 -Initializing Spring embedded WebApplicationContext
2021-06-07 17:25:25 -Root WebApplicationContext: initialization completed in 1999 ms
2021-06-07 17:25:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2021-06-07 17:25:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2021-06-07 17:25:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2021-06-07 17:25:25 -Mapping filter: 'requestContextFilter' to: [/*]
2021-06-07 17:25:25 -Mapping filter: 'springSecurityFilterChain' to: [/*]
2021-06-07 17:25:25 -Filter xssFilter was not registered (disabled)
2021-06-07 17:25:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2021-06-07 17:25:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2021-06-07 17:25:25 -Mapping servlet: 'statViewServlet' to [/druid/*]
2021-06-07 17:25:25 -Mapping servlet: 'dispatcherServlet' to [/]
2021-06-07 17:25:25 -{dataSource-1} inited
2021-06-07 17:25:26 -Using default implementation for ThreadExecutor
2021-06-07 17:25:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2021-06-07 17:25:26 -Quartz Scheduler v.2.2.1 created.
2021-06-07 17:25:26 -RAMJobStore initialized.
2021-06-07 17:25:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2021-06-07 17:25:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2021-06-07 17:25:26 -Quartz scheduler version: 2.2.1
2021-06-07 17:25:26 -JobFactory set to: com.shiguang.common.quartz.factory.JobFactory@740b9a50
2021-06-07 17:25:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2021-06-07 17:25:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2021-06-07 17:25:27 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.add()
2021-06-07 17:25:27 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.remove(java.lang.Long[])
2021-06-07 17:25:27 -Mapped "{[/common/dict/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.update(com.shiguang.common.domain.DictDO)
2021-06-07 17:25:27 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.DictController.save(com.shiguang.common.domain.DictDO)
2021-06-07 17:25:27 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listType()
2021-06-07 17:25:27 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.shiguang.common.domain.DictDO> com.shiguang.common.controller.DictController.listByType(java.lang.String)
2021-06-07 17:25:27 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.dict()
2021-06-07 17:25:27 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2021-06-07 17:25:27 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.add()
2021-06-07 17:25:27 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2021-06-07 17:25:27 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.remove(java.lang.Long[])
2021-06-07 17:25:27 -Mapped "{[/common/sysFile/update]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.update(com.shiguang.common.domain.FileDO)
2021-06-07 17:25:27 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.save(com.shiguang.common.domain.FileDO)
2021-06-07 17:25:27 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.FileController.info(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.FileController.sysFile(org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2021-06-07 17:25:27 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.shiguang.common.controller.GeneratorController.list()
2021-06-07 17:25:27 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.shiguang.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:25:27 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.GeneratorController.generator()
2021-06-07 17:25:27 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.shiguang.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/common/generator/batchCode]}" onto public void com.shiguang.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2021-06-07 17:25:27 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.add()
2021-06-07 17:25:27 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.remove(java.lang.Long[])
2021-06-07 17:25:27 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.update(com.shiguang.common.domain.TaskDO)
2021-06-07 17:25:27 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.save(com.shiguang.common.domain.TaskDO)
2021-06-07 17:25:27 -Mapped "{[/common/job/info/{id}]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.info(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2021-06-07 17:25:27 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.JobController.taskScheduleJob()
2021-06-07 17:25:27 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.remove(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.shiguang.common.controller.LogController.log()
2021-06-07 17:25:27 -Mapped "{[/common/log/list],methods=[GET]}" onto com.shiguang.common.domain.PageDO<com.shiguang.common.domain.LogDO> com.shiguang.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.common.controller.LogController.batchRemove(java.lang.Long[])
2021-06-07 17:25:27 -Mapped "{[/error]}" onto public com.shiguang.common.utils.R com.shiguang.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:25:27 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.shiguang.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2021-06-07 17:25:27 -Mapped "{[/test/validate/repeat]}" onto public com.shiguang.common.utils.R com.shiguang.common.utils.UploadUtils.test(java.lang.String,java.lang.String) throws java.lang.Exception,java.lang.Exception,java.lang.Exception
2021-06-07 17:25:27 -Mapped "{[/mfrs/mfrs/add],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.add()
2021-06-07 17:25:27 -Mapped "{[/mfrs/mfrs/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer)
2021-06-07 17:25:27 -Mapped "{[/mfrs/mfrs/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.remove(java.lang.Integer[])
2021-06-07 17:25:27 -Mapped "{[/mfrs/mfrs/update]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.update(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:25:27 -Mapped "{[/mfrs/mfrs/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.mfrs.controller.MfrsController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/mfrs/mfrs/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.mfrs.controller.MfrsController.save(com.shiguang.mfrs.domain.MfrsDO)
2021-06-07 17:25:27 -Mapped "{[/mfrs/mfrs/edit/{mfrsId}],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/mfrs/mfrs],methods=[GET]}" onto java.lang.String com.shiguang.mfrs.controller.MfrsController.Mfrs()
2021-06-07 17:25:27 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.add()
2021-06-07 17:25:27 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.remove(java.lang.Long[])
2021-06-07 17:25:27 -Mapped "{[/oa/notify/update]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.update(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:25:27 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.oa.controller.NotifyController.save(com.shiguang.oa.domain.NotifyDO)
2021-06-07 17:25:27 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.message()
2021-06-07 17:25:27 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.oaNotify()
2021-06-07 17:25:27 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.shiguang.oa.controller.NotifyController.selefNotify()
2021-06-07 17:25:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.remove(java.lang.Long[])
2021-06-07 17:25:27 -Mapped "{[/system/sysDept/update]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.update(com.shiguang.system.domain.DeptDO)
2021-06-07 17:25:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.list()
2021-06-07 17:25:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.DeptController.save(com.shiguang.system.domain.DeptDO)
2021-06-07 17:25:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.DeptController.tree()
2021-06-07 17:25:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.treeView()
2021-06-07 17:25:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.DeptController.dept()
2021-06-07 17:25:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.index(org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.main()
2021-06-07 17:25:27 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.login()
2021-06-07 17:25:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.logout()
2021-06-07 17:25:27 -Mapped "{[/login],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2021-06-07 17:25:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.LoginController.welcome(org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.remove(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.update(com.shiguang.system.domain.MenuDO)
2021-06-07 17:25:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.MenuController.save(com.shiguang.system.domain.MenuDO)
2021-06-07 17:25:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.shiguang.common.domain.Tree<com.shiguang.system.domain.MenuDO> com.shiguang.system.controller.MenuController.tree()
2021-06-07 17:25:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.MenuController.menu(org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.add()
2021-06-07 17:25:27 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.update(com.shiguang.system.domain.RoleDO)
2021-06-07 17:25:27 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.shiguang.system.domain.RoleDO> com.shiguang.system.controller.RoleController.list()
2021-06-07 17:25:27 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.save(com.shiguang.system.domain.RoleDO)
2021-06-07 17:25:27 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.batchRemove(java.lang.Long[])
2021-06-07 17:25:27 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.role()
2021-06-07 17:25:27 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/sys/role/updateEnable]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.RoleController.updateEnable(java.lang.Long,java.lang.Integer)
2021-06-07 17:25:27 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.shiguang.system.domain.UserOnline> com.shiguang.system.controller.SessionController.list()
2021-06-07 17:25:27 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.shiguang.system.controller.SessionController.online()
2021-06-07 17:25:27 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.shiguang.common.utils.R com.shiguang.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2021-06-07 17:25:27 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.shiguang.system.controller.SessionController.sessionList()
2021-06-07 17:25:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.shiguang.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.add(org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.remove(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.update(com.shiguang.system.domain.UserDO)
2021-06-07 17:25:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.shiguang.common.utils.PageUtils com.shiguang.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.save(com.shiguang.system.domain.UserDO)
2021-06-07 17:25:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.batchRemove(java.lang.Long[])
2021-06-07 17:25:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.shiguang.common.domain.Tree<com.shiguang.system.domain.DeptDO> com.shiguang.system.controller.UserController.tree()
2021-06-07 17:25:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.user(org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.treeView()
2021-06-07 17:25:27 -Mapped "{[/sys/user/sysupdate],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.sysupdate(com.shiguang.system.domain.UserDO)
2021-06-07 17:25:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.updatePeronal(com.shiguang.system.domain.UserDO)
2021-06-07 17:25:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.resetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:25:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:25:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.shiguang.common.utils.R com.shiguang.system.controller.UserController.adminResetPwd(com.shiguang.system.vo.UserVO)
2021-06-07 17:25:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.personal(org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/sys/user/sysedit],methods=[GET]}" onto java.lang.String com.shiguang.system.controller.UserController.sysedit(org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/information/users/add],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.add()
2021-06-07 17:25:27 -Mapped "{[/information/users/remove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long)
2021-06-07 17:25:27 -Mapped "{[/information/users/batchRemove],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.remove(java.lang.Long[])
2021-06-07 17:25:27 -Mapped "{[/information/users/update]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.update(com.shiguang.users.domain.UserDO)
2021-06-07 17:25:27 -Mapped "{[/information/users/list],methods=[GET]}" onto public com.shiguang.common.utils.PageUtils com.shiguang.users.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2021-06-07 17:25:27 -Mapped "{[/information/users/save],methods=[POST]}" onto public com.shiguang.common.utils.R com.shiguang.users.controller.UserController.save(com.shiguang.users.domain.UserDO)
2021-06-07 17:25:27 -Mapped "{[/information/users],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.User()
2021-06-07 17:25:27 -Mapped "{[/information/users/edit/{id}],methods=[GET]}" onto java.lang.String com.shiguang.users.controller.UserController.edit(java.lang.Integer,org.springframework.ui.Model)
2021-06-07 17:25:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2021-06-07 17:25:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2021-06-07 17:25:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2021-06-07 17:25:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2021-06-07 17:25:27 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2021-06-07 17:25:27 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2021-06-07 17:25:27 -Initializing ExecutorService  'brokerChannelExecutor'
2021-06-07 17:25:27 -Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@29215f06: startup date [Mon Jun 07 17:25:23 CST 2021]; root of context hierarchy
2021-06-07 17:25:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:25:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:25:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:25:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2021-06-07 17:25:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2021-06-07 17:25:28 -ClassTemplateLoader for Spring macros added to FreeMarker configuration
2021-06-07 17:25:28 -

Using default security password: a5c8ec4f-6ab1-460e-b8ac-81ed25ed7a11

2021-06-07 17:25:28 -Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2021-06-07 17:25:28 -Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@72585e83, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b64bf61, org.springframework.security.web.context.SecurityContextPersistenceFilter@3265995e, org.springframework.security.web.header.HeaderWriterFilter@27ec74a3, org.springframework.security.web.csrf.CsrfFilter@6f428e6e, org.springframework.security.web.authentication.logout.LogoutFilter@148fca83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15ad5acb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57a5b03, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d5bb5c, org.springframework.security.web.session.SessionManagementFilter@b8142f4, org.springframework.security.web.access.ExceptionTranslationFilter@38b54694]
2021-06-07 17:25:28 -Registering beans for JMX exposure on startup
2021-06-07 17:25:28 -Bean with name 'dataSource' has been autodetected for JMX exposure
2021-06-07 17:25:28 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2021-06-07 17:25:28 -Starting beans in phase 2147483647
2021-06-07 17:25:28 -Context refreshed
2021-06-07 17:25:28 -Found 1 custom documentation plugin(s)
2021-06-07 17:25:28 -Scanning for api listing references
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_1
2021-06-07 17:25:29 -Generating unique operation named: addUsingGET_1
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_1
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_1
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_2
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_3
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_1
2021-06-07 17:25:29 -Generating unique operation named: updateUsingGET_1
2021-06-07 17:25:29 -Generating unique operation named: updateUsingHEAD_1
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_1
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPUT_1
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPATCH_1
2021-06-07 17:25:29 -Generating unique operation named: updateUsingDELETE_1
2021-06-07 17:25:29 -Generating unique operation named: updateUsingOPTIONS_1
2021-06-07 17:25:29 -Generating unique operation named: updateUsingTRACE_1
2021-06-07 17:25:29 -Generating unique operation named: addUsingGET_2
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_2
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_2
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_4
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_5
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_2
2021-06-07 17:25:29 -Generating unique operation named: updateUsingGET_2
2021-06-07 17:25:29 -Generating unique operation named: updateUsingHEAD_2
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_2
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPUT_2
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPATCH_2
2021-06-07 17:25:29 -Generating unique operation named: updateUsingDELETE_2
2021-06-07 17:25:29 -Generating unique operation named: updateUsingOPTIONS_2
2021-06-07 17:25:29 -Generating unique operation named: updateUsingTRACE_2
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_3
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_3
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_3
2021-06-07 17:25:29 -Generating unique operation named: addUsingGET_3
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_4
2021-06-07 17:25:29 -Generating unique operation named: infoUsingGET_1
2021-06-07 17:25:29 -Generating unique operation named: infoUsingHEAD_1
2021-06-07 17:25:29 -Generating unique operation named: infoUsingPOST_1
2021-06-07 17:25:29 -Generating unique operation named: infoUsingPUT_1
2021-06-07 17:25:29 -Generating unique operation named: infoUsingPATCH_1
2021-06-07 17:25:29 -Generating unique operation named: infoUsingDELETE_1
2021-06-07 17:25:29 -Generating unique operation named: infoUsingOPTIONS_1
2021-06-07 17:25:29 -Generating unique operation named: infoUsingTRACE_1
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_4
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_6
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_7
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_3
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_4
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_5
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_8
2021-06-07 17:25:29 -Generating unique operation named: welcomeUsingGET_1
2021-06-07 17:25:29 -Generating unique operation named: addUsingGET_4
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_5
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_6
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_9
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_4
2021-06-07 17:25:29 -Generating unique operation named: treeUsingGET_1
2021-06-07 17:25:29 -Generating unique operation named: treeUsingGET_2
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_5
2021-06-07 17:25:29 -Generating unique operation named: addUsingGET_5
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_6
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_7
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_10
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_11
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_5
2021-06-07 17:25:29 -Generating unique operation named: updateUsingGET_3
2021-06-07 17:25:29 -Generating unique operation named: updateUsingHEAD_3
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_6
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPUT_3
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPATCH_3
2021-06-07 17:25:29 -Generating unique operation named: updateUsingDELETE_3
2021-06-07 17:25:29 -Generating unique operation named: updateUsingOPTIONS_3
2021-06-07 17:25:29 -Generating unique operation named: updateUsingTRACE_3
2021-06-07 17:25:29 -Generating unique operation named: addUsingGET_6
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_7
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_8
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_12
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_13
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_6
2021-06-07 17:25:29 -Generating unique operation named: updateUsingGET_4
2021-06-07 17:25:29 -Generating unique operation named: updateUsingHEAD_4
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_7
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPUT_4
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPATCH_4
2021-06-07 17:25:29 -Generating unique operation named: updateUsingDELETE_4
2021-06-07 17:25:29 -Generating unique operation named: updateUsingOPTIONS_4
2021-06-07 17:25:29 -Generating unique operation named: updateUsingTRACE_4
2021-06-07 17:25:29 -Generating unique operation named: addUsingGET_7
2021-06-07 17:25:29 -Generating unique operation named: batchRemoveUsingPOST_1
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_8
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_9
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_7
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_8
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_8
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_10
2021-06-07 17:25:29 -Generating unique operation named: listUsingHEAD_1
2021-06-07 17:25:29 -Generating unique operation named: listUsingPOST_1
2021-06-07 17:25:29 -Generating unique operation named: listUsingPUT_1
2021-06-07 17:25:29 -Generating unique operation named: listUsingPATCH_1
2021-06-07 17:25:29 -Generating unique operation named: listUsingDELETE_1
2021-06-07 17:25:29 -Generating unique operation named: listUsingOPTIONS_1
2021-06-07 17:25:29 -Generating unique operation named: listUsingTRACE_1
2021-06-07 17:25:29 -Generating unique operation named: addUsingGET_8
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_9
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_11
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_14
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_15
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_9
2021-06-07 17:25:29 -Generating unique operation named: updateUsingGET_5
2021-06-07 17:25:29 -Generating unique operation named: updateUsingHEAD_5
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_9
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPUT_5
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPATCH_5
2021-06-07 17:25:29 -Generating unique operation named: updateUsingDELETE_5
2021-06-07 17:25:29 -Generating unique operation named: updateUsingOPTIONS_5
2021-06-07 17:25:29 -Generating unique operation named: updateUsingTRACE_5
2021-06-07 17:25:29 -Generating unique operation named: addUsingGET_9
2021-06-07 17:25:29 -Generating unique operation named: batchRemoveUsingPOST_2
2021-06-07 17:25:29 -Generating unique operation named: editUsingGET_10
2021-06-07 17:25:29 -Generating unique operation named: listUsingGET_12
2021-06-07 17:25:29 -Generating unique operation named: removeUsingPOST_16
2021-06-07 17:25:29 -Generating unique operation named: saveUsingPOST_10
2021-06-07 17:25:29 -Generating unique operation named: treeUsingGET_3
2021-06-07 17:25:29 -Generating unique operation named: treeViewUsingGET_1
2021-06-07 17:25:29 -Generating unique operation named: updateUsingPOST_10
2021-06-07 17:25:29 -Starting Quartz Scheduler now
2021-06-07 17:25:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2021-06-07 17:25:29 -Starting...
2021-06-07 17:25:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2021-06-07 17:25:29 -Started.
2021-06-07 17:25:29 -Initializing ProtocolHandler ["http-nio-8088"]
2021-06-07 17:25:29 -Starting ProtocolHandler ["http-nio-8088"]
2021-06-07 17:25:29 -Using a shared selector for servlet write/read
2021-06-07 17:25:29 -Tomcat started on port(s): 8088 (http)
2021-06-07 17:25:29 -Started BootdoApplication in 7.028 seconds (JVM running for 7.674)
2021-06-07 17:26:27 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2021-06-07 17:27:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2021-06-07 17:27:05 -FrameworkServlet 'dispatcherServlet': initialization started
2021-06-07 17:27:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
2021-06-07 17:27:05 -Enabling session validation scheduler...
2021-06-07 17:27:05 -请求地址 : http://localhost:8088/login;JSESSIONID=1f9b52ed-ac10-4335-9271-b442bde27920
2021-06-07 17:27:05 -HTTP METHOD : GET
2021-06-07 17:27:05 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:27:05 -参数 : []
2021-06-07 17:27:05 -耗时 : 1
2021-06-07 17:27:05 -[THYMELEAF] INITIALIZING TEMPLATE ENGINE
2021-06-07 17:27:05 -[THYMELEAF] INITIALIZING TEMPLATE RESOLVER: org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
2021-06-07 17:27:05 -[THYMELEAF] TEMPLATE RESOLVER INITIALIZED OK
2021-06-07 17:27:05 -[THYMELEAF] INITIALIZING MESSAGE RESOLVER: org.thymeleaf.spring4.messageresolver.SpringMessageResolver
2021-06-07 17:27:05 -[THYMELEAF] MESSAGE RESOLVER INITIALIZED OK
2021-06-07 17:27:05 -[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Cache Factory implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template modes:
[THYMELEAF]     * VALIDXML
[THYMELEAF]     * VALIDXHTML
[THYMELEAF]     * XML
[THYMELEAF]     * LEGACYHTML5
[THYMELEAF]     * HTML5
[THYMELEAF]     * XHTML
[THYMELEAF] * Template resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers (in order):
[THYMELEAF]     * org.thymeleaf.spring4.messageresolver.SpringMessageResolver
[THYMELEAF] * Dialect [1 of 3]: org.thymeleaf.spring4.dialect.SpringStandardDialect
[THYMELEAF]     * Prefix: "th"
[THYMELEAF] * Dialect [2 of 3]: at.pollux.thymeleaf.shiro.dialect.ShiroDialect
[THYMELEAF]     * Prefix: "shiro"
[THYMELEAF] * Dialect [3 of 3]: nz.net.ultraq.thymeleaf.LayoutDialect
[THYMELEAF]     * Prefix: "layout"
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
2021-06-07 17:27:05 -[THYMELEAF] TEMPLATE ENGINE INITIALIZED
2021-06-07 17:27:07 -请求地址 : http://localhost:8088/login
2021-06-07 17:27:07 -HTTP METHOD : POST
2021-06-07 17:27:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:27:07 -参数 : [admin, Dm202007sc]
2021-06-07 17:27:07 -耗时 : 6
2021-06-07 17:27:07 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2021-06-07 17:27:07 -请求地址 : http://localhost:8088/index
2021-06-07 17:27:07 -HTTP METHOD : GET
2021-06-07 17:27:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:27:07 -参数 : [{}]
2021-06-07 17:27:07 -耗时 : 20
2021-06-07 17:27:07 -请求地址 : http://localhost:8088/main
2021-06-07 17:27:07 -HTTP METHOD : GET
2021-06-07 17:27:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:27:07 -参数 : []
2021-06-07 17:27:07 -耗时 : 0
2021-06-07 17:27:07 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:27:07 -HTTP METHOD : GET
2021-06-07 17:27:07 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:27:07 -参数 : []
2021-06-07 17:27:07 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:27:07 -请求地址 : http://localhost:8088/main
2021-06-07 17:27:07 -HTTP METHOD : GET
2021-06-07 17:27:07 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:27:07 -参数 : []
2021-06-07 17:27:07 -耗时 : 0
2021-06-07 17:27:09 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:27:09 -HTTP METHOD : GET
2021-06-07 17:27:09 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:27:09 -参数 : []
2021-06-07 17:27:09 -耗时 : 0
2021-06-07 17:27:09 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:27:09 -HTTP METHOD : GET
2021-06-07 17:27:09 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:27:09 -参数 : [{limit=10, offset=0}]
2021-06-07 17:27:09 -耗时 : 11
2021-06-07 17:27:13 -请求地址 : http://localhost:8088/mfrs/mfrs/edit/1
2021-06-07 17:27:13 -HTTP METHOD : GET
2021-06-07 17:27:13 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.edit
2021-06-07 17:27:13 -参数 : [1, {}]
2021-06-07 17:27:13 -耗时 : 3
2021-06-07 17:27:13 -[THYMELEAF][http-nio-8088-exec-5] Exception processing template "mfrs/mfrs/edit": Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)
2021-06-07 17:27:13 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "mfrs.mfrs_id" (mfrs/mfrs/edit)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'mfrs_id' cannot be found on object of type 'com.shiguang.mfrs.domain.MfrsDO' - maybe not public?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:226)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:94)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:46)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:379)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:88)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:121)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:324)
	at org.thymeleaf.spring4.expression.SpelVariableExpressionEvaluator.evaluate(SpelVariableExpressionEvaluator.java:140)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariable(VariableExpression.java:154)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:59)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:103)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:133)
	at org.thymeleaf.standard.processor.attr.AbstractStandardSingleAttributeModifierAttrProcessor.getTargetAttributeValue(AbstractStandardSingleAttributeModifierAttrProcessor.java:86)
	at org.thymeleaf.spring4.processor.attr.SpringValueAttrProcessor.getTargetAttributeValue(SpringValueAttrProcessor.java:71)
	at org.thymeleaf.processor.attr.AbstractSingleAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractSingleAttributeModifierAttrProcessor.java:59)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1286)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1041)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:984)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:27:16 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 17:27:16 -HTTP METHOD : GET
2021-06-07 17:27:16 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 17:27:16 -参数 : [{}]
2021-06-07 17:27:16 -耗时 : 0
2021-06-07 17:27:16 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:27:16 -HTTP METHOD : GET
2021-06-07 17:27:16 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:27:16 -参数 : [{sort=order_num}]
2021-06-07 17:27:16 -耗时 : 11
2021-06-07 17:28:04 -请求地址 : http://localhost:8088/sys/menu/edit/283
2021-06-07 17:28:04 -HTTP METHOD : GET
2021-06-07 17:28:04 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:28:04 -参数 : [{}, 283]
2021-06-07 17:28:04 -耗时 : 8
2021-06-07 17:28:10 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:28:10 -HTTP METHOD : POST
2021-06-07 17:28:10 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:28:10 -参数 : [MenuDO{menuId=283, parentId=280, name='修改', url='', perms='oa:notify:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:28:10 -耗时 : 50
2021-06-07 17:28:10 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:28:10 -HTTP METHOD : GET
2021-06-07 17:28:10 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:28:10 -参数 : [{sort=order_num}]
2021-06-07 17:28:10 -耗时 : 6
2021-06-07 17:28:13 -请求地址 : http://localhost:8088/
2021-06-07 17:28:13 -HTTP METHOD : GET
2021-06-07 17:28:13 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 17:28:13 -参数 : [{}]
2021-06-07 17:28:13 -耗时 : 0
2021-06-07 17:28:13 -请求地址 : http://localhost:8088/login
2021-06-07 17:28:13 -HTTP METHOD : GET
2021-06-07 17:28:13 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:28:13 -参数 : []
2021-06-07 17:28:13 -耗时 : 0
2021-06-07 17:28:15 -请求地址 : http://localhost:8088/login
2021-06-07 17:28:15 -HTTP METHOD : POST
2021-06-07 17:28:15 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:28:15 -参数 : [admin, Dm202007sc]
2021-06-07 17:28:15 -耗时 : 3
2021-06-07 17:28:15 -请求地址 : http://localhost:8088/index
2021-06-07 17:28:15 -HTTP METHOD : GET
2021-06-07 17:28:15 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:28:15 -参数 : [{}]
2021-06-07 17:28:15 -耗时 : 5
2021-06-07 17:28:15 -请求地址 : http://localhost:8088/main
2021-06-07 17:28:15 -HTTP METHOD : GET
2021-06-07 17:28:15 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:28:15 -参数 : []
2021-06-07 17:28:15 -耗时 : 0
2021-06-07 17:28:15 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:28:15 -HTTP METHOD : GET
2021-06-07 17:28:15 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:28:15 -参数 : []
2021-06-07 17:28:15 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor123.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:28:15 -请求地址 : http://localhost:8088/main
2021-06-07 17:28:15 -HTTP METHOD : GET
2021-06-07 17:28:15 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:28:15 -参数 : []
2021-06-07 17:28:15 -耗时 : 0
2021-06-07 17:28:17 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:28:17 -HTTP METHOD : GET
2021-06-07 17:28:17 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:28:17 -参数 : []
2021-06-07 17:28:17 -耗时 : 0
2021-06-07 17:28:17 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:28:17 -HTTP METHOD : GET
2021-06-07 17:28:17 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:28:17 -参数 : [{limit=10, offset=0}]
2021-06-07 17:28:17 -耗时 : 3
2021-06-07 17:28:26 -请求地址 : http://localhost:8088/mfrs/mfrs/add
2021-06-07 17:28:26 -HTTP METHOD : GET
2021-06-07 17:28:26 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.add
2021-06-07 17:28:26 -参数 : []
2021-06-07 17:28:26 -耗时 : 0
2021-06-07 17:28:29 -请求地址 : http://localhost:8088/mfrs/mfrs/save
2021-06-07 17:28:29 -HTTP METHOD : POST
2021-06-07 17:28:29 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.save
2021-06-07 17:28:29 -参数 : [com.shiguang.mfrs.domain.MfrsDO@5722431b]
2021-06-07 17:28:29 -耗时 : 38
2021-06-07 17:28:29 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:28:29 -HTTP METHOD : GET
2021-06-07 17:28:29 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:28:29 -参数 : [{limit=10, offset=0}]
2021-06-07 17:28:29 -耗时 : 3
2021-06-07 17:28:38 -请求地址 : http://localhost:8088/sys/menu/
2021-06-07 17:28:38 -HTTP METHOD : GET
2021-06-07 17:28:38 -CLASS_METHOD : com.shiguang.system.controller.MenuController.menu
2021-06-07 17:28:38 -参数 : [{}]
2021-06-07 17:28:38 -耗时 : 0
2021-06-07 17:28:38 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:28:38 -HTTP METHOD : GET
2021-06-07 17:28:38 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:28:38 -参数 : [{sort=order_num}]
2021-06-07 17:28:38 -耗时 : 6
2021-06-07 17:28:56 -请求地址 : http://localhost:8088/sys/menu/edit/283
2021-06-07 17:28:56 -HTTP METHOD : GET
2021-06-07 17:28:56 -CLASS_METHOD : com.shiguang.system.controller.MenuController.edit
2021-06-07 17:28:56 -参数 : [{}, 283]
2021-06-07 17:28:56 -耗时 : 6
2021-06-07 17:29:19 -请求地址 : http://localhost:8088/sys/menu/update
2021-06-07 17:29:19 -HTTP METHOD : POST
2021-06-07 17:29:19 -CLASS_METHOD : com.shiguang.system.controller.MenuController.update
2021-06-07 17:29:19 -参数 : [MenuDO{menuId=283, parentId=280, name='修改', url='/oa/notify/update', perms='oa:notify:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}]
2021-06-07 17:29:19 -耗时 : 44
2021-06-07 17:29:19 -请求地址 : http://localhost:8088/sys/menu/list
2021-06-07 17:29:19 -HTTP METHOD : GET
2021-06-07 17:29:19 -CLASS_METHOD : com.shiguang.system.controller.MenuController.list
2021-06-07 17:29:19 -参数 : [{sort=order_num}]
2021-06-07 17:29:19 -耗时 : 4
2021-06-07 17:29:21 -请求地址 : http://localhost:8088/
2021-06-07 17:29:21 -HTTP METHOD : GET
2021-06-07 17:29:21 -CLASS_METHOD : com.shiguang.system.controller.LoginController.welcome
2021-06-07 17:29:21 -参数 : [{}]
2021-06-07 17:29:21 -耗时 : 0
2021-06-07 17:29:21 -请求地址 : http://localhost:8088/login
2021-06-07 17:29:21 -HTTP METHOD : GET
2021-06-07 17:29:21 -CLASS_METHOD : com.shiguang.system.controller.LoginController.login
2021-06-07 17:29:21 -参数 : []
2021-06-07 17:29:21 -耗时 : 1
2021-06-07 17:29:22 -请求地址 : http://localhost:8088/login
2021-06-07 17:29:22 -HTTP METHOD : POST
2021-06-07 17:29:22 -CLASS_METHOD : com.shiguang.system.controller.LoginController.ajaxLogin
2021-06-07 17:29:22 -参数 : [admin, Dm202007sc]
2021-06-07 17:29:22 -耗时 : 2
2021-06-07 17:29:22 -请求地址 : http://localhost:8088/index
2021-06-07 17:29:22 -HTTP METHOD : GET
2021-06-07 17:29:22 -CLASS_METHOD : com.shiguang.system.controller.LoginController.index
2021-06-07 17:29:22 -参数 : [{}]
2021-06-07 17:29:22 -耗时 : 6
2021-06-07 17:29:22 -请求地址 : http://localhost:8088/main
2021-06-07 17:29:22 -HTTP METHOD : GET
2021-06-07 17:29:22 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:29:22 -参数 : []
2021-06-07 17:29:22 -耗时 : 0
2021-06-07 17:29:22 -请求地址 : http://localhost:8088/oa/notify/message
2021-06-07 17:29:22 -HTTP METHOD : GET
2021-06-07 17:29:22 -CLASS_METHOD : com.shiguang.oa.controller.NotifyController.message
2021-06-07 17:29:22 -参数 : []
2021-06-07 17:29:22 -Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.shiguang.oa.dao.NotifyDao.listDTO
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy114.listDTO(Unknown Source)
	at com.shiguang.oa.service.impl.NotifyServiceImpl.selfList(NotifyServiceImpl.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy117.selfList(Unknown Source)
	at com.shiguang.oa.controller.NotifyController.message(NotifyController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:741)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)
	at com.shiguang.common.aspect.WebLogAspect.doAround(WebLogAspect.java:60)
	at sun.reflect.GeneratedMethodAccessor123.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.shiguang.oa.controller.NotifyController$$EnhancerBySpringCGLIB$$b22aa0da.message(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2021-06-07 17:29:22 -请求地址 : http://localhost:8088/main
2021-06-07 17:29:22 -HTTP METHOD : GET
2021-06-07 17:29:22 -CLASS_METHOD : com.shiguang.system.controller.LoginController.main
2021-06-07 17:29:22 -参数 : []
2021-06-07 17:29:22 -耗时 : 0
2021-06-07 17:29:29 -请求地址 : http://localhost:8088/mfrs/mfrs
2021-06-07 17:29:29 -HTTP METHOD : GET
2021-06-07 17:29:29 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.Mfrs
2021-06-07 17:29:29 -参数 : []
2021-06-07 17:29:29 -耗时 : 1
2021-06-07 17:29:30 -请求地址 : http://localhost:8088/mfrs/mfrs/list
2021-06-07 17:29:30 -HTTP METHOD : GET
2021-06-07 17:29:30 -CLASS_METHOD : com.shiguang.mfrs.controller.MfrsController.list
2021-06-07 17:29:30 -参数 : [{limit=10, offset=0}]
2021-06-07 17:29:30 -耗时 : 3
